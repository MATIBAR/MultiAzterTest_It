                                    2.3_HELBIDERATZEMODUAK 2.3.1 SARRERA Dagoeneko aipatu den moduan, konputagailuak 1ekoen eta 0koen segidak —behe- mailako aginduak— exekutatzen ditu. Agindu horiek konputagailu horren makina- hizkuntza osatzen dute, edo, mnemoteknikoen bidez adierazita, mihiztadura- hizkuntza. Konputagailu bakoitzak berezko makina-hizkuntza erabiltzen du, eta hizkuntza hori erabat erlazionaturik dago prozesadoreko hardwarearekin. Makina-hizkuntzen ezaugarri nagusiak hauek dira: • agindu-multzoa, hau da, exekuta daitezkeen aginduak • aginduen formatua, hots, nola egituratzen den informazioa • eragigai kopurua • helbideratze-moduak • datuen formatua Makina-hizkuntzako agindu batek eragiketa bat eta bere eragigaiak adierazten ditu. Beraz, aginduetan hiru atal bereizten dira: (a) eragiketa-kodea, egin nahi den eragiketa adierazteko; (b) iturburu-eragigaiak, eragiketa egiteko behar diren datuak nola eskura daitezkeen adierazteko; eta (c) helburu- eragigaia, eragiketaren emaitza non gorde behar den adierazteko. Informazio hori guztia, hots, agindua bera, bit-segida baten bidez adierazten da, eta memorian gordetzen. Kapitulu honetan, aginduak kodetzeko erak azalduko dira, eta, horrez gainera, aginduen kodeketak konputagailuaren eraginkortasunean izan dezakeen eragina. 2.3.2 AGINDU-FORMATUA Esan bezala, aginduaren informazioa bit-segida batean gordetzen da; hor adierazten da, hainbat eremutan banatuta, zer eragiketa bete behar den, zer eragigai erabili behar diren, eta emaitza non gorde behar den. Informazio hori guztia egituratzeko erabiltzen den formatuari agindu-formatuaderitzo. Adibide gisa, lau eremuko agindu baten formatua ageri da 2.3.1 irudian.       Eragiketa-kodea    Helburu-eragigaia    1. Iturburu-   2. Iturburu-eragigaia                                            eragigaia      ****** 2.3.1irudia. Lau eremuko agindu-formatu baten adibidea. ****** Hurrengo ataletan, agindu-formatuen osagaiak eta haien kodeketa aztertuko ditugu. 2.3.2.1 Aginduaren luzera Agindu-multzo bat diseinatu behar denean, parametro asko erabaki behar da, eta haien artean aginduen luzera, hots, aginduak adierazteko erabili behar den bit kopurua. Erabaki hori hartzeko, irizpide asko erabil daitezke; erabakiaren arabera, aginduen bilaketa fasea errazagoa edo konplexuagoa izango da. Hauek dira aukera nagusiak:   a. Luzera finkoko formatua: agindu guztiak tamaina edo bit kopuru berekoak dira. Luzera finkoko formatuaren abantaila nagusia aginduen bilaketa fasean ageri da, memoriatik irakurri behar den bit kopurua beti bera baita, edozein agindutarako. Baina, beste alde batetik, memoria-edukiera ez da modu egokian aprobetxatzen; izan ere, hainbat agindutan ez dira eremu guztiak erabili behar, eta, agindu guztiak tamaina berekoak direnez, eremu horiei dagozkien bitak alferrik okupatuko dira memorian. BIRD konputagailuaren agindu guztiak luzera finkokoak dira, 32 bitekoak.   b. Luzera aldakorreko formatua: aginduak tamaina edo bit kopuru desberdinekoak dira. Tamaina aldakorra denez, aginduan bertan adierazi beharko da haren luzera, eragiketa-kodean edo eremu jakin batean. Eragiketa-kodean adierazten bada, aginduaren luzera ez da ezagutuko deskodeketa egin arte. Luzera aldakorreko formatuaren abantailak eta eragozpenak luzera finkokoaren kontrakoak dira. Batetik, aginduaren bilaketa konplexuagoa da (ez baitakigu zenbat bit irakurri behar diren agindu osoa eskuratzeko), baina, bestetik, hobeto aprobetxatuko da memoria, agindu bakoitzak behar duen espazioa bakarrik okupatuko baitu (hala ere, aginduek okupatzen duten memoria-espazioa ez da, gaur egun, oso parametro kritikoa). 2.3.2.2 Eragiketa-kodearen formatua Eragiketa-kodeak adierazten du exekutatu behar den eragiketa, eta, jakina, agindu guztiak kodetu ahal izateko adina bit behar du. Aginduaren formatuarekin gertatzen den bezala, finkoa nahiz aldakorra izan daiteke eragiketa-kodearen luzera. Egiten den hautuaren arabera, errazagoa edo zailagoa izango da aginduen deskodeketa. 2.3.2.2.1 Luzera finkoko eragiketa-kodea Eragiketa-kodeak bit kopuru finkoa du, agindu guztietan bera. Kodetu behar den agindu kopuruak zedarrituko du luzera (l):                           l = log2 (agindu kopurua)   Adibidez, BIRD konputagailuan, luzera finkokoa da aginduen eragiketa-kodea. 42 agindu desberdin definitu direnez, 6 bit behar dira kode horiek adierazteko. Eragiketa-kodea luzera finkokoa denean, errazagoa da aginduen deskodeketa, aldez aurretik ezagutzen baita zenbat eta zein bitek osatzen duten eragiketa- kodea. Hala ere, kodetu behar den agindu kopurua handia bada, bit asko erabili beharko da eragiketa-kodea adierazteko; ondorioz, luzeagoak izango dira aginduak, edo, bestela, aginduen luzera mugatu nahi bada, bit gutxi geratuko dira eragigaiak adierazteko. Adibide honetan ageri da arazo hori.   2.3.1 Adibidea Konputagailu baten agindu-multzoa diseinatu behar da. Agindu-multzoak 76 agindu ditu, honela banatuta: • hiru eragigaiko 15 agindu • bi eragigaiko 14 agindu • eragigai bakarreko 31 agindu • eragigairik gabeko 16 agindu Eragigai bakoitza 4 bitetan kodetu behar da, eta aginduek luzera finkokoak izan behar dute, 16 bitekoak. Egin daiteke kodeketa hori luzera finkoko eragiketa- kodeak erabiliz? Eragiketa-kodea luzera finkokoa izanik, 76 agindu kodetu ahal izateko, 7 bit behar dira (log276 = 6,25 → 7). Ondorioz, eragigairik gabeko aginduak 7 bitekoak izango dira; eragigai bakarrekoak, 7 + 4 = 11 bitekoak; bi eragigaikoak, 7 + 24 = 15 bitekoak; eta, azkenik, hiru eragigaikoak, 7 + 34 = 19 bitekoak. Aginduek 16 bitekoak izan behar dutenez, lehenengo hiru formatuak arazorik gabe kodetu daitezke, 16 bit baino gutxiago behar dituztelako (bit batzuk erabili gabe geratuko dira); azkenak, berriz, bit gehiago beharko luke. Ondorioz, ezinezkoa da 16 biteko formatu finko batekin agindu horiek guztiak kodetzea. Beraz, aurreko aginduak 16 bitetan kodetu behar badira, beste kodetze- estrategiak eta formatuak erabili beharko dira. Hurrengo ataletan, estrategia horiek landuko ditugu.     2.3.2.2.2 Luzera aldakorreko eragiketa-kodea Aginduen eragiketa-kodea luzera aldakorrekoa izan daiteke. Izan ere, agindu guztiek ez dute eragigai kopuru bera erabiltzen; beraz, eragigai gutxi duten aginduek eragiketa-kode luzeagoak eduki ditzakete, eta eragigai asko dutenek, berriz, laburragoak. Estrategia hori erabiliz, txikiagoa da, batez beste, aginduen luzera, edo, luzerari eutsi nahi bazaio, eragigai gehiago adieraz daitezke. Hala ere, eragiketa-kodeak luzera desberdinekoak direnez, konplexuagoa izango da aginduen deskodeketa. Izan ere, ez dakigu zenbat bit deskodetu behar diren; beraz, zatika egin beharko da deskodeketa. Hasteko, bit kopuru jakin bat analizatu beharko da: eragiketa-kode bat osatzen duen kopuru minimoa, hain zuzen ere. Bit horiek adieraziko dute nahikoa den ala bit gehiago deskodetu behar diren; bigarren kasuan, jarraitu beharko da prozesuarekin, eragiketa-kode osoa deskodetu arte. Luzera aldakorreko kodeak diseinatzeko bi teknika nagusiak hauek dira: kode zabalduak eta Huffman kodeak. Kode zabalduak, besteak beste, PDP-11 prozesadorean erabili ziren, eta Huffman kodeak (edo antzeko ideia bat) Motorola MC68000 prozesadorean.   2.3.2.3 Eragigaien formatua. Helbideratze-moduak. Eragiketa-kodea adierazteko erak aztertu ondoren, eta aginduen kodeketarekin jarraituz, eragigaien formatua analizatu behar dugu. Agindu batean erabili behar diren eragigaiak modu askotan adieraz daitezke, haien helbideratze-moduen arabera. Beraz, aginduen formatua definitzeko, eragigaien helbideratze-moduak aztertu behar dira. Helbideratze-moduek adierazten digute nola lortu eragigaiak eragiketa baterako eta non gorde eragiketaren emaitza (memorian, erregistro batean, ...). Eragigaien helbideratze-modua izan daiteke (2.3.2 irudia):   • esplizitua: eragigaia adierazten duten bitetako batzuek helbideratze-modua adierazten dute; gainerakoek, berriz, eragigaiari buruzko informazio gehiago ematen dute (datua bera, erregistro bat, memoria-helbide bat, ...). Hala egiten denean, eragiketa-kode bakar bat erabiltzen da eragiketa jakin bat egiteko (esaterako, eragiketa-kode bera erregistroen arteko batuketa edo erregistro bat eta berehalako bat batzeko, hots, kode bakar bat batuketarako).   • inplizitua: aginduaren eragiketa-kodeak berak adierazten ditu eragigaien helbideratze-moduak. Beraz, eragigaiak modu desberdinetan adierazi ahal izateko, eragiketa-kode desberdinak erabili behar dira, nahiz eta eragiketa bera izan. Ondorioz, bit gehiago beharko dira eragiketa-kodeak adierazteko.             E.K.         ...         HM         balioa             ...                                         (a)         E.K. (HM)              ...              balioa             ...                                         (b) ****** 2.3.2 irudia.Eragigaien formatua: (a) helbideratze-modu esplizitua; eta        (b) helbideratze-modu inplizitua. HM = helbideratze-modua. ****** TXORI hizkuntzan, inplizituak dira eragigaien helbideratze-moduak, eragiketa- kodeek adierazten baitituzte. Esaterako, mov eta movi aginduek eragiketa bera egiten dute, baina bigarren eragigaiaren helbideratze-modua desberdina da: lehenengoak, erregistro bidezko zuzenekoa erabiltzen du, eta, bigarrenak, berriz, berehalakoa. Beraz, eragiketa-kode desberdinak izango dituzte bi agindu horiek. Oro har, helbideratze-modu asko erabiltzen dira eragigaiak adierazteko. Izan ere, hainbat datu-mota (konstanteak, aldagai eskalarrak, bektoreak, matrizeak, pilak, ilarak, erregistroak, ...) prozesatu behar dira, eta eraginkorra da helbideratze-modu egokiak izatea datu-egitura horiekin modu erosoan lan egiteko (esaterako, indizeak erabiltzea bektoreak atzitzeko). Helbideratze-moduek eragin zuzena dute bi arlotan: eragigaia adierazteko behar den bit kopuruan, eta eragigaia eskuratzeko behar den denboran: • datua erregistro batean egonez gero, bit gutxi beharko dira erregistro hori adierazteko (erregistro kopurua txikia da); aldiz, memorian egonez gero, bit gehiago beharko dira haren helbidea emateko. • datua eskuratzeko behar den denbora ere desberdina da: denbora gutxiago behar da prozesadoreko erregistro batean dagoen datua atzitzeko, memorian dagoena irakurtzeko baino. Oso garrantzitsua da ezaugarri hori, jakina, programak azkar exekutatzea baita konputagailuen helburuetako bat.   Bestalde, konputagailu baten helbideratze-moduak diseinatu behar direnean, honako helburu hauek ere kontuan hartu behar dira: • Memoriako eremu edo zati bat definituta, eremu horren edozein posizio atzitzeko aukera izan behar da. • Modu eroso eta eraginkorrean atzitu behar dira goi-mailako hizkuntzetanerabiltzendirendatu-egiturak (bektoreak, matrizeak,...).   Hurrengo ataletan, helbideratze-modu erabilienak azalduko ditugu.     2.3.2.3.1 Berehalakoa(immediateaddressing) Lehenengo helbideratze-modu hau sinpleena da: eragigaia konstante bat da, eta aginduan bertan dago, hots, IR agindu-erregistroan. 2.3.3 irudian, helbideratze-modu hori ageri da. Eragigaiaren eremuaren luzerak edo bit kopuruak mugatzen du modu horretan adieraz daitezkeen datuen magnitudea. Oro har, birako osagarria erabiltzen da datuak adierazteko; ondorioz, eragigaiaren eremua p bitekoa izanik, datuen tartea                                          1
