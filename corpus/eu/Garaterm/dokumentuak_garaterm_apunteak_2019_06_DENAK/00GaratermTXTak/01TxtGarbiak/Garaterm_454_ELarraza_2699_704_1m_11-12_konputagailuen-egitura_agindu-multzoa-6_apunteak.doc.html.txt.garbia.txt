         2.6 Agindu-formatua Dagoeneko aipatu den moduan, konputagailuak 1ekoen eta 0koen segidak —behe- mailako aginduak— exekutatzen ditu. Agindu horiek konputagailu horren makina- hizkuntza osatzen dute, edo, mnemoteknikoen bidez adierazita, mihiztadura- hizkuntza. Konputagailu bakoitzak berezko makina-hizkuntza erabiltzen du, eta hizkuntza hori erabat erlazionaturik dago prozesadoreko hardwarearekin. Makina-hizkuntzen ezaugarri nagusiak hauek dira: • agindu-multzoa, hau da, exekuta daitezkeen aginduak • aginduen formatua, hots, nola egituratzen den informazioa • eragigai kopurua • helbideratze-moduak • datuen formatua Makina-hizkuntzako agindu batek eragiketa bat eta bere eragigaiak adierazten ditu. Beraz, aginduetan hiru atal bereizten dira: (a) eragiketa-kodea, egin nahi den eragiketa adierazteko; (b) iturburu-eragigaiak, eragiketa egiteko behar diren datuak nola eskura daitezkeen adierazteko; eta (c) helburu- eragigaia, eragiketaren emaitza non gorde behar den adierazteko. Informazio hori guztia, hots, agindua bera, bit-segida baten bidez adierazten da, eta memorian gordetzen. Kapitulu honetan, aginduak kodetzeko erak azalduko dira, eta, horrez gainera, aginduen kodeketak konputagailuaren eraginkortasunean izan dezakeen eragina. Esan bezala, aginduaren informazioa bit-segida batean gordetzen da; hor adierazten da, hainbat eremutan banatuta, zer eragiketa bete behar den, zer eragigai erabili behar diren, eta emaitza non gorde behar den. Informazio hori guztia egituratzeko erabiltzen den formatuari agindu-formatuaderitzo. Adibide gisa, lau eremuko agindu baten formatua ageri da 4.1 irudian.       Eragiketa-kodea    Helburu-eragigaia    1. Iturburu-   2. Iturburu-eragigaia                                            eragigaia     ****** 2.6.1 irudia. Lau eremuko agindu-formatu baten adibidea. ****** Hurrengo ataletan, agindu-formatuen osagaiak eta haien kodeketa aztertuko ditugu. 2.6.1 Aginduaren luzera Agindu-multzo bat diseinatu behar denean, parametro asko erabaki behar da, eta haien artean aginduen luzera, hots, aginduak adierazteko erabili behar den bit kopurua. Erabaki hori hartzeko, irizpide asko erabil daitezke; erabakiaren arabera, aginduen bilaketa fasea errazagoa edo konplexuagoa izango da. Hauek dira aukera nagusiak:   a. Luzera finkoko formatua: agindu guztiak tamaina edo bit kopuru berekoak dira. Luzera finkoko formatuaren abantaila nagusia aginduen bilaketa fasean ageri da, memoriatik irakurri behar den bit kopurua beti bera baita, edozein agindutarako. Baina, beste alde batetik, memoria-edukiera ez da modu egokian aprobetxatzen; izan ere, hainbat agindutan ez dira eremu guztiak erabili behar, eta, agindu guztiak tamaina berekoak direnez, eremu horiei dagozkien bitak alferrik okupatuko dira memorian. BIRD konputagailuaren agindu guztiak luzera finkokoak dira, 32 bitekoak.     b. Luzera aldakorreko formatua: aginduak tamaina edo bit kopuru desberdinekoak dira. Tamaina aldakorra denez, aginduan bertan adierazi beharko da haren luzera, eragiketa-kodean edo eremu jakin batean. Eragiketa-kodean adierazten bada, aginduaren luzera ez da ezagutuko deskodeketa egin arte. Luzera aldakorreko formatuaren abantailak eta eragozpenak luzera finkokoaren kontrakoak dira. Batetik, aginduaren bilaketa konplexuagoa da (ez baitakigu zenbat bit irakurri behar diren agindu osoa eskuratzeko), baina, bestetik, hobeto aprobetxatuko da memoria, agindu bakoitzak behar duen espazioa bakarrik okupatuko baitu (hala ere, aginduek okupatzen duten memoria-espazioa ez da, gaur egun, oso parametro kritikoa). 2.6.2 Eragiketa-kodearen formatua Eragiketa-kodeak adierazten du exekutatu behar den eragiketa, eta, jakina, agindu guztiak kodetu ahal izateko adina bit behar du. Aginduaren formatuarekin gertatzen den bezala, finkoa nahiz aldakorra izan daiteke eragiketa-kodearen luzera. Egiten den hautuaren arabera, errazagoa edo zailagoa izango da aginduen deskodeketa. 2.6.2.1 Luzera finkoko eragiketa-kodea Eragiketa-kodeak bit kopuru finkoa du, agindu guztietan bera. Kodetu behar den agindu kopuruak zedarrituko du luzera (l):                           l = log2 (agindu kopurua)   Adibidez, BIRD konputagailuan, luzera finkokoa da aginduen eragiketa-kodea. 42 agindu desberdin definitu direnez, 6 bit behar dira kode horiek adierazteko. Eragiketa-kodea luzera finkokoa denean, errazagoa da aginduen deskodeketa, aldez aurretik ezagutzen baita zenbat eta zein bitek osatzen duten eragiketa- kodea. Hala ere, kodetu behar den agindu kopurua handia bada, bit asko erabili beharko da eragiketa-kodea adierazteko; ondorioz, luzeagoak izango dira aginduak, edo, bestela, aginduen luzera mugatu nahi bada, bit gutxi geratuko dira eragigaiak adierazteko.   2.6.2.2 Luzera aldakorreko eragiketa-kodea Aginduen eragiketa-kodea luzera aldakorrekoa izan daiteke. Izan ere, agindu guztiek ez dute eragigai kopuru bera erabiltzen; beraz, eragigai gutxi duten aginduek eragiketa-kode luzeagoak eduki ditzakete, eta eragigai asko dutenek, berriz, laburragoak. Estrategia hori erabiliz, txikiagoa da, batez beste, aginduen luzera, edo, luzerari eutsi nahi bazaio, eragigai gehiago adieraz daitezke. Hala ere, eragiketa-kodeak luzera desberdinekoak direnez, konplexuagoa izango da aginduen deskodeketa. Izan ere, ez dakigu zenbat bit deskodetu behar diren; beraz, zatika egin beharko da deskodeketa. Hasteko, bit kopuru jakin bat analizatu beharko da: eragiketa-kode bat osatzen duen kopuru minimoa, hain zuzen ere. Bit horiek adieraziko dute nahikoa den ala bit gehiago deskodetu behar diren; bigarren kasuan, jarraitu beharko da prozesuarekin, eragiketa-kode osoa deskodetu arte.   2.6.3 Konputagailuen sailkapena aginduen formatuaren arabera Ezaugarri asko eta oso desberdinak erabil daitezke konputagailuak sailkatzeko. Agindu aritmetikoetan ageri diren eragigai esplizituen kopurua da horietako bat. Hala, lau konputagailu mota bereizten dira: hiru eragigaiko aginduak dituztenak, bi eragigaikoak, eragigai bakarrekoak, eta eragigai espliziturik erabiltzen ez dituztenak. Sailkapen hori ez da, hala ere, erabat zehatza, konputagailu komertzial gehienek agindu-formatu horietatik bat baino gehiago erabiltzen dutelako. Hurrengo ataletan, agindu-formatu bakoitzaren ezaugarriak azalduko ditugu. 2.6.3.1 Hiru eragigai esplizituko konputagailuak Aginduek hiru eragigai erabiltzen dituzte eragiketa bat egiteko. Eragigai batek —lehenengoak esaterako1—, emaitza non gorde behar den adieraziko du, eta, beste biak eragiketarako datuak izango dira. 2.6.2 irudian, adibide bat ageri da.     IR  Eragiketa-kodea    Helburu-eragigaia    1. Iturburu-     2. Iturburu-                                                eragigaia        eragigaia                 @iturb2               @iturb1                  @helbur                                        memoria    ****** 2.6.2 irudia.Hiru eragigaiko aginduen formatua eta eragiketa baten                 exekuzioa (helbideratze-modu absolutua). ****** Eragigaien helbideratze-moduen arabera, konputagailu desberdinak izango ditugu. Hiru eragigaiak memorian baldin badaude, konputagailuari MMM motakoa deritzo (memoria, memoria, memoria); aldiz, eragigaiak erregistroetan daudenean, RRR motakoa deritzo konputagailuari (erregistro, erregistro, erregistro). Ageri denez, helbideratze-modu desberdinak erabili behar dira konputagailu horietan, batean memoria-posizioak eta bestean erregistroak helbideratu behar baitira. Tarteko ereduak ere egon daitezke; bi eragigai erregistroetan eta bat memorian, esaterako. Exekuzio-denborari begira, MMM motako aginduen exekuzioa RRR motakoena baino motelagoa da, memoria atzitu behar delako (eta agian, behin baino gehiagotan, helbideratze-moduaren arabera). Bestalde, MMM motako konputagailuen aginduak luzeagoak dira RRR motakoenak baino, memoria-helbideak adierazteko erregistroak adierazteko baino bit gehiago behar baitira. 2.6.3.2 Bi eragigai esplizituko konputagailuak Bi eragigai besterik ez dira adierazten aginduetan. Eragigai batek (lehenengoa zein bigarrena izan daiteke, konputagailuaren arabera) iturburu-eragigai bat eta helburu-eragigaia adierazten ditu aldi berean. Eragigaiak adierazteko, edozein helbideratze-modu erabil daiteke. 2.6.3 irudian ageri da adibide bat.   IR    Eragiketa-kodea     1. Iturburu-eragigaia /     2. Iturburu-eragigaia                              Helburu-eragigaia             @iturb2           @it1 / @helburu                                                memoria     ****** 2.6.3 irudia.Bi eragigaiko aginduen formatua eta eragiketa baten                 exekuzioa (helbideratze-modu absolutua). ****** Aurreko kasuan bezala, erregistroetan (RR konputagailuak) edo memorian (MM konputagailuak) egon daitezke bi eragigaiak (edo bat memorian eta bestea erregistro batean). 2.6.3.3 Eragigai esplizitu bakarreko konputagailuak Eragigai esplizitu bakarreko aginduak exekutatzen dituzte halako konputagailuek. Aginduan bertan adierazten den iturburu-eragigaiaz gain, bigarren eragigai bat erabili ohi da. Inplizitua da eragigai hori, eta beti bera: erregistro berezi bat; metagailua(AC,accumulator),hain zuzen ere. Metagailua, oro har, unitate aritmetiko/logikoaren sarrera bati lotuta dago. Beraz, eragiketa bat egin nahi denean, lehenengo eragigaia metagailutik hartuko da (hor kargatu dugu aurretik), eta, bigarrena, berriz, agindutik. Azkenik, emaitza metagailuan gordeko da. Adibidez, honako hau egingo duaddX aginduak: AC:=AC+X Konputagailu hauei metagailuzko makinak deritze. 2.6.4 irudian ageri da adibide bat.         IR        Eragiketa-kodea                Iturburu-eragigaia                 @iturb                                            memoria  ****** 2.6.4 irudia.Eragigai bakarreko aginduen formatua eta eragiketa baten                 exekuzioa (helbideratze-modu absolutua). ****** Mota horretako aginduak azkarrak eta laburrak dira. Erregistroekin gertatzen den modu berean, agindu bat behar da metagailua kargatzeko eta beste bat haren edukia memoriara eramateko; esaterako: • load XAC:=M          8 + 16 = 24       mul A       div A       3. Bi eragigai esplizituko konputagailua                                                              luzera (bitetan)               agindua                eragiketa         (eragigaien kokapenaren                                                                arabera)       move er1, er2           er1 := er2       add er1, er2                                     MM: 8 + 216 = 40       sub er1, er2            er1 := er1 OP er2        RM: 8 + 4 + 16 = 28 → 32       mul er1, er2                                     RR: 8 + 24=16       div er1, er2   4. Hiru eragigai esplizituko konputagailua                                                         luzera (bitetan)               agindua             eragiketa        (eragigaien kokapenaren                                                           arabera)                                                 MM →40       move er1, er2           er1 := er2        RM → 32                                                 RR → 16       add er1, er2, er3                         MMM: 8 + 316= 56       sub er1, er2, er3       er1 := er2 OP er3 RMM: 8 + 4 + 216 = 44 → 48       mul er1, er2, er3                         RRM: 8 + 24 + 16 = 32       div er1, er2, er3                         RRR: 8 + 34 = 20 → 24     Analisia egiteko, formula hau exekutatu behar da:                        X = (A + BC) / (D – (EF + GH)) Beraz, eta konputagailu bakoitzerako, (a) idatz ezazu formula hori kalkulatzen duen programa (b) kalkulatu programaren agindu kopurua (c) kalkulatu programaren tamaina, bitetan eta bytetan   Pilazko konputagailuarentzat bakarrik azalduko dugu ariketaren ebazpen osoa. Gainerako konputagailuentzat, bide beretik doa ebazpena. Bukaeran, konputagailu bakoitzerako programa emango dugu (ebazpen osoa egin gabe), eta, orobat, haien ezaugarriak, konparazioak egin ahal izateko. Pilazko makinarako programa idatzi aurretik, idazkera poloniar alderantzizkoan idatziko dugu formula. Hortik abiatuta, programa idaztea ia-ia zuzena da (ez da aukera bakarra, baina guztiak antzekoak dira). Aurreko formula idazkera poloniar alderantzizkoan: X=A B C+D E FG H+- / eta dagokion programa:    push A push B push C mul add push D push E push F mul push G push H mul add sub div pop X    Programak 16 agindu ditu. Horietatik 7 (eragigai gabekoak) byte batekoak dira, eta gainerako 9ak (pushetapopaginduak), 3 bytekoak. Beraz, programak 71 + 93 = 34 byte = 272 bit behar ditu memorian. Lehenengo konputagailuarekin egin dugun analisia, gainerakoekin ere egin behar da.2.6.2taulak emaitza guztiak laburbiltzen ditu.         Pilazko           Metagailuzko        Bi eragigaiko     Hiru eragigaiko    konputagailua        konputagailua       konputagailua      konputagailua  push A               load G              move r1, B          mul r1, B, C push B               mul H               mul r1, C           add r1, A, r1 push C               store X             add r1, A           mul r2, E, F mul                  load E              move r2, G          mul r3, G, H add                  mul F               mul r2, H           add r2, r2, r3 push D               add X               move r3, E          sub r2, D, r2 push E               store X             mul r3, F           div X, r1, r2 push F               load D              add r3, r2 mul                  sub X               move r2, D push G               store X             sub r2, r3 push H               load B              div r1, r2 mul                  mul C               move X, r1 add                  add A sub                  div X div                  store X pop X     16 agindu            15 agindu           12 agindu           7 agindu 34 byte = 272 bit    45 byte = 360 bit   42 byte = 336 bit   33 byte = 264 bit           ****** 2.6.2taula.2.6.3 adibideko emaitzen laburpena. ******   2.6.4 Agindu-multzoaren ezaugarriak Agindu-multzo bat analizatzen denean, honako ezaugarri hauek hartzen dira kontuan: a. Osotasuna: Agindu-multzoak edozein programa idazteko aginduak eskaini behar ditu. Gainera, programa horien exekuzio-denborak mugatua izan behar du. b. Eraginkortasuna: Agindu-multzoak ez du handiegia izan behar, eta aginduek ez dute oso konplexuak izan behar, haien exekuzioa oso motela izan ez dadin. c. Erregulartasuna: Kasu bereziak ekidin behar dira aginduen formatuetan, eragiketetan, eta abar. Hala, programazioa errazagoa da. d. Ortogonalitatea: Agindu-multzoak ortogonala beharko luke izan. Horrek esan nahi du onartzen dela edozein helbideratze-modu eta edozein datu-mota eragigai guztietarako eta agindu guztietan. Hala, eragiketa-kode gutxi batzuekin, agindu asko lor daitezke (nahiz eta horietako batzuk, agian, oso gutxi erabili).   Aurrekoaz gain, konputagailu baten aginduen formatua diseinatzerakoan, komenigarria da irizpide hauei jarraitzea: a. Oro har, agindu laburrak luzeak baino hobeak dira. Batetik, memoria gutxiago okupatzen dute, eta, bestetik, bilaketa-urratsa azkarragoa da, memoria nagusitik informazio gutxiago ekarri behar baita. Hala ere, aginduak oso laburrak badira, eskuarki, eragiketa oso sinpleak exekutatuko dituzte. Ondorioz, lan jakin bat egiteko, ohikoa izango da agindu asko erabili behar izatea, hots, programak luzeak izatea. Beraz, konpromiso bat bilatu behar da aginduen luzeraren eta programen tamainaren artean. b. Komeni da aginduen luzera memoria-posizioen tamainaren multiploa izatea. Adibidez, memoria-posizioak byte batekoak badira, eta aginduak kodetzeko nahikoa badira 11 bit, hobe da aginduak 16 bitetan gordetzea 11 bitetan baino (eta, agindu bakoitzeko, 5 bit alferrik galdu), arkitektura sinpleagoa lortzearren. Bestela, bilaketa fasea asko konplikatuko da, bereizi beharko baita, memoria-posizio baten barruan, agindu bakoitzari dagokion informazioa, 2.6.7 irudian ageri den moduan.                                                A3                   x       A3                                A3             A3                A2              x        A2          A3                   A2       A1          A2          A1              x             A1                          A1   (a) (b) ****** 2.6.7 irudia.11 biteko aginduak 8 biteko hitzak dituen memoria batean: (a) memoria-posizioak konpartitzen dira; (b) aginduak 16 bitera zabaltzen dira                          (hitzaren multiplora). ****** 2.6.5 AGINDU-FORMATUAK ZENBAIT PROZESADORETAN Ikus ditzagun, adibide gisa, gaian zehar ikusi ditugun bi prozesadoretan erabili diren agindu-formatuak. Batetik, Pentium II mikroprozesadorearena, konputagailu pertsonaletan erabiltzen den prozesadoreetako bat; eta, azkenik, BIRD konputagailuarena. 2.6.5.1 Pentium II (1997) Pentium II prozesadorea Intel etxekoa da. Intel familiako estrategiari jarraituz, haren agindu-multzoa bateragarria da aurreko 80x86 prozesadoreen agindu-multzoekin. Aginduen formatua “konplexua” da (CISC motakoa), eta oso “bihurria”. Aginduak luzera aldakorrekoak dira, byte batetik 16 byte arte; eragiketa-kodeak ere luzera aldakorrekoak dira. 2.6.8 irudian, formatu hori laburbildu da.   0 – 4 byte1 edo 2 byte  0 edo 1 byte 0 edo 1 byte  0 – 4 byte  0 – 4 byte   Agindu-    Eragiketa-      modR/M        SIB       Desplazam.   Berehalakoa aurrizkiak      kodea       ****** 2.6.8irudia.Pentium prozesadoreko aginduen formatua. ****** Liburu honen helburuetatik at dago Pentium II prozesadorearen aginduak azaltzea; hala ere, hauek dira formatuaren atal bakoitzaren ezaugarri nagusiak: • Agindu-aurrizkia (aukerazko 4 byte). Kontrol-kode bereziak dira, eta eragiketa bereziak egiteko erabiltzen dira; esaterako, bit-kateen prozesamenduan, errepikapenak egiteko, memoria-atzipen atomikoak betetzeko (lock), eragigaien eta helbideen tamainak zehazteko, eta abar. Ez dira agindu guztietan erabiltzen. • Eragiketa-kodea, 1 edo 2 byte. Eragiketa adierazten du. Zenbait kasutan, informazio gehiago emateko erabiltzen dira bit horiek (erabili behar den erregistroa, desplazamenduen tamaina, baldintza-kodeak, eta abar). Agindu batzuetan, aldiz, eragiketa-kodea 3 byteko da: ohiko biak eta modR/M izeneko bytea. • modR/M eta SIB byteak (aukerazko 2 byte). Oro har, eragigai bat memorian dagoenean, modR/M izeneko byteak helbideratze-moduari buruzko informazioa ematen du (24 helbideratze-modu erabiltzen dira!). Zenbait kasutan, hala ere, informazio gehiago behar da helbideratze-modua zehazteko. Informazio hori SIB (scale/index/base) izeneko bytean adierazten da; indize-erregistroa edo oinarri-erregistroa, esaterako. • Desplazamendua. Zenbait helbideratze-modutan erabiltzen den desplazamendua (1, 2 edo 4 byte). • Berehalakoa. Zenbait agindutan, berehalako datu bat (1, 2 edo 4 byte). Esan dugun moduan, konplexua da Pentium prozesadoreetako agindu-multzoa, eta Inteleko bateragarritasun-politika (edo beharra) da konplexutasun horren zioetako bat: prozesadore berriek exekutatu egin behar dute familiako prozesadore guztien makina-kodea (esaterako, 8086 prozesadorearena, 1978koa!). Izan ere, prozesadore horien agindu-multzoa asko kritikatu da. 2.6.5.2 BIRD konputagailua Atal honekin bukatzeko, laburbil ditzagun hemen BIRD konputagailuaren aginduen formatua. Aginduak luzera finkokoak dira (32 bit). Pisu handieneko 6 bitek eragiketa-kodea (luzera finkokoa ere) adierazten dute, eta, gainerako 26 bitek, aginduari dagozkion eragigaiak. Eragigaien helbideratze-moduak inplizituak dira, hots, eragiketa-kodeetan definitzen dira. Agindu guztien formatua A eranskinean ageri da zehatz-mehatz. 32 erregistro orokor dagoenez, 5 bit behar dira erregistro bat adierazteko. Memoriako helbideak, aldiz, 16 bitekoak dira. Desplazamenduak eta berehalako datuak ere 16 bitekoak dira.   1Helburu-eragigaia edozein posiziotan egon daiteke; ohikoa da lehenengoa izatea, baina azkena ere izan daiteke.                                        1
