        Kudeaketaren eta Informazio Sistemen Informatikaren Ingeniaritzako Gradua                             Bilboko Ingeniaritza Eskola                                    UPV / EHU                                PROGRAMAZIOAREN_METODOLOGIA                                      1._maila                                        1. gaia                                     Sarrera                                           1._Gaia                                     Sarrera  Aurkibidea:  1.1._Softwarearen_garapena_5 1.1.1._Helburua_5 1.1.2._Softawarearen_garapeneko_urratsak_edo_faseak_5 1.1.3._Erroreen_hedapena_5 1.1.4._Mantenimendua_6 1.2._Softwarearen_zuzentasuna_7 1.2.1._Softwarearen_zuzentasuna_ziurtatzeko_teknikak_7 1.3._Programazioaren_Metodologia_7     Irudien_zerrenda:  1._irudia:_Softwarearen_garapenaren_faseak_6    1.1._Softwarearen_garapena  1.1.1. Helburua Softwarea garatzerakoan problemak ebazten dituzten programa zuzen eta eraginkorrak (azkarrak) aurkitzea da helburua.   1.1.2. Softawarearen garapeneko urratsak edo faseak Softwarearen garapenean 4 fase bereiz daitezke:     * Problemaren analisia.     * Soluzioaren diseinua.     * Soluzioaren inplementazioa.     * Mantenimendua.  Analisifasean eraiki behar den sistemaren espezifikazioa lortuko da.  Soluzioa diseinatzeko fasean algoritmoa lortuko da.  Inplementazio fasean programa lortuko da.  Mantenimendu fasean aurreko faseetakoren batera itzuli beharko da programan agertutako akatsak konpontzeko edo programari funtzionalitate berriak gehitzeko.  1. irudian (4. orrialdean) ikus daitekeen bezala, softwarea garatzeko prozesuan fase desberdinetatik zehar mugitu beharko da, akatsak eta arazoak agertzen direnean atzera (aurreko faseetara) itzuliz.   1.1.3. Erroreen hedapena Garapen fase batean burututakoerroreakondorengo faseetara hedatzen dira.  Esate baterako, analisi fasean sistemaren espezifikazio okerra lortzen bada, espezifikazio hori kontuan hartuz diseinu fasean eraikitako algoritmoa ez da egokia izango hasierako problema ebazteko edo benetan nahi den sistema eraikitzeko.  Era berean algoritmo okerra jarraituz inplementatutako programa ez da egokia izango hasierako problema ebazteko.  Hasierako faseetan egindako akatsak edo hanka sartzeak izaten dira garestienak. Problema gaizki ulertu bada eta lortutako espezifikazioa ez bada egokia, hasierako problema ebazteko egokia ez den programa eraikiko da azkenean. Garatutako programa egokia ez dela konturatutakoan, analisi fasera itzuli beharko da, erroreak konpondu eta berriro fase denak zeharkatuz joateko.  Fase batean erroreren bat edo ondo ez doan zerbait aurkitutakoan atzera joan beharko da errorearen iturburua aurkitu arte. Adibidez, inplementazio garaian aurkitutako arazo bat diseinu fasean algoritmo okerra eraiki izanaren ondorioa izan daiteke baina gerta daiteke arazoa hasieran problema gaizki ulertzeagatik eta ondorioz espezifikazio okerra lortzeagatik izatea ere.                                      1. irudia: Softwarearen garapenaren faseak   1.1.4. Mantenimendua Programa bat garatu ondoren, lehenago edo geroago aldaketa eta hobekuntzen beharra sortzen da askotan. Horren arrazoia programari funtzionalitate berriak gehitu nahia edo lehendik dituen funtzionalitateak eguneratu nahia izan ohi da.  Programa bati funtzionalitate berriak gehitzeko edo lehendik dituenak aldatzeko programak zer egiten duen oso ondo ulertu behar da. Programa egiterakoan hartu ziren erabakiak eta erabaki horien zergatiak ezagutzea komeniko da.  Gainera oso ohikoa da softwarearen mantenimenduaz arduratuko direnak software hori garatu zutenak ez izatea.  Hori guztia dela eta oso garrantzitsua da softwarearen garapen prozesu dena oso era zehatzean dokumentatzea, horrela software hori aldatu beharko dutenei gauzak asko erraztuko baizaizkie.                                   Programak dokumentatzearen beharra   1.2._Softwarearen_zuzentasuna Programa batek egin beharko lukeena eta programa horrek benetan egiten duena bat datozenean programa hori zuzena dela esaten da.  1.2.1. Softwarearen zuzentasuna ziurtatzeko teknikak Softwarearen garapen prozesuan zuzentasuna ziurtatzen lagunduko diguten tresnak edukitzeko helburuarekin, honako teknika hauek landuko ditugu:      * Programen_espezifikazioa: programa batek zer egin behar duen zehazteko.     * Programen_dokumentazioa: programen puntu desberdinetan zein propietate       betetzen diren adierazteko.     * Programen_egiaztapena: programa bat zuzena al den ala ez erabakitzeko.     * Programen_eratorpena: programa zuzenak eta programen zuzentasun froga       aldi berean garatzeko.     * Datu-moten_espezifikazioa: zein_datu erabiliko diren, datu horiekin zein       eragiketa buru daitezkeen eta datu horiek eragiketa horiekiko zein       propietate betetzen dituzten adierazteko.     * Programen_eraldaketa: programa zuzen bat hartu abiapuntu bezala eta       programa hori eraldatuz programa berria lortzeko. Programa berriak       hasierakoren gauza bera egingo du baina azkarragoa izango da edo beste       ezaugarri interesanteren bat izango du.   1.3._Programazioaren_Metodologia Programazioaren metodologiak PROGRAMA ZUZENAK era metodiko, arrazonatu eta eraginkorrean espezifikatu, diseinatu, analizatu eta dokumentatzeko balio duten teknikak, kontzeptuak eta metododoak biltzen ditu.  Irakasgaian landutako kontzeptu eta metodo garrantzitsuenak honako hauek dira:      * Programen aurre-ondoetako espezifikazioa eta dokumentazioa:Lehen Mailako       Logikarenlengoaia erabiliz (2. gaia)     * Programen egiaztapena: Hoare-ren kalkuluaerabiliz (3. gaia)     * Programen eratorpen formala: Hoare-ren kalkuluaerabiliz (4. gaia)     * Datu-moten espezifikazio ekuazionala:Haskellprogramazio-lengoaia       funtzionala erabiliz (5. gaia)     * Programa errekurtsiboak iteratibo bihurtzea: Burstall-en       metodoajarraituz. (6. gaia)                                   ************ 1  
