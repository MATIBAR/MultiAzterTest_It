


2. Kapitulua
Simplex metodoa
Bi edo hiru aldagai dituzten eredu linealak graﬁkoki ebatz daitezke. 1. Kapi-
tuluan bi aldagaiko eredu linealen ebazpen graﬁkoa aztertu dugu. Hiru aldagai
baino gehiago dituzten eredu linealak ebazteko ezin da metodo graﬁkoa erabili,
prozedura aljebraiko bat erabiltzea beharrezkoa gertatuko delarik. Programazio
linealeko problemen zenbakizko soluzioa kalkulatzeko simplex algoritmoa argi-
taratu zuen 1949. urtean George B. Dantzig-ek.
Programazio linealerako teoria eredu linealaren ondoko forman oinarrituko
da.
Forma estandarra. Eredu lineal bat forma estandarrean dagoela esaten da
baldin murrizketa guztiak
= modukoak badira eta b bektorearen osagai guztiak
eta ereduaren aldagai guztiak ez-negatiboak badira, hau da,
max(min)z = c
T x
hauen mende
Ax
= b
x
≥ 0
Helburua maximizatzea bada, ereduaren maximizatze-forma estandarra dau-
kagula esaten da, eta minimizatzea bada minimizatze-forma estandarra.
2.1
Aldaketak ereduan
Problema linealak ebazteko prozesuan lehenengo urratsa eredua forma estanda-
rrera pasatzea izango da. Eredu gehienak ez dira hasieratik forma estandarrean
19

20
2. Simplex metodoa
idatzita egoten; baina, helburu funtzioan, murrizketetan eta aldagaietan aldaketak
egin daitezke, forma estandarrera egokitzeko.
1. Helburu funtzioa.
z funtzioaren minimoa kalkulatzea −z funtzioaren maximoa kalkulatzearen
baliokidea da.
min z =
n
j=1
cjxj
⇐⇒
max (−z) =
n
j=1
−cjxj
Adibidez,
min z = 3x1 − 5x2
eta
max (−z) = −3x1 + 5x2 balioki-
deak dira;
z balioa minimo egingo duten x1 eta x2 aldagaien balio berberek
egingo dute
−z maximo, min z = − max (−z) beteko delarik.
2. Murrizketak.
(a) Eredu lineal baten murrizketa guztiak noranzko berean idatziak izan
daitezke ondokoa betetzen delako:
n
j=1
aijxj ≥ bi
⇐⇒
n
j=1
−aijxj ≤ −bi
Adibidez,
2x1 + 3x2 ≤ −2 ekuazioan desberdintzaren bi aldeak −1
balioaz biderkatuz gero,
−2x1 − 3x2 ≥ 2 lortuko da.
(b) Murrizketak berdintzaz idatziak izan daitezke.
n
j=1
aijxj ≤ bi
⇐⇒
n
j=1
aijxj + y = bi
n
j=1
aijxj ≥ bi
⇐⇒
n
j=1
aijxj − y = bi
Aurreko bi aldaketetan erabili den
y aldagaiak nasaitze-aldagaia izena
du; bi kasuetan
y aldagaia zero baino handiagoa edo berdina da.
Adibidez,
x1 − 4x2 ≤ 4 eta x1 − 4x2 + y = 4 murrizketak baliokideak
dira,
y aldagaia ez-negatiboa izanik.
OpenCourseWare, UPV/EHU

2.1. Aldaketak ereduan
21
(c) Berdintzaz betetzen den murrizketa oro bi murrizketen bidez adierazia
izan daiteke modu honetan:
n
j=1
aijxj = bi ⇐⇒
n
j=1
aijxj ≤ bi
eta
n
j=1
aijxj ≥ bi
Adibidez,
−2x1 + x2 = 2 murrizketa idaztearen baliokidea da ondoko
beste biak idaztea:
−2x1 + x2 ≤ 2 eta −2x1 + x2 ≥ 2.
3. Aldagaiak.
Aldagaiek ez-negatibotasunaren murrizketa betetzeko, aldaketa hauek era-
bili beharko dira.
• xj ≤ 0 bada, xj = −x
′
j aldagai-aldaketa egin daiteke, non x
′
j ≥ 0 den.
• xj aldagaia zeinuz murriztugabea bada, bi aldagai positiboren arteko
diferentzia moduan idatz daiteke horrela.
xj = x
′
j − x
′′
j ,
non
x
′
j , x
′′
j ≥ 0.
–
x
′
j > x
′′
j bada, xj > 0 da.
–
x
′
j < x
′′
j bada, xj < 0 da.
–
x
′
j = x
′′
j bada, xj = 0 da.
Adibidea. Aurreko baliokidetasunak erabiliz ondoko eredu lineala maximizatze-
forma estandarrean idatziko dugu:
min
z = x1 + 2x2 + x3
hauen mende
x1 + x2 − x3 ≥ 2
x1 − 2x2 + 5x3 ≤ −1
x1 + x2 + x3 = 4
x1 ≥ 0 , x2 ≤ 0, x3 : murriztugabea
• Helburu funtzioa.
Maximizatze-forman honela jarriko dugu:
− max (−z) = −x1 − 2x2 − x3
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

22
2. Simplex metodoa
• Murrizketak.
Lehenengo murrizketan
x4 nasaitze-aldagaia kenduko dugu,
x1 + x2 − x3 − x4 = 2.
Bigarren murrizketan
x5 nasaitze-aldagaia gehituko dugu,
x1 − 2x2 + 5x3 + x5 = −1.
Desberdintzaren eskuineko atala positibo bihurtzeko, bi atalak
−1 balioaz
biderkatuko ditugu,
−x1 + 2x2 − 5x3 − x5 = 1.
Hirugarren murrizketa forma estandarrean emana dator:
x1 + x2 + x3 = 4.
• Aldagaiak.
x1 ≥ 0 aldagaiak ez-negatibotasunaren murrizketa betetzen du. x2 ≤ 0
aldagairako
x
′
2 = −x2 aldaketa egingo dugu, eta murriztugabe dagoen x3
aldagairako
x3 = x
′
3 − x
′′
3 aldaketa egingo dugu.
Aldaketa horiek guztiak egin eta gero, eredu lineala maximizatze-forma estanda-
rrean ondokoa da:
− max (−z) = −x1 + 2x
′
2 − x
′
3 + x
′′
3 + 0x4 + 0x5
hauen mende
x1 − x
′
2 − x
′
3 + x
′′
3 − x4 = 2
−x1 − 2x
′
2 − 5x
′
3 + 5x
′′
3 − x5 = 1
x1 − x
′
2 + x
′
3 − x
′′
3 = 4
x1, x
′
2, x
′
3, x
′′
3 , x4, x5 ≥ 0
2
Nasaitze-aldagaiak gehitzeak edo kentzeak ez du helburu funtzioa aldatu behar.
Hori dela eta, nasaitze-
aldagaiek helburu funtzioan zero koeﬁzientea izango dute.
OpenCourseWare, UPV/EHU

2.2. Eredu linealen soluzioak
23
2.2
Eredu linealen soluzioak
Ikusi dugun bezala, eredu lineal guztiak forma estandarrean idatziak izan daitezke.
Kapitulu honetan azalduko dugun simplex algoritmoa maximizatzeko diseinatua
izan da, eta horregatik, hemendik aurrera forma estandarra aipatzen dugunean,
maximizatze-forma estandarraz ari garela ulertu behar da; gogora dezagun forma
estandarrean b bektorearen osagaiak ez-negatiboak direla.
Izan bedi ondoko eredu lineala forma estandarrean:
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
non x eta c bektoreak
n × 1 tamainakoak diren, b bektorea m × 1 tamainakoa
eta A matrizea
m × n tamainakoa.
Demagun
m < n betetzen dela, eta A matrizearen heina m dela. Horrelako
sistemek inﬁnitu soluzio dituzte. Helburu funtzioari balio optimoa emango dion
soluzioa kalkulatzean datza problema.
Ikus ditzagun simplex metodoaren garapenean erabiliko diren deﬁnizio hauek.
1. deﬁnizioa. Ax
= b murrizketak betetzen dituen x bektorea eredurako
soluzioa dela esaten da.
2. deﬁnizioa. Problemarako soluzio den x bektorea, hau da, Ax
= b betetzen
duena, bideragarria dela esaten da baldin x
≥ 0 bada.
3. deﬁnizioa. A matrizearen
m zutabez osatutako B oinarri-matrize bat ema-
nik, xB oinarriko soluzioa dela esaten da baldin BxB = b betetzen badu.
Oinarrikoak ez diren aldagai guztiak
0 dira, xN = 0 (ikus A. Eranskina).
Hortaz, oinarriko soluzioak zeroren desberdinak diren
m osagai izango ditu
gehienez.
Gainera, xB bektorearen osagai guztiak ez-negatiboak badira, oinarriko so-
luzio bideragarria esaten zaio.
4. deﬁnizioa. Oinarriko soluzio bideragarri bat endekatua dela esaten da bal-
din oinarrikoa den aldagairen batek
0 balioa hartzen badu, hau da, 0 baino
handiagoak diren
m osagai baino gutxiago baditu. 0 baino handiagoak di-
ren
m osagai dituen oinarriko soluzio bideragarria ez-endekatua dela esaten
da.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

24
2. Simplex metodoa
5. deﬁnizioa. Problema linealaren soluzio bideragarri guztien multzoari bi-
deragarritasun-eskualdea edo soluzio bideragarrien multzo ganbila esaten
zaio eta
F hizkiaren bidez adierazten da.
6. deﬁnizioa. Problema linealaren soluzio optimoa x
∗ notazioaz adierazten
da, eta helburu funtzioaren balio optimoa
z
∗ = cT x∗ notazioaz.
7. deﬁnizioa. Problema lineala bornegabea dela esaten da helburu funtziora-
ko balio optimo ﬁniturik ez duenean, hau da,
z
∗
→ +∞ edo z
∗
→ −∞
denean.
8. deﬁnizioa. Problema lineal batek soluzio optimo anizkoitza duela esaten da
soluzio optimo bat baino gehiago dituenean.
Hemendik aurrera oinarriari egiten zaizkion aipamenetan oinarri-matrizeari
buruz ari garela ulertuko da.
Adibidea. Har dezagun ondoko eredu lineala forma estandarrean.
max z = 3x1 + 6x2 + 5x3 + 4x4 + x5
hauen mende
2x1 + 8x2 + 3x3 + x4 + x5 = 6
x1 + x2 + 2x3 + x4
= 4
x1, x2, x3, x4, x5 ≥ 0
non
c
T = (3, 6, 5, 4, 1),
x
T = (x
1
, x2, x3, x4, x5)
A
=


2 8 3 1 1
1 1 2 1 0


,
b
=


6
4


A matrizearen heina 2 da, ezezagun kopurua baino txikiagoa. Hortaz, murriz-
keten sistemak inﬁnitu soluzio ditu. Hala ere, oinarriko soluzio kopurua ﬁnitua
da. Gogora dezagun oinarriko soluzioak kalkulatzeko B oinarri guztiak aukeratu
behar direla A matrizeko zutabeen artean 
(ikus A. Eranskina), eta honako sistema
ebatzi behar dela:
xB = B
−
1b,
non xB oinarriko aldagaiez osatutako bektorea den. Hiru oinarri desberdine-
tarako soluzioak kalkulatuko ditugu.
OpenCourseWare, UPV/EHU

2.2. Eredu linealen soluzioak
25
1. A matrizeko lehenengo eta laugarren zutabeek osatutako matrizea aukera-
tuz lortzen den B matrizea ez-singularra da, eta, ondorioz, oinarria.
B
=


2 1
1 1


Horrela,
xB =


x1
x4


,
N
=


8 3 1
1 2 0


eta
xN =





x2
x3
x5





Orduan,
xB =


2 1
1 1


−
1 

6
4


−


2 1
1 1


−
1 

8 3 1
1 2 0







x2
x3
x5





(2.1)
x2, x3 eta x5 aldagai askeei balio posible guztiak emanez kalkulatzen dira
sistemaren inﬁnitu soluzioak. Kalkula ditzagun horietako bi.
• (2.1) ekuazioan x2 = 0, x3 = 0 eta x5 = 0 balioak hartzen baditugu,
kalkuluak eginez ondoko oinarriko soluzioa lortuko da:
xB =


1 −1
−1
2




6
4


=


2
2


Lortu dugun
x1 = 2, x4 = 2 oinarriko soluzioa bideragarria da, osagai
negatiborik ez duelako.
• (2.1) ekuazioan x2 = 0, x3 = 1 eta x5 = 0 balioak hartzen baditugu,
kalkuluak eginez ondoko soluzioa lortuko da:


x1
x4


=


2
2


−


7 1
1
−6 1 −1







0
1
0





=


1
1


Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

26
2. Simplex metodoa
Hau da, xT
= (1, 0, 1, 1, 0) bektorea soluzioa da. Bideragarria da osa-
gai negatiborik ez duelako. Dena den, ez da oinarriko soluzioa
x3 aldagai
askeak zeroren desberdina den balio bat hartzen duelako soluzio horretan.
2. A matrizeko lehenengo bi zutabeek osatutako B matrizea hartzen badugu,
B
=


2 8
1 1


oinarria da, eta aldagai aske guztiei zero balioa emanez, ondoko oinarriko
soluzioa lortuko da:
xB =


2 8
1 1


−
1 

6
4


=


−
1
6
4
3
1
6
−
1
3




6
4


=


13
3
−
1
3


Kalkulatu dugun oinarriko soluzioa ez da bideragarria,
x2 = −
1
3 aldagaiak
balio negatiboa hartzen duelako.
3. A matrizeko hirugarren eta bosgarren zutabeek osatutako matrizea hartuz,
B
=


3 1
2 0


oinarria da eta aldagai aske guztiei zero balioa emanez, ondoko oinarriko
soluzioa lortuko da:
xB =


3 1
2 0


−
1 

6
4


=


0
1
2
1 −
3
2




6
4


=


2
0


Soluzio hau bideragarria da. Horretaz gain, endekatua da oinarrikoa den
aldagai batek zero balioa hartzen duelako,
x5 = 0.
2
OpenCourseWare, UPV/EHU

2.3. Mutur-puntuak eta oinarriko soluzioak
27
2.3
Mutur-puntuak eta oinarriko soluzioak
Eredu linealen soluzio graﬁkoan ikusi dugun bezala, soluzio bideragarrien multzo
ganbileko mutur-puntu batean dago soluzio optimoa. Problemak soluzio optimo
anizkoitza badu, horietako bat gutxienez mutur-puntua izango da. Hiru aldagai
baino gehiago dituzten eredu linealak ebazteko ezin da interpretazio geometrikoa
erabili, eta problema aljebraikoki ebaztea beharrezkoa egiten da. Ondoko bi teo-
remetan geometriatik aljebrara igarotzea ahalbidetzen duten oinarrizko emaitzen
frogak azalduko dira. Frogetan multzo ganbilen ondoko emaitzak erabiltzen dira:
1. Forma estandarrean dagoen eredu lineal baten soluzio bideragarrien
F mul-
tzoa multzo ganbil eta itxia da.
2.
F multzo ganbileko x puntua mutur-puntua da baldin x = λx1 + (1 − λ)x2,
0 ≤ λi ≤ 1 betetzen duten F -ko bi puntu x1 eta x2 existitzen ez badira.
3. Multzo ganbil itxi eta bornatu bateko edozein x puntu mutur-puntuen kon-
binazio lineal ganbil orokortu moduan idatz daiteke, hau da,
x
=
q
i=1
λixi , 0 ≤ λi ≤ 1 ,
q
i=1
λi = 1
Mutur-puntu bakoitzari oinarriko soluzio bideragarri bat dagokiola, eta alde-
rantziz, oinarriko soluzio bideragarri bakoitzari mutur-
puntu bat dagokiola froga-
tuko da ondoko teoreman:
2.3.1 Teorema. Izan bedi forma estandarrean dagoen eredu lineala
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
x oinarriko soluzio bideragarria da baldin eta soilik baldin x bektorea
F -ko
mutur-puntua bada.
Froga.
⇒
x oinarriko soluzio bideragarria bada, froga dezagun mutur-puntua
dela.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

28
2. Simplex metodoa
Baldin x oinarriko soluzio bideragarria bada, zero baino handiagoak diren
m
osagai ditu gehienez. Notazioa errazteko asmoz, demagun lehenengo
m osagaiak
direla. Orduan,
x
=


xB
0


Jo dezagun existitzen direla
F multzoan bi puntu x1, x2, non
x
= λx1 + (1 − λ)x2 , 0 < λ < 1.
Izan bitez
x1
=


y1
y
′
1


eta x2
=


y2
y
′
2


non yi, ( i = 1, 2) bektoreen dimentsioa m × 1 den eta y
′
i, ( i = 1, 2) bekto-
reena
(n − m) × 1. Orduan, berdintza honetatik:


xB
0


= λ


y1
y
′
1


+ (1 − λ)


y2
y
′
2


beste hau ondorioztatzen da:
0
= λy
′
1 + (1 − λ)y
′
2.
y
′
1, y
′
2 ≥ 0, λ > 0 eta 1 − λ > 0 direnez, y
′
1 = y
′
2 = 0 betetzen da. Hortaz,
x, x1 eta x2 soluzioak oinarrikoak direla ondorioztatzen da, eta oinarri berberari
dagozkionez, xB = x1 = x2 da.
Beraz, x konbinazio lineal ganbil murriztu moduan idaztea posible egingo
duten bideragarritasun eskualdeko x1 eta x2 bi puntu desberdin horiek ez dira
existitzen, eta, ondorioz, x mutur-puntua da.
⇐
x mutur-puntua bada, oinarriko soluzio bideragarria da.
Demagun x bektoreak
k osagai positibo dituela eta gainerakoak zero direla.
Orduan, murrizketen sistema modu honetan idatz daiteke:
k
i=1
xiai = b.
OpenCourseWare, UPV/EHU

2.3. Mutur-puntuak eta oinarriko soluzioak
29
x oinarriko soluzio bideragarria dela ikusteko, ai, i = 1, . . . , k, bektoreak linealki
independenteak direla frogatzea nahikoa da.
Kontrako kasuan,
α1, . . . , αk eskalarrak existituko lirateke, guztiak batera nulu
ez, non
k
i=1
αiai = 0.
Izan bedi
α
T = (α
1
, . . . , αk, 0, . . . , 0).
x1
= x + ǫα eta x2 = x − ǫα deﬁnituko ditugu. Posible da ǫ eskalarraren balioa
modu egokian aukeratzea, puntuak bideragarriak izan daitezen. Gainera, x1
= x2
betetzen da eta
x
=
1
2
x1
+
1
2
x2
.
Hortik ondorioztatuko litzateke x ez dela mutur-puntua.
2
Eredu lineal baten soluzio optimoa bideragarritasun eskualdeko mutur-puntu
batean aurkitzen dela frogatuko da ondoko teoreman.
2.3.2 Teorema. Izan bedi forma estandarrean dagoen eredu lineala
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Helburu funtzioaren balio optimoa
F multzoaren mutur-puntu batean aurkitzen
da.
Froga. Demagun mutur-puntua ez den x
∗ soluzio optimoa daukagula eta z∗ =
cT x
∗
dela problemaren balio optimoa. Orduan,
F -ko x guztietarako ondokoa
betetzen da:
z = c
T x ≤ cT x∗ = z∗
Izan bedi
F -ko mutur-puntuen multzoa, {x1, . . . , xk}. F eskualdeko puntu
oro, baita eskualdekoa den x
∗ ere, mutur-puntuen konbinazio lineal ganbil mo-
duan idatzia izan daiteke.
x
∗ =
k
i=1
λixi , λi ≥ 0,
k
i=1
λi = 1
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

30
2. Simplex metodoa
Orduan,
z
∗ = cT x∗ = cT
k
i=1
λixi =
k
i=1
λic
T x
i
max
i
(c
T x
i) ≥ c
T x
i, i = 1, . . . , k betetzen denez,
z
∗ =
k
i=1
λic
T x
i ≤
k
i=1
λi max
i
(c
T x
i) = max
i
(c
T x
i)
k
i=1
λi = max
i
(c
T x
i) ≤ z
∗ .
Ondorioz,
z
∗
= max
i
(c
T x
i) eta ondorioztatzen da optimoa mutur-puntu batean
lortzen dela.
2
Ondoko adibidean 2.3.1. Teoreman frogatutakoa betetzen dela egiaztatuko du-
gu. Eredu linealek oinarriko soluzio kopuru ﬁnitua dutela kontuan izanda, oina-
rriko soluzio bideragarri batetik hobea den beste batera joateko prozesu iteratiboa
eraiki daiteke, optimoa lortu arte.
Adibidea. Har dezagun ondoko eredu lineala:
max z = x1 + 2x2
hauen mende
−x1 + 4x2 ≤ 4
x1 − x2 ≤ 3
x1, x2 ≥ 0
Soluzioen eskualdea graﬁkoki adierazten badugu, mutur-puntuak kalkula ditzake-
gu.
OpenCourseWare, UPV/EHU

2.3. Mutur-puntuak eta oinarriko soluzioak
31
x1
x2
−x1 + 4x2 = 4
x1 − x2 = 3
A
B
C
O
max
F eskualdeak lau mutur-puntu ditu. Helburu funtzioa optimizazioaren noranz-
koan desplazatuz,
B mutur-puntua lortuko da.
O = (0, 0) , A = (0, 1) , B =
16
3
,
7
3
, C = (3, 0)
Oinarriko soluzioak aljebraikoki kalkulatzeko, eta bideragarritasun eskualde-
ko mutur-
puntu bakoitzari oinarriko soluzio bideragarri bat dagokiola, eta alderan-
tziz, oinarriko soluzio bideragarri bakoitzari mutur-
puntu bat dagokiola ikusteko,
eredua forma estandarrean jarri behar da,
x3 eta x4 nasaitze-aldagaiak gehituz.
max z = x1 + 2x2 + 0x3 + 0x4
hauen mende
−x1 + 4x2 +x3
= 4
x1 − x2
+x4 = 3
x1, x2, x3, x4 ≥ 0
Ekuazio-sistemaren koeﬁzienteen matrizeak lau zutabe ditu, eta ondorioz, au-
kera daitekeen oinarri kopuru maximoa
6 da; lau zutabe horiek konbinatuz, eta
beren artean linealki independente diren zutabeak binaka multzokatuz, lortuko
den multzo kopurua. Azter ditzagun
6 aukera horiek.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

32
2. Simplex metodoa
1. B
= (a1 a2) oinarria aukeratzea.
xB =


−1
4
1 −1


−
1 

4
3


=


1
3
4
3
1
3
1
3




4
3


=


16
3
7
3


Oinarriko soluzio hau bideragarria da, eta graﬁkoko
B mutur-puntuari da-
gokio.
2. B
= (a1 a3) oinarria aukeratzea.
xB =


−1 1
1 0


−
1 

4
3


=


0 1
1 1




4
3


=


3
7


Oinarriko soluzio hau bideragarria da, eta graﬁkoko
C mutur-puntuari da-
gokio.
3. B
= (a1 a4) oinarria aukeratzea.
xB =


−1 0
1 1


−
1 

4
3


=


−1 0
1 1




4
3


=


−4
7


Oinarriko soluzio hau ez da bideragarria, osagai negatiboak dituelako. Hor-
taz, soluzio hau ez da graﬁkoko mutur-puntuekin egokitzen.
4. B
= (a2 a3) oinarria aukeratzea.
xB =


4 1
−1 0


−
1 

4
3


=


0 −1
1
4




4
3


=


−3
16


Oinarriko soluzio hau ez da bideragarria, osagai negatiboak dituelako. Hor-
taz, soluzio hau ez da graﬁkoko mutur-puntuekin egokitzen.
5. B
= (a2 a4) oinarria aukeratzea.
xB =


4 0
−1 1


−
1 

4
3


=


1
4
0
1
4
1




4
3


=


1
4


Oinarriko soluzio hau bideragarria da, eta graﬁkoko
A mutur-puntuari da-
gokio.
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
33
6. B
= (a3 a4) oinarria aukeratzea.
xB =


1 0
0 1


−
1 

4
3


=


1 0
0 1




4
3


=


4
3


Oinarriko soluzio hau bideragarria da, eta graﬁkoko
O mutur-puntuari da-
gokio.
2
Aurreko adibidean A matrizeko lau zutabeen artean aukeratu ahal izan ditu-
gun bi bektoreko multzo guztiak oinarriaak dira, eta horietatik sei oinarriko solu-
zio kalkulatu dira. Kasuren batean gerta daiteke aukeratutako bektoreak linealki
mendekoak izatea, eta ondorioz, oinarria ez izatea, bektoreen multzo horretatik
ezingo delarik oinarriko soluzio bat kalkulatu. Aurreko sei oinarriko soluzio ho-
rien artetik bi, hirugarrena eta laugarrena, ez dagozkie inolako mutur-
punturi, ez
direlako bideragarriak.
2.4
Simplex metodoa
Eredu linealen soluzio graﬁkoan ikusi dugu, ereduak soluziorik baldin badu, solu-
zio optimoa mota desberdinetakoa izan daitekeela: soluzio optimo bakarra, aniz-
koitza eta bornegabea. Atal honen helburua soluzio mota bakoitzari dagozkion
ezaugarriak identiﬁkatzea da, eredu linealak ebazteko prozedura iteratibo bat erai-
ki ahal izateko: simplex algoritmoa.
2.4.1
Deﬁnizioak eta notazioa
Hasteko, programazio linealaren garapenean erabiliko dugun notazioa ﬁnkatuko
dugu. Izan bedi forma estandarrean dagoen eredu lineala.
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Demagun A matrizeak
m errenkada linealki independente eta n zutabe di-
tuela,
n > m izanik. A matrizeko m zutabe aukeratuz osatutako B oinarri bat
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

34
2. Simplex metodoa
hartzen da eta gainerako zutabeek N matrizea osatuko dute. Notazioa errazteko
pentsatuko dugu oinarria osatzeko aukeratu diren A matrizeko zutabeak lehenen-
go
m zutabeak direla. c bektorean eta x bektorean oinarriko diren osagaiak cB
eta xB notazioaz adieraziko ditugu, hurrenez hurren; oinarriko ez diren osagaiak
adierazteko cN eta xN notazioa erabiliko dugu. Orduan, eredu lineala honela idatz
daiteke:
max z = (c
T
B | c
T
N )





xB
−
xN





hauen mende
(B | N)





xB
−
xN





= b
xB, xN ≥ 0
Kalkuluak eginez, eredua honela geratuko da:
max z = c
T
B xB + c
T
N xN
hauen mende
BxB + NxN = b
xB, xN ≥ 0
• Oinarriko soluzioa. xN = 0 eginez, sistema BxB = b bihurtzen da, eta
oinarriko soluzioa kalkulatzen da,
xB = B
−
1b,
non
xB =








xB1
xB2
..
.
xBm








OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
35
• Helburu funtzioaren balioa. cT
B = (cB1, cB2, . . . , cBm) bada,
z = c
T
B xB = (cB1, cB2, . . . , cBm)








xB1
xB2
..
.
xBm








=
m
i=1
cBixBi.
• Koordenatu-bektorea. A matrizearen zutabe-bektoreak a1, a2, . . . , an badi-
ra, bektore bakoitzarentzat bere koordenatuak kalkula daitezke B oinarria-
rekiko. Horretarako, ondoko notazioa erabiliko da:
aj = y1ja1 + y2ja2 + · · · + ymjam =
m
i=1
yijai.
aj bektorearen koordenatu-bektorea ondokoa da:
yj =








y1j
y2j
..
.
ymj








Koordenatu-bektorea kalkulatzeko, aj = Byj sistema ebatzi behar da, hau
da,
yj = B
−
1a
j .
• zj−cj balio adierazlearen kalkulua. Kalkulu honen beharra aurrerago azter-
tuko diren teoremetan agertzen da. aj bektore bakoitzarentzat zj eskalarra
kalkula daiteke modu honetan:
zj = c
T
B yj = cB1y1j + cB2y2j + · · · + cBmymj =
m
i=1
cBiyij.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

36
2. Simplex metodoa
Adibidea. Har dezagun forma estandarrean dagoen ondoko eredu lineala:
max z = 3x1 + 4x2 + 5x3 + 6x4
hauen mende
2x1 + x2 + x3 + 8x4 = 6
x1 + x2 + 2x3 + x4 = 4
x1, x2, x3, x4 ≥ 0
Koeﬁzienteen sistemako lehenengo bi zutabeek osatzen duten oinarria hartzen
badugu, eredu lineala matrize-forman idatz dezakegu, oinarrikoa den zatia oina-
rrikoa ez den zatitik bereiziz.
max z = (3, 4 | 5, 6)











x1
x2
−
x3
x4











hauen mende


2 1 1 8
1 1 2 1













x1
x2
−
x3
x4











=


6
4


x1, x2, x3, x4 ≥ 0
• Oinarriko soluzioa.
xB = B
−
1b =


2 1
1 1


−
1 

6
4


=


2
2


OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
37
• Helburu funtzioaren balioa. cT
B = (3, 4) izanik,
z = c
T
B xB = (3,
4)


2
2


= 14
• Oinarrikoa ez den bektore baten koordenatuak B oinarriarekiko, adibidez,
a4 bektorearenak.


8
1


= y14


2
1


+ y24


1
1


=


2 1
1 1




y14
y24


Sistema ebatziz koordenatuak lortzen dira.
y4
=


y14
y24


=


2 1
1 1


−
1 

8
1


=


7
−6


• z4 − c4 balio adierazlearen kalkulua:
z4 − c4 = c
T
B y4 − c4 = (3,
4)


7
−6


− 6 = −3 − 6 = −9.
2
2.4.2
Oinarriko soluzio bideragarrien hobekuntza
Eredu linealen soluzio optimoa ereduaren murrizketek deﬁnitutako oinarriko so-
luzio bideragarrien artean aurkitzen da. Ondoko teoremak oinarriko soluzio bide-
ragarri batetik helburu funtzioaren balioa hobetuko duen beste oinarriko soluzio
bideragarri batera pasatzeko bete behar diren baldintzak ﬁnkatuko ditu. Oinarri-
ko soluzio bideragarri batetik abiatuz, simplex metodoak teorema hau erabiliko
du oinarriko soluzio bideragarri batetik alboko beste batera igarotzeko, helburu
funtzioaren balioa hobetzea ezinezkoa izango den arte.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

38
2. Simplex metodoa
2.4.1 Teorema. (Oinarriko soluzio bideragarri baten hobekuntza) Izan bedi ere-
du lineala forma estandarrean
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Izan bedi A matrizetik aukeratutako B oinarria, eta izan bitez xB = B
−
1b dago-
kion oinarriko soluzio bideragarria eta
z = cT
B xB helburu funtziorako balioa. A
matrizean oinarrikoa ez den eta
zj − cj < 0 duen aj bektore bat existitzen bada,
eta aj horrentzat yij, i = 1, . . . , m, koordenaturen bat positiboa bada, beste
∧
xB
oinarriko soluzio bideragarri bat existitzen da non
∧
z =
∧
c
T
B
∧
xB ≥ z = c
T
B xB .
Froga. Notazioa errazteko pentsatuko dugu B oinarria A matrizeko lehenen-
go
m bektoreek osatzen dutela, hau da, B = (a1 . . . ar . . . am). xB oinarriko
soluzio bideragarria bada, ereduaren murrizketak betetzen ditu:
xB1a1 + xB2a2 + · · · + xBmam = b =
m
i=1
xBiai.
(2.2)
Aurreko ekuazioan agertzen ez diren sistemako batugaiak zero dira, dagozkien
aldagaiak ez direlako oinarrikoak.
am+1, am+2, . . . , an bektoreak ez daude oinarrian, eta B oinarriko bektoreen
konbinazio lineal moduan idatz daitezke.
aj =
m
i=1
yijai , j = m + 1, . . . , n
(2.3)
aj = 0 da, j = m + 1, . . . , n; hortaz, yij osagairen bat zeroren desberdina
da. Demagun aj bektorean zeroren desberdina den osagaia yrj = 0 dela. (2.3)
ekuazioan
r. batugaia bereiziz
aj =
m
i
=1
i
=r
yijai + yrjar
(2.4)
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
39
r. batugaia aska daiteke eta ar bektorea a1, . . . , aj, . . . , am bektoreen konbina-
zio lineal moduan adierazi. 241. orrialdeko A.3.2 Teoreman ikusi dugun bezala,
B oinarriko ar bektorea aj bektoreaz ordezkatuz lortzen den
∧
B bektore-multzo
berria oinarria da.
∧
B= (a1 . . . aj . . . am).
Ikus dezagun nola kalkula daitekeen
∧
xB oinarriko soluzio berria. (2.4) ekua-
zioan ar askatuz, hau lortuko da:
ar =
1
yrj
aj −
m
i
=1
i
=r
yij
yrj
ai.
(2.2) ekuazioan
r. batugaia bereiziz, hau lortuko da:
m
i
=1
i
=r
xBiai + xBrar = b.
ar bektorea ordezkatuz,
m
i
=1
i
=r
xBiai + xBr[
1
yrj
aj −
m
i
=1
i
=r
yij
yrj
ai] = b.
Batugaiak berrantolatuz,
m
i
=1
i
=r
(xBi − xBr
yij
yrj
)ai +
xBr
yrj
aj = b.
Eredu linealaren murrizketak betetzen dituzten
m osagaiko multzo bat lortu
da
∧
B oinarrirako, eta ondorioz, oinarriko soluzio berria osatzen du.
∧
xB=





xBi − xBr
yij
yrj
xBr
yrj
i = r
i = r
(2.5)
∧
xB oinarriko soluzio berria zein baldintzatan den bideragarria aztertu behar da
orain. Bideragarria izan dadin, osagai guztiek zero baino handiagoak edo berdinak
izan behar dute, hau da,
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

40
2. Simplex metodoa
• r. osagairako,
∧
xBr=
xBr
yrj
≥ 0.
yrj = 0 eta xBr ≥ 0 direnez,
xBr
yrj
≥ 0 izateko, yrj > 0 bete behar da.
• Gainerakoetarako,
∧
xBi= xBi − xBr
yij
yrj
≥ 0, i = 1, . . . , m, i = r
xBi ≥ 0, xBr ≥ 0 eta yrj > 0 izanik, ondoko kasuak eman daitezke:
–
yij < 0 bada,
∧
xBi= xBi − xBr
yij
yrj
≥ 0 betetzen da.
–
yij = 0 bada,
∧
xBi= xBi − xBr
yij
yrj
= xBi ≥ 0 da.
–
yij > 0 bada,
∧
xBi= xBi − xBr
yij
yrj
≥ 0 izateko,
∧
xBi= xBi − xBr
yij
yrj
≥ 0 ⇐⇒
xBi
yij
−
xBr
yrj
≥ 0 ⇐⇒
xBi
yij
≥
xBr
yrj
baldintza bete behar da.
Baldintza guztiak kontuan izanik, oinarrian ordezkatua izango den ar bekto-
reak ondoko baldintza bete behar du:
xBr
yrj
= min
i
{
xBi
yij
/yij > 0}
(2.6)
Oraingoz, frogatu da (2.6) irizpidea betetzen duen ar bektorea ordezkatua izan
daitekeela oinarrian eta oinarriko soluzio bideragarri berri bat lortuko dela. Ikus
dezagun zein baldintzatan izango den
∧
xB soluzioa xB baino hobea, hau da, zein
baldintzatan beteko den ondokoa:
∧
z=
∧
c
T
B
∧
xB≥ c
T
B xB = z.
∧
z kalkulatuko dugu r. batugaia bereiziz,
∧
z=
m
i=1
∧
cBi
∧
xBi=
m
i
=1
i
=r
∧
cBi
∧
xBi +
∧
cBr
∧
xBr .
∧
cBi,
∧
cBr,
∧
xBi eta
∧
xBr balioak ordezkatuz,
∧
z=
m
i
=1
i
=r
cBi(xBi − xBr
yij
yrj
) + cj
xBr
yrj
= (∗)
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
41
i = r denean, ondokoa betetzen da:
cBr(xBr − xBr
yrj
yrj
) = 0.
Ondorioz, batukarian
i = r baldintza ken daiteke, eta honela geratuko da:
(∗) =
m
i=1
cBi(xBi − xBr
yij
yrj
) + cj
xBr
yrj
.
Kalkuluak eginez,
∧
z=
m
i=1
cBixBi −
xBr
yrj
m
i=1
cBiyij + cj
xBr
yrj
= z −
xBr
yrj
(zj − cj).
Hau ondoriozta daiteke:
∧
z= z −
xBr
yrj
(zj − cj)
(2.7)
Hortaz,
∧
z≥ z
⇐⇒
−
xBr
yrj
(zj − cj) ≥ 0 ⇐⇒
xBr
yrj
(zj − cj) ≤ 0.
xBr ≥ 0 eta yrj > 0 betetzen denez, zj − cj < 0 denean,
∧
z≥ z betetzen da.
Oinarrian ar bektorea ordezkatzera sartuko den aj bektoreari dagokion balio
adierazleak
zj − cj < 0 baldintza bete behar du. Ohikoa da balio adierazle negati-
boen artetik minimoa duen bektorea aukeratzea, oinarrian sartuko den ak bektorea
ondoko irizpidea betetzen duena izango delarik:
zk − ck = min
j
{zj − cj/zj − cj < 0}
(2.8)
2
2.4.3
Oinarri aldaketarako aukeraketa-erregelak
Aurreko teoreman frogatutako prozesuaren arabera, oinarri bat aukeratu eta da-
gozkion oinarriko soluzio bideragarria eta helburu funtziorako balioa kalkulatu
behar dira; ondoren, oinarriko bektore bat ordezkatzera sartuko den bektorea au-
keratu behar da oinarri berri bat lortzeko, eta dagokion soluzioa bideragarria eta
hobea izango dela ziurtatuz. Bektoreen aukeraketarako erregelak ondokoak dira.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

42
2. Simplex metodoa
• Oinarrira sartuko den bektorea aukeratzeko erregela. Ondoko erregela be-
tetzen duen ak bektorea sartuko da oinarrian:
zk − ck = min
j
{zj − cj/zj − cj < 0}
Soluzio berri bat kalkulatzean, helburu funtziorako balio berria,
∧
z≥ z, ho-
bea izango dela bermatzen du erregela honek.
• Oinarritik irtengo den bektorea aukeratzeko erregela. Oinarrian sartuko den
ak bektoreak ondoko erregela betetzen duen oinarriko ar bektorea ordezka-
tuko du:
xBr
yrk
= min
i
xBi
yik
/yik > 0
Soluzio berria,
∧
xB≥ 0, bideragarria izango dela bermatzen du erregela ho-
nek.
2.4.4
∧
xB eta
∧
z kalkulatzeko formulak
Oinarrira sartuko den bektorea eta oinarritik irtengo dena aukeratzeko ikusi di-
tugun erregelak kontuan hartuz, oinarriko soluzio bideragarri berria eta helburu
funtziorako balio berria kalkulatzeko (2.5) eta 
(2.7) formulak honela geratuko di-
ra:
• Soluzio berriaren kalkulua.
∧
xB=





xBi − xBr
yik
yrk
xBr
yrk
i = r
i = r
(2.9)
• Helburu funtziorako balio berriaren kalkulua.
∧
z= z −
xBr
yrk
(zk − ck)
(2.10)
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
43
Adibidea. Ondoko problema linealean aurreko teorema aplikatuko dugu.
max z = 4x1 + 5x2 + x3
hauen mende
x1 + x2 + x3 ≤ 8
−x1 − 2x2 + x3 ≤ −2
x1, x2, x3 ≥ 0
Hasteko, eredua forma estandarrean jarri behar da. Horretarako
x4 eta x5
nasaitze-aldagaiak gehitu ditugu eta b
≥ 0 bihurtuko dugu.
max z = 4x1 + 5x2 + x3 + 0x4 + 0x5
hauen mende
x1 + x2 + x3 +x4
= 8
x1 + 2x2 − x3
−x5 = 2
x1, x2, x3, x4, x5 ≥ 0
Oinarri bat aukeratuko dugu, koeﬁzienteen matrizeko lehenengo eta laugarren
zutabeek osatutakoa, adibidez. Dagokion oinarriko soluzioa kalkulatuko dugu.
xB = B
−
1b =


1 1
1 0


−
1 

8
2


=


0
1
1 −1




8
2


=


2
6


Soluzio hau bideragarria da, eta beraz, soluzioen eskualdekoa da. Helburu
funtzioaren balioa honakoa da:
z = c
T
B xB = (4, 0)


2
6


= 8.
Azter dezagun soluzio hori hobetzeko aukera ba ote dagoen.
Oinarrira sartuko den bektorearen aukeraketa. Aukera egiteko beharrez-
koa gertatzen da oinarrikoak ez diren a2, a3 eta a5 bektoreei dagozkien
z2 − c2,
z3 − c3 eta z5 − c5 balioak kalkulatzea.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

44
2. Simplex metodoa
• z2 − c2 balioaren kalkulua.
a2
=


1
2


; y2 = B
−
1a
2
=


0
1
1 −1




1
2


=


2
−1


z2 − c2 = cT
B y2 − c2 = (4, 0)


2
−1


− 5 = 3 > 0.
• z3 − c3 balioaren kalkulua.
a3
=


1
−1


; y3 = B
−
1a
3
=


0
1
1 −1




1
−1


=


−1
2


z3 − c3 = (4, 0)


−1
2


− 1 = −5 < 0 → soluzioa hobe daiteke.
• z5 − c5 balioaren kalkulua.
a5
=


0
−1


; y5 = B
−
1a
5
=


0
1
1 −1




0
−1


=


−1
1


z5 − c5 = (4, 0)


−1
1


− 0 = −4 < 0 → soluzioa hobe daiteke.
Soluzioa hobetzeko bi aukera daude: a3 edo a5 oinarriratzea. Oinarrian sartu-
ko den bektorearen aukeraketarako erregela erabili behar da erabakia hartzeko.
zk − ck = min
j
{zj − cj / zj − cj < 0} =
= min{z3 − c3 = −5 , z5 − c5 = −4} = −5.
Hortaz, a3 bektorea oinarriratuko da.
Oinarritik irtengo den bektorearen aukeraketa. Oinarritik irtengo den bek-
torea aukeratzeko, y3 koordenatu-bektorea eta xB soluzio-bektorea hartu behar
dira kontuan.
y3
=


y13
y23


=


−1
2


,
xB =


xB1
xB2


=


2
6


OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
45
Irteera-erregela betetzen duen ar bektorea irtengo da oinarritik,
xBr
yr3
= min
i
xBi
yi3
/ yi3 > 0 = min
xB2
y23
=
6
2
= 3.
Oinarriko bigarren bektorea irtengo da, hau da, a4. Oinarria aldatuko da, baita
oinarriko soluzioa eta helburu funtziorako balioa ere.
• (2.9) formula erabiliz, soluzio berria kalkulatuko dugu.
∧
xB1= xB1 − xB2
y13
y23
= 2 − 6
−1
2
= 5.
∧
xB2=
xB2
y23
=
6
2
= 3.
• (2.10) formula erabiliz, helburu funtziorako balio berria kalkulatuko dugu.
∧
z= z −
xB2
y23
(z3 − c3) = 8 −
6
2
(−5) = 23.
∧
xB soluzio berria bideragarria da eta helburu funtzioaren balioa hobetu egiten
du. Teorema berriro ere aplika daiteke
zj − cj balio guztiak ez-negatiboak izango
diren arte. Baldintza hori betetzen denean, soluzioa optimoa izango da; baldintza
hori ondoko teoreman ematen da.
2
2.4.2 Teorema. (Optimaltasunerako baldintzak). Izan bedi problema lineala
forma estandarrean.
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Izan bedi A matrizean aukeratutako B oinarria eta izan bitez xB = B
−
1b da-
gokion oinarriko soluzio bideragarria eta
z = cT
B xB helburu funtziorako balioa.
A matrizeko aj bektore guztietarako zj − cj balioak zero baino handiagoak edo
berdinak badira, xB problemarako oinarriko soluzio bideragarri optimoa da.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

46
2. Simplex metodoa
2.4.5
Soluzio optimo bornegabea
Eredu linealen ebazpen graﬁkoan ikusi genuen bezala, zenbait kasutan helburu
funtzioaren balio optimoa ez da ﬁnitua, etengabe haz daitekeelarik. Ondoko teo-
remak ﬁnkatuko ditu soluzioa bornegabea izateko bete behar diren baldintzak.
2.4.3 Teorema. Izan bedi ondoko problema lineala forma estandarrean.
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Izan bedi A matrizean aukeratutako B oinarria, eta izan bitez xB = B
−
1b
dagokion oinarriko soluzio bideragarria eta
z = cT
B xB helburu funtzioaren ba-
lioa. A matrizean
zk − ck < 0 duen ak bektore bat existitzen bada eta ak bektore
horrentzat
yik, i = 1, . . . , m, koordenatu guztiak zero baino txikiagoak edo berdi-
nak badira, ereduaren soluzioa bornegabea da.
Froga. Izan bedi xB oinarriko soluzio bideragarri bat. Soluzioa denez, problema-
ren murrizketak betetzen ditu:
xB1a1 + xB2a2 + · · · + xBmam = b.
zk − ck < 0 duen ak bektore bat existitzen bada, helburu funtzioaren balioa
hobe daiteke. Baina,
yik ≤ 0, i = 1, . . . , m, betetzen denez, oinarriko bektore bat
bera ere ezin da ordezkatua izan beste oinarriko soluzio bideragarri bat kalkula-
tzeko. Hala ere, soluzio bat kalkula daiteke (ez oinarrikoa) zeinarentzat
z helburu
funtzioaren balioak inﬁniturantz joko duen; helburu funtzioaren balioa bornega-
bea izango da.
Aurreko ekuazioaren ezkerreko atalean
θak gehitu eta kendu daiteke, θ edo-
zein balio erreal positibo delarik. Hau lortuko da:
xB1a1 + xB2a2 + · · · + xBmam − θak + θak = b.
m
i=1
xBiai − θak + θak = b
(2.11)
B oinarrian ez dagoen bektore bat da ak, eta oinarrikoen konbinazio lineal
moduan idatz daiteke:
ak =
m
i=1
yikai.
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
47
(2.11) ekuazioan, ak bektorearen ordez oinarrriko bektoreekiko bere adieraz-
pena idazten badugu, soluzioa honela adieraz daiteke:
m
i=1
xBiai − θ
m
i=1
yikai + θak = b.
Kalkuluak eginez,
m
i=1
(xBi − θyik)ai + θak = b.
Modu honetan lortutako bektoreak zero baino handiagoak diren
m osagai bai-
no gehiago izan ditzake, eta beraz, oinarrikoa ez den soluzioa da.
∧
x=























xB1 − θy1k
xB2 − θy2k
..
.
xBm − θymk
0
..
.
θ
..
.
0























(2.12)
Egiazta daiteke aurreko soluzioa bideragarria dela.
θ > 0 izanik, eta jakinda
xBi ≥ 0, yik ≤ 0, i = 1, . . . , m, direla, xBi − θyik ≥ 0, i = 1, . . . , m.
Helburu funtzioaren balioa soluzio horretan
∧
z=
m
i=1
cBi(xBi − θyik) + ckθ =
m
i=1
cBixBi − θ
m
i=1
cBiyik + ckθ =
= z − θzk + θck = z − θ(zk − ck)
da;
zk − ck < 0 denez,
∧
z balioa hazi egingo da θ balioaren arabera, eta proble-
maren soluzioa bornegabea izango da.
2
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

48
2. Simplex metodoa
Adibidea. Ondoko problemaren soluzioa kalkula dezagun.
max z = −3x1 + 2x2
hauen mende
x1 − x2 ≤ 5
2x1 − 3x2 ≤ 10
x1, x2 ≥ 0
Forma estandarra ondokoa da:
max z = −3x1 + 2x2 + 0x3 + 0x4
hauen mende
x1
−x2 +x3
= 5
2x1 −3x2
+x4 = 10
x1, x2, x3, x4 ≥ 0
B
= (a3 a4) oinarria aukeratu eta dagokion oinarriko soluzioa kalkulatuko
dugu.
xB = B
−
1b =


5
10


Soluzio hori bideragarria da, eta helburu funtzioaren balioa honakoa da:
z = c
T
B xB = (0, 0)


5
10


= 0.
Hobekuntzaren teorema aplikatuko dugu.
z1 − c1 eta z2 − c2 kalkulatuko ditugu.
• z1 − c1 balioaren kalkulua.
a1
=


1
2


; y1 = B
−
1a
1
=


1 0
0 1




1
2


=


1
2


z1 − c1 = cT
B y1 − c1 = (0, 0)


1
2


− (−3) = 3.
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
49
• z2 − c2 balioaren kalkulua.
a2
=


−1
−3


; y2 = B
−
1a
2
=


1 0
0 1




−1
−3


=


−1
−3


z2 − c2 = cT
B y2 − c2 = (0, 0)


−1
−3


− 2 = −2.
Aukeraketarako erregela aplikatuz, a2 bektorea oinarriratzea erabakitzen da.
min
j
{ zj − cj / zj − cj < 0 } = min { z2 − c2 = −2 } = −2
Oinarritik irtengo den bektorea aukeratzerakoan, y2 bektorearen koordenatu
guztiak negatiboak direla ikusten dugu, eta ondorioz, oinarritik ezin da bektore bat
bera ere atera. 2.4.3. Teoremaren baldintzak betetzen dira eta soluzioa bornegabea
da.
Problemak jatorrizko bi aldagai besterik ez dituenez, graﬁkoki ebatz daiteke,
soluzioa bornegabea dela egiaztatzeko.
x1
x2
x1 − x2 = 5
2x1 − 3x2 = 10
max
2
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

50
2. Simplex metodoa
2.4.6
Soluzio optimo anizkoitza
Soluzio graﬁkoan ikusi dugu problemarako soluzio optimo bat baino gehiago exis-
titu daitekeela. Horrelakoetan, problemak soluzio optimo anizkoitza duela esaten
da. Soluzio mota hau aldagai bornatuetarako edo aldagai bornegabeetarako aurki
daiteke.
Ondoko teoremetan soluzio optimo anizkoitza egoteko baldintzak ﬁnkatuko
dira.
2.4.4 Teorema. Izan bedi ondoko eredu lineala forma estandarrean.
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Izan bedi A matrizean aukeratutako B oinarria eta izan bitez xB = B
−
1b
dagokion oinarriko soluzio bideragarria eta
z = cT
B xB helburu funtzioaren ba-
lioa. A matrizeko aj bektore guztietarako zj − cj ≥ 0 betetzen bada, xB soluzioa
optimoa da. Horretaz gain,
zk − ck = 0 duen, oinarrikoa ez den eta koordenatu-
ren bat
yik > 0, i = 1, . . . , m, duen ak bektore bat existitzen bada, soluzio optimo
anizkoitza existitzen da.
Froga. Izan bedi xB oinarriko soluzio bideragarri bat. A matrizeko aj bektore
guztietarako
zj − cj ≥ 0 betetzen denez, 2.4.2. Teorematik esan dezakegu xB
optimoa dela.
zk − ck = 0 duen, B oinarrikoa ez den eta koordenaturen bat yik > 0, i =
1, . . . , m, duen ak bektore bat existitzen bada, ak bektorea oinarrian sar daiteke
ondoko erregela betetzen duen oinarriko ar ordezkatzera:
xBr
yrk
= min
i
xBi
yik
/yik > 0
∧
B oinarri berri bat sortu da, baita
∧
xB oinarriko soluzio bideragarri berri bat
ere. Helburu funtzioaren balioa soluzio berrian ondokoa da:
∧
z= z −
xBr
yrk
(zk − ck) = z − 0 = z.
Ondorioz,
∧
xB ere optimoa da, helburu funtzioaren balioa xB soluzioarekin
lortutako berbera baita.
2
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
51
2.4.5 Teorema. Izan bedi ondoko eredu lineala forma estandarrean.
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Izan bitez x1
, . . . , xp ereduaren oinarriko soluzio bideragarri optimoak. Soluzio
horien konbinazio lineal ganbil orokortu guztiak ereduaren soluzio bideragarri
optimoak dira.
Froga. Izan bedi konbinazio lineal ganbil guztiek osatutako x bektorea.
x
=
p
i=1
µixi , µi ≥ 0,
i = 1, . . . , p ,
p
i=1
µi = 1
Froga dezagun x soluzioa, bideragarria eta optimoa dela.
1. x soluzioa da.
xi, i = 1, . . . , p, soluzioak direnez, Axi = b betetzen dute. Orduan,
Ax
= A(
p
i=1
µixi) =
p
i=1
µiAxi = b
p
i=1
µi = b.
Ondorioz, x soluzioa da.
2. x bideragarria da.
xi ≥ 0 eta µi ≥ 0, i = 1, . . . , p, betetzen direnez,
x
=
p
i=1
µixi ≥ 0.
Ondorioz, x bideragarria da.
3. x optimoa da.
xi, i = 1, . . . , p, optimoak dira, hau da, z
∗ = cT xi. Orduan,
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

52
2. Simplex metodoa
c
T x = cT
p
i=1
µixi =
p
i=1
µic
T x
i = z
∗
p
i=1
µi = z
∗ .
Ondorioz, x optimoa da.
2
2.4.4. Teoreman eta 2.4.5. Teoreman soluzio optimo anizkoitzerako baldin-
tzak ezartzen dira, aldagai bornatuetarako. Dena den, helburu funtzioari balio
bornatua emango dion soluzio optimo anizkoitza egon daiteke, aldagaien balio
bornegabeetarako. Ondoko teoreman ﬁnkatuko dira mota honetako soluziorako
baldintzak.
2.4.6 Teorema. Izan bedi ondoko problema lineala forma estandarrean.
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
Izan bedi A matrizean aukeratutako B oinarria, eta izan bitez xB = B
−
1b
dagokion oinarriko soluzio bideragarria eta
z = cT
B xB helburu funtzioaren ba-
lioa. A matrizeko aj bektore guztietarako zj − cj ≥ 0 betetzen bada, xB soluzioa
optimoa da. Oinarrikoa ez den eta
zk −ck = 0 duen ak bektore bat existitzen bada
eta bere
yik, i = 1, . . . , m, koordenatu guztiak zero baino txikiagoak edo berdinak
baditu, aldagaietarako balio bornegabeko soluzio optimo anizkoitza existitzen da.
Froga. Soluzioak 2.4.3. Teoreman bezala kalkulatzen dira, eta (2.12)-ren
modukoak dira (ikus 47. orrialdea).
Aipatutako teoreman bezala, helburu funtzioaren balioa honela kalkula daite-
ke:
∧
z= z − θ(zk − ck).
Kasu honetan
zk − ck = 0 denez,
∧
z= z betetzen da. Ondorioz, (2.12) ekuazio-
ko
∧
x soluzioaren moduko soluzio guztiak optimoak dira.
2
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
53
2.4.7
Hasierako oinarriko soluzio bideragarria
Forma estandarrean dagoen eredu lineal baten soluzio optimoa kalkulatzeko, oi-
narriko soluzio bideragarri batetik hasiko gara. Hasierako oinarritzat oinarri ka-
nonikoa hartzen bada, dagokion oinarriko soluzio bideragarria kalkulatzea erraza
izango da, B
−
1 = B = I betetzen delako. Lehenengo soluzioa kalkulatu ondoren,
hobekuntzaren 2.4.1. Teorema aplikatuko dugu, optimaltasunare 2.4.2. Teorema-
ren baldintzak betetzen diren arte.
Lehenengo oinarri kanonikoa aukeratzeko ondoko bi kasuak gerta daitezke.
1. Kasua. Nasaitze-aldagaiez osatutako lehenengo oinarria.
Eredu lineala honelakoa bada:
max z = c
T x
hauen mende
Ax
≤ b
x
≥ 0
b
≥ 0 izanik, eredua forma estandarrean idazteko, nasaitze-aldagaiez osa-
tutako y bektorea gehituko dugu.
max z = c
T x + 0T y
hauen mende
Ax
+ Iy = b
x
, y ≥ 0
Horrela, B
= I oinarria aukeratu ahal izango dugu. B
−
1 = I da eta oinarri
honetarako kalkuluak egingo ditugu.
• Soluzioaren kalkulua. Soluzioa bideragarria da.
xB = B
−
1b = Ib = b ≥ 0.
• Helburu funtzioaren balioa. B oinarriko bektore guztiak nasaitze-
aldagaiei dagozkienez, cT
B = 0 betetzen da.
z = c
T
B xB = 0
T x
B = 0.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

54
2. Simplex metodoa
• A matrizeko aj bektoreetarako ondoko kalkuluak egin behar dira:
– Koordenatu-bektorea.
yj = B
−
1a
j = Iaj = aj .
–
zj − cj balioaren kalkulua. B oinarriko bektore guztiak nasaitze-
aldagaiei dagozkienez, cT
B = 0 betetzen da.
zj − cj = c
T
B yj − cj = 0 − cj = −cj .
Hasierako oinarria kanonikoa aukeratzen bada, oinarri horri dagozkion kal-
kuluak problema linealaren parametroekin bat datozela ikusten da, eta hori
abantaila bat da.
Adibidea. Izan bedi ondoko eredu lineala:
max z = 2x1 + 3x2
hauen mende
3x1 + x2 ≤ 2
x1 − x2 ≤ 3
x1, x2 ≥ 0
Nasaitze-aldagaiak gehituz, ereduaren forma estandarra ondokoa da:
max z = 2x1 + 3x2 + 0x3 + 0x4
hauen mende
3x1 + x2 +x3
= 2
x1 − x2
+x4 = 3
x1, x2, x3, x4 ≥ 0
B
= (a3 a4) = I oinarri kanonikoa aukeratuko dugu.
• Soluzioaren kalkulua. Soluzioa bideragarria da.
xB = B
−
1b = I


2
3


=


2
3


OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
55
• Helburu funtzioaren balioa.
z = c
T
B xB = (0, 0)


2
3


= 0
• yj koordenatu-bektoreen eta zj − cj balioen kalkulua A matrizeko
bektore guztietarako.
a1
=


3
1


→ y1 = B
−
1a
1
=


1 0
0 1




3
1


=


3
1


z1 − c1 = c
T
B y1 − c1 = (0, 0)


3
1


− 2 = −2
a2
=


1
−1


→ y2 = B
−
1a
2
=


1 0
0 1




1
−1


=


1
−1


z2 − c2 = c
T
B y2 − c2 = (0, 0)


1
−1


− 3 = −3
a3
=


1
0


→ y3 = B
−
1a
3
=


1 0
0 1




1
0


=


1
0


z3 − c3 = c
T
B y3 − c3 = (0, 0)


1
0


− 0 = 0
a4
=


0
1


→ y4 = B
−
1a
4
=


1 0
0 1




0
1


=


0
1


z4 − c4 = c
T
B y4 − c4 = (0, 0)


0
1


− 0 = 0
2
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

56
2. Simplex metodoa
2. kasua. Aldagai artiﬁzialak hasierako oinarrian.
Eredu linealean
= moduko murrizketak baldin badaude edo ≥ modukoak
b positiboa izanik, ezin izango da nasaitze-aldagaiekin oinarri kanonikoa
osatu. Arazo hau gainditzeko eta hasierako oinarri gisa kanonikoa aukera-
tu ahal izateko, aldagai laguntzaile batzuk erabiliko dira, aldagai artiﬁzial
izenez ezagutzen direnak. Ondoko adibidean ikusiko dugu.
Adibidea. Izan bedi ondoko eredu lineala:
max z = 3x1 + x2
hauen mende
x1 + x2 ≤ 3
x1 + 2x2 ≥ 2
x1, x2 ≥ 0
Ereduaren forma estandarra lortzeko lehenengo murrizketan
x3 nasaitze-
aldagaia gehitu eta bigarren murrizketan
x4 nasaitze-aldagaia kenduko dira.
max z = 3x1 + x2 + 0x3 + 0x4
hauen mende
x1 + x2 +x3
= 3
x1 + 2x2
−x4 = 2
x1, x2, x3, x4 ≥ 0
Koeﬁzienteen matrizean ezin da identitatea aukeratu. Oinarri kanonikoa
aukeratu ahal izateko, behar adina aldagai artiﬁzial gehituko dugu. Kasu
honetan, bigarren murrizketan
w1 ≥ 0 aldagai artiﬁziala gehitzen badugu,
murrizketak honela geratuko dira:
x1 + x2
+x3
= 3
x1 + 2x2
−x4 + w1 = 2
OpenCourseWare, UPV/EHU

2.4. Simplex metodoa
57
Horrela, B
= (a3 aw1) oinarri kanonikoa aukeratu ahal izango dugu eta
dagokion soluzioa bideragarria da.
xB = B
−
1b =


1 0
0 1




3
2


=


3
2


Baina, xB ez da hasierako problemaren soluzioa, w1 = 2 > 0 delako, eta
ondorioz,
x1 + 2x2 − x4 = 2 murrizketa ez da betetzen.
2
2.4.8
Simplex metodoaren taula
Forma estandarrean dagoen eredu lineal baten soluzio optimoa kalkulatzerakoan,
oinarri bakoitzari dagozkion kalkuluak taula batean jasoko dira, Simplex meto-
doaren taula. Prozesua beti A matrizean oinarri kanonikoa aukeratuz hasten da.
Eredua forma estandarrean jartzean ezin bada nasaitze-aldagaiez osatutako oina-
rri kanonikoa aukeratu, behar adina aldagai artiﬁzial gehituko zaizkio ereduari.
Simplex metodoaren taula ondokoa da:
Jatorrizko aldagaiak
Aldagai laguntzaileak
x1
. . .
xn
xn+1
. . .
xj
. . .
z1 − c1
. . .
zn − cn zn+1 − cn+1 . . .
zj − cj
. . .
z
cB1
aB1
y11
. . .
y1n
y1,n+1
. . .
y1,j
. . .
xB1
..
.
..
.
..
.
..
.
..
.
cBi
aBi
yi1
. . .
yin
yi,n+1
. . .
yi,j
. . .
xBi
..
.
..
.
..
.
..
.
..
.
cBm
aBm
ym1
. . .
ymn
ym,n+1
. . .
ym,j
. . . xBm
• Ereduaren jatorrizko aldagaiak, x1, . . . , xn, eta ereduari gehitutako nasaitze-
aldagaiak eta aldagai artiﬁzialak,
xn+1, . . . , xj, . . . , taularen goikaldean ager-
tzen dira.
• Lehenengo zutabean oinarriko bektoreak daude: aB1, . . . , aBi, . . . , aBm.
• Gainerako zutabeetan ereduaren aj bektore guztien yj koordenatu-bektoreak
agertzen dira oinarriarekiko.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

58
2. Simplex metodoa
• Taulatik kanpo cT bektorearen cB1, . . . , cBi, . . . , cBm oinarriko osagaiak ager-
tzen dira.
• Taularen azken zutabean daude oinarriko soluzio bideragarriaren osagaiak:
xB1, . . . , xBi, . . . , xBm.
• Lehenengo errenkadan daude zj − cj balioak. Balio horiei balio adierazle
deitzen zaie, eta errenkadari adierazleen errenkada. Errenkadako azken
balioa,
z, helburu funtzioaren balioa da.
Adibidea. Har dezagun 54. orrialdeko adibideko eredua forma estandarrean.
Oinarri kanonikoari dagokion bere simplex taula ondokoa da:
x1
x2
x3
x4
−2
−3
0
0
0
0 a3
3
1
1
0
2
0 a4
1
−1
0
1
3
2
Aurreko adibidean bezala, hasierako oinarri kanonikoan nasaitze-aldagaiak
besterik ez badaude, simplex metodoaren taula B oinarriarekiko honela idatz dai-
teke:
x1 x2 . . . xn
xn+1 xn+2 . . . xn+m
cT
B B
−
1A − cT
cT
B B
−
1
cT
B xB
cB
B
B
−
1A
B
−
1
xB
Hasierako taulan B
−
1 = I da. Dena den, oinarria edozein dela ere, hasiera-
ko taulan identitate matrizeari dagozkion zutabeetan aurkitzen da B
−
1, simplex
metodoaren edozein iteraziotan. Aurreko adibidean bezala, lehenengo oinarria
nasaitze-aldagaiez osaturik badago, aurreko taulan adierazitako lekuan agertuko
da B
−
1. Aldiz, lehenengo oinarrian aldagai artiﬁzialak baldin badaude, B−1 zu-
tabeen kokapena identiﬁkatu egin beharko da.
OpenCourseWare, UPV/EHU

2.5. Zigortze-metodoa
59
2.5
Zigortze-metodoa
Ereduaren forma estandarrean, hasierako oinarri kanonikoa aukeratu ezin den ka-
suetan erabili behar da metodo hau. 56. orrialdeko adibidean ikusi dugun bezala,
arazoari aurre egiteko aldagai artiﬁzialak gehituko dira.
Murrizketetan aldagai artiﬁzialak gehitzeak jatorrizko problemaren formula-
zioa aldatu egiten du. Aldagai artiﬁzialak dituen problemaren soluzioa ez da ja-
torrizko problemaren soluzio izango aldagai artiﬁzialen batek zero baino balio
handiago bat hartzen badu. Oinarri optimoan aldagai artiﬁzialen agerpena ekidi-
teko, beharrezkoa da helburu funtzioa zigortzea. Zigortze honek ziurtatu behar du
helburu funtzioaren balioa neurri handi batean kaltetua izango dela aldagai artiﬁ-
zialen batek balio positiboa hartzen badu.
Adibidea. Izan bedi ondoko eredu lineala.
max z = −5x1 + 6x2 + 7x3
hauen mende
2x1 + 10x2 − 6x3 ≥ 30
5
2
x1 − 3x2 + 5x3 ≤ 10
2x1 + 2x2 + 2x3 = 5
x1, x2, x3 ≥ 0
Identitate matrizea lortzeko behar diren aldagai artiﬁzialak gehitu eta helburu
funtzioa zigortu ondoren, lortuko den forma estandarra ondokoa da:
max z = −5x1 + 6x2 + 7x3 + 0x4 + 0x5 − Mw1 − Mw2
hauen mende
2x1 + 10x2 − 6x3 −x4
+w1
= 30
5
2 x1 − 3x2 + 5x3
+x5
= 10
2x1 + 2x2 + 2x3
+w2
= 5
x1, x2, x3, x4, x5, w1, w2 ≥ 0
B
= I lortzeko, bi aldagai artiﬁzial gehitu ditugu, w1 eta w2, eta helburu fun-
tzioa zigortu dugu positiboa eta behar bezain handia izango den
M balio batez.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

60
2. Simplex metodoa
Zigortze-metodoa aplikatzeak esan nahi du hasierako oinarri kanonikoa lortze-
ko, aldagai artiﬁzialak behar izan direla, B
= (aw
1
a5 aw
2 ), eta helburu funtzioa
zigortu dela. Oinarrian aldagai artiﬁzialak daudenez, adierazleen errenkada kal-
kulatzeko, cT
B = (−M, 0, −M ) dela kontuan izan behar da.
Adibide honetarako, simplex metodoaren taula ondokoa da:
x1
x2
x3
x4
x5 w1 w2
−4M + 5 −12M − 6 4M − 7
M
0
0
0 −35M
−M aw1
2
10
−6
−1
0
1
0
30
0
a5
5
2
−3
5
0
1
0
0
10
−M aw2
2
2
2
0
0
0
1
5
2
2.6
Simplex algoritmoa
Har dezagun maximizatze-forma estandarrean idatzitako problema lineal bat, ha-
sierako B
= I oinarria lortzeko behar izan diren aldagai artiﬁzial guztiekin. Sim-
plex algoritmoaren urratsak ondokoak dira.
1. urratsa. Hasierako taula eraiki.
2. urratsa.
• zj − cj < 0 existitzen bada, soluzioa hobe daiteke. 4. urratsera joan.
• A matrizeko aj bektore guztietarako zj − cj ≥ 0 betetzen bada, 3.
urratsera joan.
3. urratsa.
• Balio positiboa duen aldagai artiﬁzialen bat existitzen bada1, proble-
ma bideraezina da. Amaitu.
1Balio positiboa duen aldagai artiﬁzialik ez bada existitzen, baina oinarrian zero balioa duen al-
dagai artiﬁzialen bat baldin badago, bi kasu gerta daitezke:
 soluzioa endekatua izatea edo ekuazio
erredundanteak egotea (ikus adibideak 82. orrialdean).
OpenCourseWare, UPV/EHU

2.6. Simplex algoritmoa
61
• Oinarrian aldagai artiﬁzialik ez badago, taulako xB soluzioa optimoa
da.
* A matrizeko aj bektore guztietarako zj − cj ≥ 0 betetzen da.
Baldin oinarriko ez diren aj bektore guztietarako zj − cj > 0
betetzen bada, xB soluzio optimo bakarra da. Amaitu.
* A matrizeko aj bektore guztietarako zj − cj ≥ 0 betetzen da. A
matrizean oinarrikoa ez den eta
zk − ck = 0 duen ak bektore-
ren bat existitzen bada, eta bektore horrentzat
yik, i = 1, . . . , m,
koordenaturen bat zero baino handiagoa bada, beste oinarriko
soluzio bideragarri bat kalkula daiteke. Problemak soluzio op-
timo anizkoitza du. 5. urratsera joan.
* A matrizeko aj bektore guztietarako zj − cj ≥ 0 betetzen da. A
matrizean oinarrikoa ez den eta
zk − ck = 0 duen ak bektoreren
bat existitzen bada, eta bektore horrentzat
yik ≤ 0 betetzen bada
i = 1, . . . , m, problemak soluzio optimo anizkoitza du, baina ez
da oinarriko soluzioa. Amaitu.
4. urratsa.
• A matrizean zj − cj < 0 duen aj bektoreren bat existitzen bada eta
yj koordenatu-bektorean ez badago osagai positiborik, soluzioa bor-
negabea da. Amaitu.
• A matrizean zj − cj < 0 duen aj bektoreren bat existitzen bada eta yj
koordenatu-bektorean zero baino handiagoa den osagairen bat badu,
5. urratsera joan.
5. urratsa. Oinarrian ondoko erregelak betetzen dituzten ak eta ar bektoreak
sartu eta irtengo dira, hurrenez hurren.
• Sartuko den ak bektoreak hau betetzen du:
zk − ck = min
j
{zj − cj/zj − cj ≤ 0}
k. zutabea pibot-zutabea da.
• Irtengo den ar bektoreak hau betetzen du:
xBr
yrk
= min
i
xBi
yik
/yik > 0
r. errenkada pibot-errenkada da.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

62
2. Simplex metodoa
Sartuko den bektoreari dagokion zutabean eta irtengo den bektoreari dago-
kion errenkadan dagoen
yrk koordenatuari pibot esaten zaio.
6. urratsa. Hurrengo taula kalkulatu.
• Taularen lehenengo zutabean oinarri berriko bektoreak kokatu.
• Taula berriko r. errenkada kalkulatzeko, aurreko taulako r. errenka-
dako osagaiak, pibot-errenkadakoak,
yrk pibot balioaz zatituz kalkula-
tuko da.
• Gainerako errenkadak kalkulatzeko, errenkada bakoitzerako biderka-
tzaile bat deﬁnituko da lehenik.
*
i. errenkadarako biderkatzailea: mi =
yik
yrk
, i = 1, . . . , m, i = r.
* Balio adierazleen errenkadarako biderkatzailea:
m0 =
zk − ck
yrk
.
Errenkada berri bakoitza kalkulatzeko, aurreko taulako errenkadari
pibot-errenkada biderkatzaileaz biderkatu ondoren kenduko zaio.
Balio adierazleen errenkada biderkatzaileen bidezko kalkulua erabiliz
eguneratu beharrean, deﬁnizioa aplikatuz egin daiteke, hau da,
zj −
cj = c
T
B yj − cj kalkulatuz.
Taula berriko errenkada guztiak kalkulatuak izan direnean, 2. urratsera joan.
Problemak soluzio optimo anizkoitza duen kasuan, oinarri optimo berriak kal-
kulatuko dira dagoeneko kalkulatuak izan direnak errepikatuko diren arte.
2.7
Eredu linealen ebazpena
Atal honetan lau adibide ebatziko dira simplex algoritmoa erabiliz, eta lortutako
taulak interpretatuko dira lau soluzio mota desberdinetarako:
 soluzio optimo ba-
karra, problema bideraezina, soluzio optimo anizkoitza eta problema bornegabea.
OpenCourseWare, UPV/EHU

2.7. Eredu linealen ebazpena
63
Adibidea. (Soluzio optimo bakarra). Ondoko problema ebatziko dugu sim-
plex algoritmoa erabiliz.
max z = 6x1 + 4x2 + 5x3 + 5x4
hauen mende
x1 + x2 + x3 + x4 ≤ 3
2x1 + x2 + 4x3 + x4 ≤ 4
x1 + 2x2 − 2x3 + 3x4 ≤ 10
x1, x2, x3, x4 ≥ 0
Ereduaren forma estandarra honakoa da:
max z = 6x1 + 4x2 + 5x3 + 5x4 + 0x5 + 0x6 + 0x7
hauen mende
x1 + x2 + x3 + x4 +x5
= 3
2x1 + x2 + 4x3 + x4
+x6
= 4
x1 + 2x2 − 2x3 + 3x4
+x7 = 10
x1, x2, x3, x4, x5, x6, x7 ≥ 0
Hasierako taula B
= (a5 a6 a7) oinarriarekiko kalkulatuko dugu. Oinarria
kanonikoa izanik, 54. orrialdeko adibidean ikusi dugun bezala, oinarri horri da-
gozkion kalkuluak bat datoz ereduaren parametroekin, eta hasierako taulan jasoko
dira. Bigarren eta hirugarren tauletan jasoko dira soluzio optimora iristeko egin
behar izan diren simplex algoritmoaren bigarren eta hirugarren iterazioetan egin-
dako kaluluak. Pibot balioa laukitxo batean adierazita agertzen da eta errenkade-
tarako biderkatzaileak taulatik kanpo, eskuin aldean.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

64
2. Simplex metodoa
x1
x2
x3
x4
x5
x6
x7
−6
−4
−5 −5
0
0
0
0
0 a5
1
1
1
1
1
0
0
3 m1 =
y11
y21 =
1
2
0 a6
2
1
4
1
0
1
0
4
0 a7
1
2
−2
3
0
0
1 10 m3 =
y31
y21 =
1
2
0
−1
7 −2
0
3
0 12
0 a5
0
1
2
−1
1
2
1 −
1
2
0
1
6 a1
1
1
2
2
1
2
0
1
2
0
2
m2 =
y24
y14 = 1
0 a7
0
3
2
−4
5
2
0 −
1
2
1
8
m3 =
y34
y14 = 5
0
1
3
0
4
1
0 16
5 a4
0
1
−2
1
2
−1
0
2
6 a1
1
0
3
0 −1
1
0
1
0 a7
0
−1
1
0 −5
2
1
3
A matrizeko aj bektore guztietarako zj − cj ≥ 0 betetzen denez, simplex
algoritmoaren iterazioak amaitu dira. Problemak soluzio optimo bakarra dauka.
x
∗
1 = 1, x
∗
2 = 0, x
∗
3 = 0, x
∗
4 = 2, x
∗
5 = 0, x
∗
6 = 0, x
∗
7 = 3,
z
∗ = 16
Iterazio bakoitzean egindako kalkuluen zehaztapenak ondokoak dira:
1. iterazioa
Hasierako taulan balio adierazle negatiboak daude, eta ondorioz, soluzioa ho-
be daiteke.
• Oinarrian sartuko den ak bektorea. zk − ck = min
j
{zj − cj/zj − cj ≤ 0}.
min{−6, −4, −5, −5} = −6 → a1 sartuko da.
Lehenengo taulako lehenengo zutabea pibot-zutabea da.
OpenCourseWare, UPV/EHU

2.7. Eredu linealen ebazpena
65
• Oinarritik irtengo den ar bektorea.
xBr
yr1
= min
i
xBi
yi1
/yi1 > 0 .
min
3
1
,
4
2
,
10
1
= min{3, 2, 10} = 2 → a6 irtengo da.
Lehenengo taulako bigarren errenkada pibot-errenkada da.
• Pibota: 2
Bigarren taula, hau da, B
= (a5 a1 a7) oinarri berriari dagokiona, kalkulatzeko
egin beharreko kalkuluak honakoak dira:
• Pibot-errenkada. Taula berriko bigarren errenkada berria kalkulatzeko,
hasierako taulako pibot-errenkada pibotaz zatitu behar da.
1
2
(2, 1, 4, 1, 0, 1, 0, 4) = (1,
1
2
, 2,
1
2
, 0,
1
2
, 0, 2)
• 1. errenkada. Biderkatzailea: m1 =
y11
y21 =
1
2 . Bigarren taulako lehenengo
errenkada kalkulatzeko, ondoko eragiketa egin behar da lehenengo taulako
errenkaden artean.
“lehenengo errenkada”
− “biderkatzailea” × “pibot-errenkada”
(1 , 1 , 1 , 1 , 1 , 0 , 0 , 3) −
1
2
(2 , 1 , 4 , 1 , 0 , 1 , 0 , 4) =
= (0 ,
1
2
, −1 ,
1
2
, 1 , −
1
2
, 0 , 1)
• 3. errenkada. Biderkatzailea: m3 =
y31
y21 =
1
2 . Bigarren taulako hirugarren
errenkada kalkulatzeko, ondoko eragiketa egin behar da lehenengo taulako
errenkaden artean.
“hirugarren errenkada”
− “biderkatzailea” × “pibot-errenkada”
(1 , 2 , −2 , 3 , 0 , 0 , 1 , 10) −
1
2
(2 , 1 , 4 , 1 , 0 , 1 , 0 , 4) =
= (0 ,
3
2
, −4 ,
5
2
, 0 , −
1
2
, 1 , 8)
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

66
2. Simplex metodoa
• zj − cj balio adierazleen errenkada. Biderkatzailea:
z1−c1
y21
= −
6
2 = −3.
Bigarren taulako adierazleen errenkada kalkulatzeko, ondoko eragiketa egin
behar da lehenengo taulako errenkaden artean.
“adierazleen errenkada”
− “biderkatzailea” × “pibot-errenkada”
(−6 , −4 , −5 , −5 , 0 , 0 , 0 , 0) − (−3)(2 , 1 , 4 , 1 , 0 , 1 , 0 , 4) =
= (0 , −1 , 7 , −2 , 0 , 3 , 0 , 12)
Balio adierazleen errenkada berria kalkulatzeko beste modu bat deﬁnizioa
aplikatuz egitea da, hau da, oinarri berriarekiko
zj − cj = cT
B yj − cj kalku-
latuz. Adibidez,
z1 − c1 = (0 , 6 , 0)





0
1
0





− 6 = 6 − 6 = 0
• Helburu funtzioaren balioa. Deﬁnizioa aplikatuko dugu bigarren taulan
dugun oinarri berriarekiko, hau da,
z = c
T
B xB = (0, 6, 0)





1
2
8





2. iterazioa
Bigarren taulan balio adierazle negatiboak existitzen dira, eta ondorioz, solu-
zioa hobe daiteke. Kalkuluak aurreko iterazioan bezala egiten dira.
• Sarrera-bektorea. min{−1, −2} = −2 → a4 bektorea sartuko da. Pibot-
zutabea: bigarren taulako laugarrena.
• Irteera-bektorea. min{
1
1
2
,
2
1
2
,
8
5
2
} = min{2, 4,
16
5 } = 2 → a5 bektorea irten-
go da. Pibot-errenkada: bigarren taulako lehenengoa.
• Pibot:
1
2
.
OpenCourseWare, UPV/EHU

2.7. Eredu linealen ebazpena
67
• Pibot-errenkada.
2(0 ,
1
2
, −1 ,
1
2
, 1 , −
1
2
, 0 , 1) = (0 , 1 , −2 , 1 , 2 , −1 , 0 , 2)
• 2. errenkada. Biderkatzailea: m2 =
y24
y14
= 1
(1 ,
1
2
, 2 ,
1
2
, 0 ,
1
2
, 0 , 2) − 1(0 ,
1
2
, −1 ,
1
2
, 1 , −
1
2
, 0 , 1) =
= (1 , 0 , 3 , 0 , −1 , 1 , 0 , 1)
• 3. errenkada. Biderkatzailea: m3 =
y34
y14
= 5
(0 ,
3
2
, −4 ,
5
2
, 0 , −
1
2
, 1 , 8) − 5(0 ,
1
2
, −1 ,
1
2
, 1 , −
1
2
, 0 , 1) =
= (0 , −1 , 1 , 0 , −5 , 2 , 1 , 3)
• Adierazleen errenkada. Biderkatzailea:
z4 − c4
y14
= −4
(0 , −1 , 7 , −2 , 0 , 3 , 0 , 12) + 4(0 ,
1
2
, −1 ,
1
2
, 1 , −
1
2
, 0 , 1) =
= (0 , 1 , 3 , 0 , 4 , 1 , 0 , 16)
2
Adibidea. (Problema bideraezina). Ondoko ereduari dagokion hasierako
taula 59. orrialdeko adibidean eraiki da.
max z = −5x1 + 6x2 + 7x3 + 0x4 + 0x5 − Mw1 − Mw2
hauen mende
2x1 + 10x2 − 6x3 −x4
+w1
= 30
5
2 x1 − 3x2 + 5x3
+x5
= 10
2x1 + 2x2 + 2x3
+w2 = 5
x1, x2, x3, x4, x5, w1, w2 ≥ 0
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

68
2. Simplex metodoa
Hasierako taula horretatik abiatuz, simplex algoritmoaren urratsak emango di-
tugu taula optimora iritsi arte. Hona hemen kalkuluak jasotzen dituzten taulak:
x1
x2
x3
x4
x5
w1
w2
−4M + 5 −12M − 6 4M − 7 M
0
0
0
−35M
−M aw1
2
10
−6 −1
0
1
0
30
5
0 a5
5
2
−3
5
0
1
0
0
10 −
3
2
−M aw2
2
2
2
0
0
0
1
5
8M + 11
0 16M − 1 M
0
0 6M + 3 −5M + 15
−M aw1
−8
0
−16 −1
0
1
−5
5
0 a5
11
2
0
8
0
1
0
3
2
35
2
6 a2
1
1
1
0
0
0
1
2
5
2
Azkenengo taulan
zj − cj ≥ 0 betetzen da A matrizeko aj bektore guztie-
tarako. Simplex algoritmoaren iterazioak amaitu dira, eta jatorrizko problema
bideraezina dela ondorioztatzen da, aldagai artiﬁzialak gehituz ebatzi den eredu
linealaren soluzio optimoan
w1 = 5 lortu delako.
2
Adibidea. (Soluzio optimo anizkoitza.) Ondoko eredu lineala ebatziko dugu.
min z = 3x1 + 6x2
hauen mende
x1 + 2x2 ≥ 4
x1 + x2 ≤ 5
3x1 + 4x2 ≥ 10
x1, x2 ≥ 0
Eredua maximizatze-forma estandarrean jarriko dugu. Gainera, beharrezkoak
diren aldagai artiﬁzialak gehitu eta helburu funtzioa zigortuko dugu. Eredua ho-
nela geratuko da:
OpenCourseWare, UPV/EHU

2.7. Eredu linealen ebazpena
69
max (−z) = −3x1 − 6x2 + 0x3 + 0x4 + 0x5 − Mw1 − Mw2
hauen mende
x1 +2x2 −x3
+w1
= 4
x1
+x2
+x4
= 5
3x1 +4x2
−x5
+w2 = 10
x1, x2, x3, x4, x5, w1, w2 ≥ 0
Simplex algoritmoaren taulak ondokoak dira:
x1
x2
x3
x4
x5
w1
w2
−4M + 3
−6M + 6
M
0
M
0
0
−14M
−M aw1
1
2
−1
0
0
1
0
4
0
a4
1
1
0
1
0
0
0
5
1
2
−M aw2
3
4
0
0
−1
0
1
10
2
−M
0 −2M + 3
0
M
3
M − 3
0 −2M − 12
−6 a2
1
2
1
−
1
2
0
0
1
2
0
2 −
1
4
0
a4
1
2
0
1
2
1
0
−
1
2
0
3
1
4
−M aw2
1
0
2
0
−1
−2
1
2
−
3
2
0
0
0
3
2
M
M −
3
2
−15
−6 a2
3
4
1
0
0
−
1
4
0
1
4
5
2
3
2
0
a4
1
4
0
0
1
1
4
0
−
1
4
5
2
1
2
0
a3
1
2
0
1
0
−
1
2
−1
1
2
1
0
0
3
0
0
M − 3
M
−12
−6 a2
0
1
−
3
2
0
1
2
3
2
−
1
2
1
0
a4
0
0
−
1
2
1
1
2
1
2
−
1
2
2
1
−3 a1
1
0
2
0
−1
−2
1
2
−2
Matrizeko bektore guztietarako
zj − cj ≥ 0 betetzen da azken taulan; ez dago
aldagai artiﬁzialik oinarri optimoan, eta ondorioz, taulan problemarako oinarriko
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

70
2. Simplex metodoa
soluzio bideragarri optimo bat lortu dugu:
x
∗
1 = 2, x
∗
2 = 1, x
∗
3 = 0, x
∗
4 = 2,
x
∗
5 = 0, z
∗ = 12. Soluzio hau graﬁkoko A puntuari dagokio.
Taula optimoan ikus daiteke a5 ez dela oinarriko bektorea, eta bere balio adie-
razlea
z5 − c5 = 0 dela. Horrek esan nahi du problema honek soluzio optimo
anizkoitza duela. Simplex algoritmoaren beste iterazio bat egin daiteke beste oi-
narriko soluzio bideragarri optimo bat kalkulatzeko. Horretarako, aurreko taula
optimoan a5 bektorea aukeratuko dugu oinarrian sartzeko. Irteera-bektorea auke-
ratzeko erregela aplikatuz, a2 bektorea ateratzea erabakiko da. Pibota
1
2 da, eta
taula berrirako kalkulu guztiak egin ondoren, lortuko den taula hau da:
x1
x2
x3
x4
x5
w1
w2
0
0
3
0
0 M − 3
M
−12
0
a5
0
2
−3
0
1
3 −1
2
0
a4
0
−1
1
1
0
−1
0
1
−3
a1
1
2
−1
0
0
1
0
4
Lortutako beste soluzio optimo bat honakoa da:
x
∗
1 = 4, x
∗
2 = 0, x
∗
3 = 0,
x
∗
4 = 1, x
∗
5 = 2, z
∗ = 12. Soluzio hau 71. orrialdeko irudiko B puntuari dagokio.
Taula berri horretan berriro ere soluzio optimo anizkoitzerako baldintzak be-
tetzen dira, hau da,
z2 − c2 = 0 da, a2 oinarrikoa ez den bektore bat izanik. a2
bektorea oinarrian sartuko bagenu, a5 atera beharko genuke, eta aurretik genuen
oinarri berberera bueltatuko ginateke. Hortaz, simplex algoritmoaren iterazioak
amaitu egin dira.
A eta B puntuak lotzen dituen segmentuko puntu guztiak ere problemaren
soluzio optimoak dira.
OpenCourseWare, UPV/EHU

2.7. Eredu linealen ebazpena
71
000
000
111
111
000
000
111
111
x1
x2
x1 + 2x2 = 4
x1 + x2 = 5
3x1 + 4x2 = 10
A
B
min
2
Adibidea. (Soluzio bornegabea.) Ebatz dezagun ondoko eredu lineala.
max z = x1 − 3x2
hauen mende
2x1 + 2x2 ≥ 4
−4x1 − 2x2 ≤ −6
x1, x2 ≥ 0
Forma estandarrean eta B
= I oinarri kanonikoa lortzeko behar diren aldagai
artiﬁzial guztiak gehitu ondoren, eredua honela geratuko da:
max z = x1 − 3x2 + 0x3 + 0x4 − Mw1 − Mw2
hauen mende
2x1 + 2x2 −x3
+w1
= 4
4x1 + 2x2
−x4
+w2 = 6
x1, x2, x3, x4, w1, w2 ≥ 0
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

72
2. Simplex metodoa
Hauek dira simplex algoritmoaren hiru iterazioetan egindako kalkulu guztiak.
x1
x2
x3
x4
w1
w2
−6M − 1
−4M + 3
M
M
0
0
−10M
−
M
aw1
2
2
−1
0
1
0
4
1
2
−
M
aw2
4
2
0
−1
0
1
6
0
−M +
7
2
M
−
1
2 M −
1
4
0
3
2 M
+
1
4
−M +
3
2
−
M
aw1
0
1
−1
1
2
1
−
1
2
1
1
a1
1
1
2
0
−
1
4
0
1
4
3
2
1
2
0
0
7
2
−2
M −
7
2
M + 2
−2
−
3
a2
0
1
−1
1
2
1
−
1
2
1
1
a1
1
0
1
2
−
1
2
−
1
2
1
2
1
−1
0
4 −
1
2
0 M + 1
2
M
2
0
a4
0
2
−2
1
2
−1
2
1
a1
1
1 −
1
2
0
1
2
0
2
Azkenengo taulan ikus daiteke a3 bektorea ez dagoela oinarrian,
z3 − c3 < 0
dela eta
yi3 ≤ 0, i = 1, 2, direla. Soluzioa bornegabea da.
OpenCourseWare, UPV/EHU

2.8. Bi faseko metodoa
73
x1
x2
2x1 + 2x2 = 4
−4x1 − 2x2 = −6
max
Ebazpen graﬁkoan ikusten da helburu funtzioa etengabe desplaza daitekeela,
helburu funtzioaren balioak inﬁnituruntz joko duelarik.
2
2.8
Bi faseko metodoa
Metodo hau zigortze-metodoaren antzekoa da, biak erabiltzen baitira hasierako
B
= I oinarri kanonikoa lortzeko, ereduari aldagai artiﬁzialak gehitu behar zaiz-
kionean. Problemak soluziorik izatekotan, optimaltasunaren baldintzak beteko
dituen taula 
(eta oinarrian aldagai artiﬁzialik gabea) lortzea da helburua. Zigortze-
metodoan helburu funtzioa zigortu egiten da horretarako; bi faseko metodoan, al-
diz, lehenengo fase batean aldagai artiﬁzialen batura minimizatu egiten da. Hauek
dira bi faseko metodoan eman beharreko urratsak.
1. fasea. Lehenengo fase honetan, problema linealaren murrizketak hartuko
dira kontuan; baina, problemaren jatorrizko helburu funtzioa optimizatu
beharrean, aldagai artiﬁzialen batura minimizatuko da. Simplex algoritmoa
erabiltzen da lehen fase honetako eredua ebazteko, eta ondoko bi kasuak
gerta daitezke:
• Helburu funtzioaren balio optimoa zero baino handiagoa bada, jato-
rrizko problema lineala bideraezina da.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

74
2. Simplex metodoa
• Kontrako kasuan, jatorrizko problema linealak badu soluziorik, eta
metodoaren bigarren fasean jarraitu behar da kalkulatzeko.
2. fasea. Bigarren fase honetan, optimizatuko den helburu funtzioa jatorrizko
problemarena da. Lehenengo fasean lortutako taula optimotik abiatu behar
da, eta balio adierazleen errenkada berria kalkulatu, hori baita helburu fun-
tzioa aldatzearen ondorioz taulan aldatuko den kalkulu bakarra. Ondoren,
simplex algoritmoaren iterazioekin jarraitu behar da optimaltasun baldin-
tzak betetzen diren arte.
Ondoren, bi faseko metodoaren bidez ebatzitako bi adibide aztertuko ditugu.
Adibidea. Ebatz dezagun ondoko problema lineala bi faseko metodoa erabi-
liz.
max z = 2x1 + 3x2 − 5x3
hauen mende
2x1 + 2x2 + 2x3 = 14
−2x1 + 5x2 − x3 ≤ −10
x1, x2, x3 ≥ 0
Forma estandarrean eta
w1 eta w2 aldagai artiﬁzialak gehitu ondoren, eredua
honela geratuko da:
max z = 2x1 + 3x2 − 5x3 + 0x4 + 0w1 + 0w2
hauen mende
2x1 + 2x2 + 2x3
+w1
= 14
2x1 − 5x2 + x3 −x4
+w2 = 10
x1, x2, x3, x4, w1, w2 ≥ 0
1. fasea. Eredu linealari gehitutako bi aldagai artiﬁzialen batura minimizatuko
dugu fase honetan, hau da,
min z
′
= w1 + w2. Simplex algoritmoa erabili ahal
izateko, helburu funtzioa maximizatze-forman jarriko dugu.
OpenCourseWare, UPV/EHU

2.8. Bi faseko metodoa
75
max (−z
′ ) = 0x1 + 0x2 + 0x3 + 0x4 − w1 − w2
hauen mende
2x1 + 2x2 + 2x3
+w1
= 14
2x1 − 5x2 + x3 −x4
+w2 = 10
x1, x2, x3, x4, w1, w2 ≥ 0
Simplex algoritmoaren taulak ondokoak dira:
x1
x2
x3
x4
w1
w2
−4
3 −3
1
0
0 −24
−1
aw1
2
2
2
0
1
0
14
1
−1
aw2
2
−5
1
−1
0
1
10
0
−7
−1
−1
0
2
−4
−1
aw1
0
7
1
1
1
−1
4
0
a1
1
−
5
2
1
2
−
1
2
0
1
2
5 −
5
14
0
0
0
0
1
1
0
0
a2
0
1
1
7
1
7
1
7
−
1
7
4
7
0
a1
1
0
6
7
−
1
7
5
14
1
7
45
7
A matrizeko bektore guztietarako
zj − cj ≥ 0 betetzen denez, lehenengo
faserako taula optimoa lortu da. Gainera,
z
′∗ = 0 lortu denez, jatorrizko problema
linealak badu soluziorik. Bigarren fasera goaz.
2. fasea. Jatorrizko problema linealaren helburu funtzioa optimizatuko du-
gu:
max z = 2x1 + 3x2 − 5x3. Aurreko fasean lortutako taula optimoan balio
adierazleen errenkada eguneratuko dugu honela:
• z1 − c1 = cT
B y1 − c1 = (3 , 2)


0
1


− 2 = 0.
• z2 − c2 = cT
B y2 − c2 = (3 , 2)


1
0


− 3 = 0.
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

76
2. Simplex metodoa
• z3 − c3 = c
T
B y3 − c3 = (3 , 2)


1
7
6
7


+ 5 =
50
7
.
• z4 − c4 = cT
B y4 − c4 = (3 , 2)


1
7
−
1
7


− 0 =
1
7
.
• z = cT
B xB = (3 , 2)


4
7
45
7


=
102
7
.
Bigarren faseko lehenengo taulan aldagai artiﬁzialei dagozkien zutabeak ez
dira agertuko, aldagai horiek ez daudelako helburu funtzioan. Balio adierazleen
errenkada eguneratu ondoren, honakoa da hasierako taula hori:
x1
x2
x3
x4
0
0
50
7
1
7
102
7
3 a2
0
1
1
7
1
7
4
7
2 a1
1
0
6
7
−
1
7
45
7
Hasierako taula horretan A matrizeko bektore guztietarako
zj − cj ≥ 0 be-
tetzen da, eta ondorioz, jatorrizko problema linealaren soluzio optimoa taulakoa
da.
x
∗
1 =
45
7
,
x
∗
2 =
4
7
,
x
∗
3 = 0,
x
∗
4 = 0,
z
∗ =
102
7
.
Gerta liteke bigarren fase honetan simplex algoritmoaren iterazio batzuk behar
izatea taula optimora iritsi baino lehen.
2
Adibidea. Bi faseko metodoa erabiliz 71. orrialdeko adibideko eredu lineala
ebatziko dugu.
max z = x1 − 3x2 + 0x3 + 0x4 + 0w1 + 0w2
hauen mende
2x1 + 2x2 −x3
+w1
= 4
4x1 + 2x2
−x4
+w2 = 6
x1, x2, x3, x4, w1, w2 ≥ 0
OpenCourseWare, UPV/EHU

2.8. Bi faseko metodoa
77
1. fasea. Helburu funtzioa:
min z
′ = w1 + w2 → max(−z′) = −w1 − w2.
max(−z
′ ) = 0x1 + 0x2 + 0x3 + 0x4 − w1 − w2.
x1
x2
x3
x4
w1
w2
−6
−4
1
1
0
0 −10
−1
aw1
2
2
−1
0
1
0
4
1
2
−1
aw2
4
2
0
−1
0
1
6
0
−1
1 −
1
2
0
3
2
−1
−1
aw1
0
1
−1
1
2
1 −
1
2
1
0
a1
1
1
2
0 −
1
4
0
1
4
3
2
1
2
0
0
0
0
1
1
0
0
a2
0
1
−1
1
2
1 −
1
2
1
0
a1
1
0
1
2
−
1
2
−
1
2
1
2
1
2. fasea. Jatorrizko problemaren helburu funtzioa:
max z = x1 − 3x2. Au-
rreko faseko taula optimoan balio adierazleak eguneratuz,
x1
x2
x3
x4
0
0
7
2
−2
−2
−3
a2
0
1
−1
1
2
1
1 a1
1
0
1
2
−
1
2
1 −1
0
4
−
1
2
0
2
0 a4
0
2
−2
1
2
1 a1
1
1
−
1
2
0
2
Azkeneko taulan
z3 − c3 < 0 betetzen da, y3 bektorearen osagai guztiak ne-
gatiboak izanik. Hortaz, problema bornegabea da.
2
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

78
2. Simplex metodoa
2.9
Simplex metodo berrikusia
Aurreko ataletan aztertu dugun simplex algoritmoan beharrezkoak direnak bai-
no kalkulu gehiago egiten dira eredu lineal baten soluzio optimoaren kalkuluan.
Beharrezkoak ez diren kalkuluak ekidinez sortu da simplex algoritmoaren berri-
kuspen bat den simplex metodo berrikusia.
Izan bedi eredu lineala forma estandarrean:
max z = c
T x
hauen mende
Ax
= b
x
≥ 0
B oinarri bat eta xB oinarriko soluzio bideragarria emanik, soluzio hori ho-
betzeko
zj − cj = cT
B B
−
1aj − cj balio adierazleak kalkulatuko dira. Oinarrian
sartuko da ondoko erregela betetzen duen ak bektorea:
zk − ck = min
j
{ zj − cj / zj − cj ≤ 0 }.
Oinarritik irtengo den bektorea aukeratzeko, ak bektorearen koordenatu-bek-
torea kalkulatzen da, hau da, yk = B
−
1ak pibot-zutabea, eta koordenatu horiek
eta xB bektorearen osagaiak erabiliz, oinarritik irtengo den ar bektorea aukeratu-
ko da ondoko erregela aplikatuz:
xBr
yrk
= min
i
xBi
yik
/ yik > 0
.
Kalkulu horiek guztiak egin ahal izateko simplex algoritmoaren iterazio ba-
koitzean aldatzen den B
−
1 ezagutzea beharrezkoa da. Horretaz gain, beharrez-
koak diren gainerako datuak eredu linealean bertan daude. Hortaz, honelako taula
murriztu batean jaso daitezke kalkuluak.
xn+1 xn+2 . . . xn+m
cT
B B
−
1
cT
B xB
cB
B
B
−
1
xB
OpenCourseWare, UPV/EHU

2.9. Simplex metodo berrikusia
79
Adibidea. Har dezagun 63. orrialdeko adibideko eredu lineala.
max z = 6x1 + 4x2 + 5x3 + 5x4 + 0x5 + 0x6 + 0x7
hauen mende
x1 + x2 + x3 + x4 +x5
= 3
2x1 + x2 + 4x3 + x4
+x6
= 4
x1 + 2x2 − 2x3 + 3x4
+x7 = 10
x1, x2, x3, x4, x5, x6, x7 ≥ 0
B
= (a5 a6 a7) oinarri kanonikorako hasierako taula osatzeko kalkuluak egin-
go ditugu.
B
=





1 0 0
0 1 0
0 0 1





,
N
=





1 1
1
1
2 1
4
1
1 2 −2 3





c
T
B = (0 , 0 , 0),
c
T
B B
−
1 = (0, 0, 0),
c
T
N = (6 , 4 , 5 , 5)
xB = B
−
1b =





1 0 0
0 1 0
0 0 1










3
4
10





=





3
4
10





Simplex metodo berrikusirako hasierako taula honakoa da:
x5
x6
x7
0
0
0
0
0 a5
1
0
0
3
0 a6
0
1
0
4
0 a7
0
0
1 10
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

80
2. Simplex metodoa
Oinarrikoak ez diren N
= (a1 a2 a3 a4) bektoreen balio adierazleak kalkula-
tuko ditugu, oinarrian sartuko den bektorea aukeratzeko.
c
T
B B
−
1N − cT
N = (0, 0, 0)





1 1
1 1
2 1
4 1
1 2 −2 3





− (6, 4, 5, 5) = (−6, −4, −5, −5).
z1 − c1 = min{−6, −4, −5, −5} = −6 → a1 sartuko da.
Kalkula dezagun y1 pibot-zutabea.
y1
= B
−
1a
1
=





1 0 0
0 1 0
0 0 1










1
2
1





=





1
2
1





Ondoko erregela betetzen duen ar bektorea irtengo da oinarritik.
xBr
yr1
= min
3
1
,
4
2
,
10
1
= 2 → a6 irtengo da.
Taulako bigarren errenkada pibot-errenkada da, eta pibota
2 da. Lehenengo
errenkadarako biderkatzailea
1
2 da, hirugarren errenkadarako
1
2 eta balio adieraz-
leen errenkadarako
−
6
2 . Kalkuluak eginez, taula berria honakoa da:
x5
x6
x7
0
3
0
12
0
a5
1
−
1
2
0
1
6
a1
0
1
2
0
2
0
a7
0
−
1
2
1
8
Orain, oinarria B
= (a5 a1 a7) da. N = (a2 a3 a4 a6) izanik, oinarrikoak ez
diren bektore horietarako balio adierazleak kalkulatuko ditugu.
OpenCourseWare, UPV/EHU

2.9. Simplex metodo berrikusia
81
c
T
B B
−
1N − cT
N = (0, 3, 0)





1
1 1 0
1
4 1 1
2 −2 3 0





− (4, 5, 5, 0) = (−1, 7, −2, 3)
z4 − c4 = min{−1, −2} = −2 → a4 sartuko da.
Pibot-zutabea kalkulatuko dugu.
y4
= B
−
1a
4
=





1 −
1
2
0
0
1
2
0
0 −
1
2
1










1
1
3





=





1
2
1
2
5
2





Ondoko erregela betetzen duen ar bektorea irtengo da oinarritik.
xBr
yr4
= min
1
1
2
,
2
1
2
,
8
5
2
= min 2, 4,
16
5
= 2 → a5 irtengo da.
Taulako lehenengo errenkada pibot-errenkada da, eta pibota
1
2 da.
Bigarren
errenkadarako biderkatzailea
1 da, hirugarren errenkadarako 5 eta balio adieraz-
leen errenkadarako
−4. Kalkuluak eginez taula berria honakoa da.
x5
x6
x7
4
1
0 16
5
a4
2 −1
0
2
6
a1
−1
1
0
1
0
a7
−5
2
1
3
Orain, oinarria B
= (a4 a1 a7) da. N = (a2 a3 a5 a6) izanik, oinarrikoak ez
diren bektore horietarako balio adierazleak kalkulatuko ditugu.
c
T
B B
−
1N − cT
N = (4, 1, 0)





1
1 1 0
1
4 0 1
2 −2 0 0





− (4, 5, 0, 0) = (1, 3, 4, 1).
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

82
2. Simplex metodoa
Balio adierazle negatiborik ez dagoenez, soluzioa optimoa da. Gainera, baka-
rra da:
x
∗
1 = 1, x
∗
2 = 0, x
∗
3 = 0, x
∗
4 = 2, x
∗
5 = 0, x
∗
6 = 0, x
∗
7 = 3, z
∗
= 16.
2
2.10
Oharrak
1. Biribiltze-erroreak. Simplex algoritmoaren iterazioetan egin beharreko kal-
kuluak eskuz egiten badira, ez dago biribiltzeko beharrik. Baina, konputagailuek
zatikiak zehaztasun aritmetiko ﬁnituko biribiltzeen bidez kalkulatzen dituztenez,
kasuren batean, simplex metodoaren bidez lortutako oinarriko soluzio bideragarri
optimoak problemaren murrizketak ez betetzea, edo beteta ere, soluzioa optimo
ez izatea gerta daiteke. Hori biribiltze-
erroreen pilaketagatik gertatzen da. Errorea
modu honetan ebaluatua izan daiteke. BxB = b bada, biribiltze-erroreak daude-
la ondoriozta daiteke. Errorea esanguratsua bada, zuzendua izan daiteke honela:
zuzenean B
−
1 kalkulatu, taularen erroreak zuzendu eta iterazioekin jarraitu.
2. Aldagai artiﬁzialak oinarri optimoan. Gerta liteke oinarri optimoan alda-
gai artiﬁzialak zero balioarekin agertzea. Horrek bi egoera adieraz ditzake:
 eredu
linealean murrizketa erredundanteak daudela edo soluzioa endekatua dela. Ikus
ditzagun bi kasu horietarako adibide bana.
Adibidea. (Murrizketa erredundanteak). Har dezagun ondoko eredu linea-
la.
max z = x1 + 2x2 − x3
hauen mende
2x1 − x2 + x3 = 12
−x1 + 2x2 + x3 = 10
x1 + x2 + 2x3 = 22
x1, x2, x3 ≥ 0
w1, w2 eta w3 aldagai artiﬁzialak gehitu, helburu funtzioa zigortu eta simplex
algoritmoaren hiru iterazio egin ondoren, taula optimoa lortuko da.
OpenCourseWare, UPV/EHU

2.10. Oharrak
83
x1
x2
x3
w1
w2
w3
−2M − 1
−2M − 2
−4M + 1
0
0
0
−44M
−M
aw1
2
−1
1
1
0
0
12
1
−M
aw2
−1
2
1
0
1
0
10
−M
aw3
1
1
2
0
0
1
22
2
−6M
6
M − 4
0
0
4
M − 1
0 −4M − 10
−M
aw1
3
−3
0
1
−1
0
2
−1
a3
−1
2
1
0
1
0
10 −
1
3
−M
aw3
3
−3
0
0
−2
1
2
1
0
−4
0
2
M
2
M − 1
0
−10
1
a1
1
−1
0
1
3
−
1
3
0
2
3
−1
−1
a3
0
1
1
1
3
2
3
0
32
3
−M
aw3
0
0
0
−1
−1
1
0
0
0
0
4 2M + 4
3
2
M +
5
3
0
98
3
1
a1
1
0
1
2
3
1
3
0
34
3
2
a2
0
1
1
1
3
2
3
0
32
3
−M
aw3
0
0
0
−1
−1
1
0
w3 aldagai artiﬁziala oinarri optimoan dago, baina zero balioa hartzen du. Ka-
su honetan, problemak ekuazio erredundanteak ditu. Eredu linealaren murrizketak
aztertzen baditugu, egiazta daiteke hirugarren murrizketa aurreko bien batura dela.
Eredutik hirugarren murrizketa kenduz gero, eredu linealak badu soluziorik.
2
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala

84
2. Simplex metodoa
Adibidea. (Soluzio endekatua). Izan bedi ondoko eredu lineala:
max z = x1 + x2 + 3x3
hauen mende
x1 + 5x2 + x3 ≤ 7
x1 − x2 + x3 = 5
1
2
x1 − 2x2 + x3 = 5
x1, x2, x3 ≥ 0
x4 nasaitze-aldagaia eta w1 eta w2 aldagai artiﬁzialak gehitu, helburu fun-
tzioa zigortu eta simplex algoritmoa aplikatuz, taula optimoa lortuko da.
x1
x2
x3
x4
w1
w2
−
3
2 M − 1
3M − 1 −2M − 3
0
0
0
−10M
0
a4
1
5
1
1
0
0
7
−M
aw1
1
−1
1
0
1
0
5
−M
aw2
1
2
−2
1
0
0
1
5
1
2 M + 2
M − 4
0
0
2M + 3
0
15
0
a4
0
6
0
1
−1
0
2
3
a3
1
−1
1
0
1
0
5
−M
aw2
−
1
2
−1
0
0
−1
1
0
Taula optimoan
w2 aldagai artiﬁziala oinarrian dagoela ikusten da. Oraingoan
ere, aurreko adibidean bezala, zero balioa hartzen du. Hala ere, kasu honetan
ereduak ez du murrizketa erredundanterik.
Oinarri aldaketa bat eginez, beste taula optimo hau lor daiteke. Bertan ikusten
den bezala, soluzio optimoa endekatua da.
x1
x2 x3 x4
w1
w2
4
0
0
0 7 + M −4 + M 15
0 a4 −3
0
0
1
−7
6
2
3 a3
3
2
0
1
0
2
−1
5
1 a2
1
2
1
0
0
1
−1
0
OpenCourseWare, UPV/EHU

2.10. Oharrak
85
2
3. Ziklatzearen arazoa. Simplex algoritmoan, oinarrian sartuko den bekto-
rea aukeratzerakoan, erregela bektore batek baino gehiagok betetzea gerta daiteke.
Berdinketa kasuan, bektore horien artean edozein aukeratuko dugu, erabaki honek
soluzio optimora iristeko egin beharreko iterazio kopuruan eragin nabarmena sor-
tuko ez duelarik.
Tamalez, ez da gauza bera gertatzen oinarritik irtengo den bektorearen aukera-
ketarekin. Irteera-
erregela bektore batek baino gehiagok betetzen badu, eta horien
arteko aukeraketa modu egokian egiten ez bada, ziklatzea gerta daiteke, hau da,
zenbait iterazioren ondoren, aurretik lortutako oinarri batera itzultzea, simplex al-
goritmoa etengabe ziklatzen geratuko delarik inoiz optimora iritsi gabe. Taulako
soluzioa endekatua denean eta irteera-
erregelan berdinketa zerorekin denean gerta
daiteke arazo hori2.
Badira ziklatze hori gerta ez dadin erabil daitezkeen erregelak, erregela lexi-
kograﬁkoak eta Bland-
en erregela, adibidez. Horiei esker, oinarritik irtengo den
aldagaia aukeratzen jakingo dugu inolako arazorik gabe.
4. Simplex algoritmoaren eraginkortasuna. Simplex algoritmoaren eragin-
kortasuna aztertzeko, ikerlanak egin izan dira, eta lortutako emaitzek diotenez,
soluzio optimora iristeko egin beharreko kalkulu kopurua eredu linealaren aldagai
kopuruaren mende baino murrizketa kopuruaren mende dagoela.
2Adibide bat ikus Linear programming and network ﬂows. M. S. Bazaraa et al. liburuan
Ikastaroa: Ikerkuntza Operatiboa. Programazio Lineala
