








2.4 CISC eta RISC diseinu-filosofiak
Agindu-multzoen diseinuaren eboluzioa konputagailuen eboluzio bera izan da.
1955-1975 urteetan, konputagailuen agindu-multzoak, eta, horrekin batera,
hardwarea, gero eta konplexuagoak ziren. Konputagailu horiei CISC (Complex
Instruction Set Computer) deritze. CISC motako konputagailuen ezaugarriak,
izenak dioen moduan, hauek dira: agindu-multzoa konplexua da (formatuak,
eragiketa-kodeak, eragiketa motak, helbideratze-moduak, ...), agindu asko dago,
eta, ondorioz, hardwarea ere konplexua da (esaterako, badaude MMM motako
eragiketak edo hardware berezia eragiketa bereziak egiteko).
70eko hamarkadan, hala ere, aldaketa handi bat gertatu zen diseinu-filosofian.
Izan ere, aginduen erabilerari buruzko datu estatistiko zehatzak erabili ziren
diseinu-erabakiak hartzeko. Bi puntutan oinarritu zen diseinu-filosofiaren
aldaketa:


- Prozesadorea eraikitzeko ditugun baliabideak (transistoreak, finean) mugatuak
dira. Beraz, erabaki behar da zertarako erabili halako transistoreak eta
zertarako ez, helburu bakar batekin: eraginkortasuna, hots, programen exekuzio-
abiadura ahalik eta handiena izatea.


- Agindu konplexuak oso gutxitan erabiltzen dira, eta, oro har, oso kasu
berezietarako. Problema bat planteatzen du horrek. Izan ere, programatzaileek
goi-mailako hizkuntzetan idazten dituzte haien programak; gero, konpiladore
batek itzuliko ditu agindu horiek makina-hizkuntzara. Konpiladoreari dagokio,
beraz, prozesadorearen baliabideak ustiatzea, ahalik eta modurik
eraginkorrenean, hots makina-hizkuntzako agindurik egokienak aukeratzea goi-
mailako hizkuntzen egiturak itzultzeko. Baina asko zailtzen da lan automatiko
hori konputagailuaren agindu-multzoa, eragiketak eta helbideratze-moduak oso
konplexuak direnean. Ondorioz, konpiladoreak ez dira gauza, kasu askotan,
halako agindu konplexuak modu egokian erabiltzeko.


Hausnarketa horren ildoan sortu ziren RISC (Reduced Instruction Set Computer)
konputagailuak. Diseinu-filosofia berriaren leloa hau zen: optimizatu eta
erabili baliabideak gehien erabiltzen diren ataletan, eta hartu erabakiak
erabilerari buruzko estatistiketan oinarrituta; “konplexutasuna ez da errenta”.
Oso denbora gutxitan, filosofia berria inposatu zen, eta, harrezkero,
konputagailu guztiak hala diseinatu dira.
Beraz, RISC motako konputagailu batean, agindu-multzoa txikia da, formatuak
sinpleak dira (aginduen eta eragiketa-kodeen luzera finkoa da edo aukera gutxi
dago), helbideratze-moduak bakan batzuk eta sinpleak dira (esaterako: indexatua
eta erlatiboa), eta abar.
Ildo berean, konputagailu horien hardwarea ere sinpleagoa da. Oro har, RRR
motako konputagailuak dira, hots, eragiketa aritmetikoak erregistroetako
datuekin egiten dira, eta emaitzak ere erregistroetan gordetzen dira. Hori dela
eta, erregistro orokor asko erabiltzen dira. Eskuarki, memoriako bi agindu
bakarrik definitzen dira, load eta store. Helburua garbia da: programen
exekuzio-denbora ahalik eta txikiena izatea.
Aginduak sinpleak direla eta, RISC motako agindu baten exekuzio-denbora CISC
motako agindu batena baino txikiagoa da. Baina, bestalde, algoritmo jakin bat
programatzeko, aginduak sinpleagoak direnez, agindu gehiago erabili beharko da
RISC kasuan CISC kasuan baino; hots, programak zertxobait luzeagoak izango
dira.


Adibidez, bi memoria-posizioen arteko trukaketa agindu bakar batekin egin
daiteke CISC konputagailu batean, baina hiruzpalau agindu erabili behar dira
RISC konputagailu batean:


CISC RISC
swap A, B ld r1, A
ldr2,B
stB,r1
stA,r2


Beraz, zenbait eragiketak edo funtziok denbora gutxiago beharko dute, agian,
CISC prozesadore batean RISC prozesadore batean baino. Dena den, hori ez da
nahikoa eragiketa hori agindu-multzoan sartzeko. Izan ere, honako bi datuak
kontuan hartu behar ditugu: zenbat aldiz erabiliko da eragiketa berezi hori
ohiko programetan? eta, zer ondorio jasan beharko dituzte gainerako aginduek
agindu berri hori gehitzeagatik? Ikus dezagun adibide bat.
Lehen aipatu den moduan, gaurko prozesadore gehienak RISC motakoak dira. Hala
ere, haien agindu-multzoak ez dira hasierako RISCenak bezain sinpleak. Gero eta
transistore gehiago integratzen dira txip batean prozesadoreak eraikitzeko (200
milioitik gora dagoeneko); beraz, baliabideak ugariak dira, eta, pixkanaka-
pixkanaka, agindu-multzoak konplexuago bihurtu dira (ez, hala ere, jatorrizko
CISC makinakoak bezainbeste). Edonola ere, filosofiari eutsi zaio: gastatu
baliabideak gehien erabiliko diren ataletan, eta hartu erabakiak erabilerari
buruzko analisi kuantitatiboetan oinarrituta.


                                       1
