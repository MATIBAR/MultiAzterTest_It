<?xml version="1.0" encoding="UTF-8"?>
2.  Segmentazio lineala
<number>
 
 
<number>
 
<number>
 
<number>
 
<number>
 
<number>
 u1 u2 u3 u4 u5 u6          
   u1 u2 u3 u4 u5 u6        
     u1 u2 u3 u4 u5 u6      
       u1 u2 u3 u4 u5 u6    
         u1 u2 u3 u4 u5 u6  
           u1 u2 u3 u4 u5 u6
 
 
 
<number>
 
<number>
 
<number>
 
<number>
 
10
 
 
 
 
 
 
 
 
 
 
10
 
12
 
12
 
12
 
15
 
15
 
 
15
 
15
 
15
 
 
 
 
 
 
20
 
20
           B           D/Ir                A           M           Id
rh = ri1 op             deskodetu
ri2         ir = M(pc)  A = EM[ri1]         C = A op B             EM[rh] = C
OP rh, ri1, pc = pc + 4 B = EM[ri2]
ri2
rh = M                  deskodetu
(ri1+d)     ir = M(pc)  A = EM[ri1]         mar = A + B mdr= M(mar) EM[rh]= mdr
LOAD rh, d  pc = pc + 4 B = d
(ri1)
M(ri1+d) =              deskodetu
ri2         ir = M(pc)  A = EM[ri1]         mar = A + B M(mar)= mdr  
STORE d     pc = pc + 4 B = d
(ri1),ri2               mdr = EM[ri2]
baldin (ri1
knp 0)                  deskodetu
pc = pc +   ir = M(pc)  if (EM[ri1] knp 0)                         
desp        pc = pc + 4      pc = pc + d
BR ri1,
desp
 
<number>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<number>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<number>
 
 
 
 
 
 
 
 
 
 
 
<number>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<number>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<number>
 
 
 
 
 
 
 
 
 
 
 
<number>
 
<number>
          urratsak   B        D/Ir              A       M        Id
aginduak
                           ir = AM
                           (pc)     deskodetu         mar = A mdr2 =
rh = ri1 op ri2            pc = pc  A = EM[ri1]       op B    mar      EM[rh] =
OP rh, ri1, ri2            + 4      B = EM[ri2]       ir3 =   ir4 =    mdr2
                           (pc1 =   ir2 = ir          ir2     ir3
                           pc)
                           ir = AM
                           (pc)     deskodetu         mar = A mdr2=DM
rh = M(ri1+d)              pc = pc  A = EM[ri1]       + B     (mar)    EM[rh] =
LOAD rh, d(ri1)            + 4      B = d             ir3 =   ir4 =    mdr2
                           (pc1 =   ir2 = ir          ir2     ir3
                           pc)
                           ir = AM  deskodetu         mar = A
                           (pc)     A = EM[ri1]       + B     DM(mar)=
M(ri1+d) = ri2             pc = pc  B = d             mdr1 =  mdr1      
STORE d(ri1), ri2          + 4      mdr0= EM[ri2]     mdr0    ir4 =
                           (pc1 =   ir2 = ir          ir3 =   ir3
                           pc)                        ir2
                           ir = AM  deskodetu
baldin (ri1 knp 0)         (pc)     if (EM[ri1] knp
pc = pc + desp             pc = pc  0)                                
BR ri1, desp               + 4         pc = pc1 + d
                           pc1 = pc (ir2 = ir)
 
<number>
 
<number>
 
 
 
 
 
<number>
 
<number>
 
<number>
 
<number>
 
<number>
 
<number>
 
<number>
 
 
 
 
 
 
 
<number>
 
<number>
 
41
 
 
 
 
41
 
41
Agindua             distantzia 1      distantzia 2        distantzia 3
OP / OP             I(UAL)  S(A/B) I(mar)  S(A/B)   I(mdr2)  S(A/B)
OP / LD         I(UAL)  S(A)   I(mar)  S(A)     I(mdr2)  S(A)
OP / ST         I(UAL)  S(mdr0)I(mar)  S(mdr0)  I(mdr2)  S(mdr0)
        hel     I(UAL)  S(A)   I(mar)  S(A)     I(mdr2)  S(A)
OP / BR             I(UAL)  S(Konp)I(mar)  S(Konp)  I(mdr2)  S(Konp)
LD / OP             GELDITU           I(DM)  S(A/B)    I(mdr2)  S(A/B)
LD / LD         GELDITU           I(DM)  S(A)      I(mdr2)  S(A)
LD / ST         I(DM)  S(mdr1) I(DM)  S(mdr0)   I(mdr2)  S(mdr0)
        hel     GELDITU           I(DM)  S(A)      I(mdr2)  S(A)
LD / BR             GELDITU           I(DM)  S(Konp) (?I(mdr2)  S(Konp)
ST eta BR/ -        -                 -                   -
Kontrola            IR – IR2        IR – IR3          IR – IR4
 
<number>
Zirkuitulaburrak        Kontrola
I(UAL)  S(A)         IR2(ak) = OP        IR(ak) = OP+LD+ST        IR2(Rh) = IR(Ri1)
I(UAL)  S(B)         IR2(ak) = OP         IR(ak) = OP                 IR2(Rh) = IR(Ri2)
I(UAL)  S(Konp)      IR2(ak) = OP         IR(ak) = BR                 IR2(Rh) = IR(Ri1)
I(UAL)  S(mdr0)      IR2(ak) = OP          IR(ak) = ST                 IR2(Rh) = IR(Ri2)
I(mar/DM)  S(A)      IR3(ak) = OP+LD        IR(ak) = OP+LD+ST   IR3(Rh)= R(Ri1)
I(mar/DM)  S(B)      IR3(ak) = OP+LD        IR(ak) = OP                 IR3(Rh) = IR(Ri2)
I(mar/DM)  S(Konp)   IR3(ak) = OP+LD        IR(ak) = BR                 IR3(Rh) = IR(Ri1)
I(mar/DM) S(mdr0)    IR3(ak) = OP+LD        IR(ak) = ST                 IR3(Rh) = IR(Ri2)
I(DM)         S( IR3(ak) = LD        IR2(ak) = ST                IR3(Rh) = IR2(Ri2)
I(mdr2)  S(A)        IR4(ak) = OP+LD        IR(ak) = OP+LD+ST          IR4(Rh)= R(Ri1)
I(mdr2)  S(B)        IR4(ak) = OP+LD        IR(ak) = OP                 IR4(Rh) = IR(Ri2)
I(mdr2)  S(Konp)     IR4(ak) = OP+LD        IR(ak) = BR                 IR4(Rh) = IR(Ri1)
I(mdr2)  S(mdr0)     IR4(ak) = OP+LD        IR(ak) = ST                 IR4(Rh) = IR(Ri2)
 
<number>
Geldiketa Kontrola
          IR2(ak) = LD        IR(ak) = OP+LD+ST+BR        IR2(Rh)= IR(Ri1)
Ziklo bat IR2(ak) = LD         IR(ak) = OP         IR2(Rh) = IR(Ri2)
          [ IR3(ak) = LD         IR(ak) = BR         IR2(Rh) = IR(Ri1) ]  ?
 
46
 
46
 
 
<number>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<number>
 
50
 
50
 
50
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
50
 
50
1         LD        R1, 0(R2)
2        ADD        R3, R1, R4
3        MUL        R4, R5, R5
4        ADD        R4, R6, R8
5        SUB        R2, R2, R6
6        BNZ        R2, (15)   
7        MULI        R5, R9, #3
8        SUB        R8, R2, R6
...
15        SUB        R8, R2, R3
16        DIVI        R9, R5, R8
 
<number>
 
<number>
 
<number>
 
<number>
 
59
 
60
 
60
 
62
 
62
Jauzi aginduen PC-a Helburuko agindua Hurrengo @
4                   ADD R1, R1, #1    9
10                  LD R4, A(R1)      2
 
<number>
 
65
                                         1  p0:        LD        R4, A(R1)
                                         2          ADDI        R5, R4, #1
                                         3          ST        A(R1), R5
do i = 1, N                              4          BNZ        R5, p1
   a(i) = a(i) + 1;                    5          LD        R6, B(R1)
   if (a(i) == 0)then b(i) = b(i) + 1; 6          ADDI        R7, R6, # 1
   enddo                               7          ST        B(R1), R7
                                         8  p1:        ADDI        R1, R1, #1
                                         9          SUBI        R2, R1, #N
                                         10         BNZ        R2, p0
                                         11
                                           
 
<number>
 
<number>
 
<number>
        B            D/Ir         A           M           Id
         ir = AM (pc) deskodetu
JR Ri1   pc = pc+ 4   pc = EM[ri1]                        
         [pc1 = pc]
         ir = AM (pc) deskodetu
JALR Ri1 pc = pc+ 4   pc = EM[ri1] mdr1 = mdr0 mdr2 = mdr1 EM[r31]=mdr2
         pc1 = pc     mdr0 = pc
         ir = AM (pc) deskodetu
JAL desp pc = pc+ 4   pc=pc1+desp  mdr1 = mdr0 mdr2 = mdr1 EM[r31]=mdr2
         pc1 = pc     mdr0 = pc
 
<number>
 
<number>
      B          D/Ir        A             M            Id
       ir=AM(pc)  deskodetu
CALL d pc = pc+ 4 A = sp      mar = A – 4 DM(mar)=mdr1 sp = mdr2
       pc1 = pc   mdr0 = pc   mdr1= mdr0    mdr2 = mar
                  pc =pc1 + d
       ir=AM(pc)  deskodetu   mar = A + 4   pc = DM(C)
RET    pc = pc+ 4 A = sp      C = A         mdr2 = mar   sp = mdr2
       pc1 = pc
 
<number>
      B           D/Ir      A         M               Id
TRAP x ir = AM(pc) deskodetu mdr1=mdr0 pc = @zerb_err.  
       pc = pc+ 4  mdr0 = pc           pc_eten = mdr1
    B            D/Ir A M Id
     ir = AM(pc)
IRET deskod’           
     pc = pc-eten
 
<number>
 
<number>
 
 
74
i  B  D/Ir  A      M*    Id     
                           
i+1   B     D/Ir*  A     M     Id
                           
i+2        B*     D/Ir  A     M*
                           
i+3              B     D/Ir  A*
 
<number>
i  B  D/Ir  A      M     Id     
                           
i+1   B     D/Ir*  A*    M*    Id
                           
i+2        B      D/Ir  A     M
                           
i+3              B     D/Ir  A
 
<number>
 
<number>
 
