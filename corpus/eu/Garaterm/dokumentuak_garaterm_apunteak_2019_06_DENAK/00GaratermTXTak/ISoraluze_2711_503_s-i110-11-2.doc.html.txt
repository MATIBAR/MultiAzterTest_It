







                                                    Konputagailuen Egitura: S/I
16

          3. GAIA. INFORMAZIOA TRUKATZEKO SISTEMAK: SARRERA/IRTEERA.
3.1.- SARRERA/IRTEERA-KO INTERFASEAREN DESKRIPZIOA.
Gaihonetan,CPUedoprozesadoreakanpoaldearekikonolakomunikatzendenaztertukodugu.Eraberean,komunikaziohorimakina-
mailannolakontrolatzendenikusikodugu.Komunikaziohorilortuahalizatekoperiferikoenlaguntzabeharduprozesadoreak.
Periferikoak mota askotakoak izan daitezke:
- Datuak aurkezteko: pantaila, inprimagailua...
- Datuak hartzeko: teklatua, sentsoreak,...
- Informazioa metatzeko: diskoak, zintak,..
- Ingurunea aldatzeko: motoreak, balbulak, ...
Periferikoakelektronikokikontrolatzendiraosoeradesberdinetan.HonengatikCPU-
kzuzeneankontrolatubeharkobalitu,kontrol-
programaketaperiferikoenkonexioakhirubusekinkonplexuegiakizangolirateke.Beraz,bitartekozirkuituberezibatsartzenda:
S/Ikokontroladorea.Sistemak3.1irudikoarenitxurahartukodu.
     3.1Irudia:Sistemarenitxuraperiferikoarenkontroladoreatxertatuondoren.






















Kontroladorea periferiko eta sistemako busen artean konektatzen den gailu
elektronikoa baino ez da eta makina-mailan erregistro-multzo bat bezala ikusten
du programatzaileak. Prozesadoreak erregistro horien bitartez komunikatzen da
periferikoarekin.




3.1.1.-S/I-kokontroladorearenbetebeharrak.
Hauexek dira S/I-ko kontroladorearen betebeharrak:
    * CPU-rekiko komunikazioa (sarrera/irteerako eragiketak burutzeko CPU-
      k egindako eskaerak hartzen ditu).
    * Periferikoaren kontrola, honek CPU-k eskatutakoa bete dezan.
    * Periferiko eta CPU-ren arteko informazioaren transferentzia erraztea.
Eskematikoki kontroladorea zer den 3.2 irudian ikus daiteke.
    3.2 Irudia: S/Iko kontroladore baten eskema, CPU eta periferikoarekiko
                          interfazea erakusten duena.
















Kontroladoreen konplexutasuna alda daiteke CPU-ri lana kentzeko asmoz.
Adibidez, teklatuko kontroladore xinple batek CPU-ri sakatutako teklaren kodea
itzuliko dio bere datu-erregistroan, baina diseina daiteke beste kontroladore
konplexuago bat, itzulpen bat egiteko teklaren kodetik ASCII kodera pasatzeko.
3.1.2.-Sarrera/irteera-kokontroladorearenerregistroak.
Kontroladoreak dituen erregistroak prozesadoreak makina-lengoaiaren aginduen
bidez atzitzen ditu, helburu orokorreko erregistroak edota memoria-posizioak
atzitzen dituen era berean. Kontroladorearen erregistroak hauexek izan ohi
dira:
* Egoera-erregistroa:
Periferikoaren egoerari buruzko informazioa gordetzen du. Adibidez, tekla bat
sakatu denentz, edo informazio konkretu bat inprimatu denentz.
CPU-kinformaziohoribehardueneanerregistrohonenedukinairakurtzendu.
* Kontrol-erregistroa:
HonetanCPU-
kidaztenduekintzakonkretubataurreraeramanahalizatekokontroladoreakbehardueninformazioa;adibidez,nolaeginbeharduenlanaperiferikoakedozeindenburutubehardeneragiketa.
* Datu-erregistroa:
Kontroladoreak periferikotik heldutako informazioa hemen metatzen du CPU-
k hortik har dezan edo alderantziz. Adibidez, tekleatutako karakterea edo
diskoan idatzi nahi den karakterea.
Bi aukera desberdin dago prozesadoreak kontroladorearen erregistroak atzi
ditzan, erregistro hauen "kokapenaren" arabera:
- Erregistroak memorian mapeatuta.
- Erregistroak memorian ez-mapeatuta edo S/I bereiztua.
2.1.3.-Sarrera/Irteeramemorianmapeatuta.
K
       3.3 Irudia: Memorian mapeatutako S/I erakusten duen memoria-mapa.
ontroladorearen erregistro bakoitzari memoria-mapako helbide fisiko bat
dagokio, memoria fisikoaren posizioekin gertatzen den bezala. Hau da,
kontroladorearen erregistroak memoria-posizioak bezalaxe irakurri eta idazten
dira, 3.3 irudian ikus daitekeen moduan.






















Ikusdezagunalaereadibidebatnon,RAMmemoriabateta3erregistrodunteklatuakonektatunahiditugunmakinabatekin.Helbidefisikoakhonakoakizangodira:
@datu-erregistroa= 1XXXX11(irakurketa)
@ kontrol-erregistroa = 1XXXX11 (idazketa)
@ egoera-erregistroa = 1XXXX10
@ RAM = 0XXXXXX
Makinahonenmemoriakohelbideak7bitekoakdira,berazmakinarenhelbideratze-
eremua,27posiziokoada.Zerozhastendenmemoria-helbidebatatzitzendenean
(nahizirakurtzekonahizidazteko)RAMmemoriaatzitzenda
(beraz,helbideratzeko7biterabiliarren,pisualtuenekoabeti0izangodaetahorregatikmemoriarentamaina26=64hitzetakoada).1XXXX01helbideanegindakoirakurketabateandatu-
erregistroairakurtzenda.1XXXX11helbideanidaztenbada,orduankontrol-
erregistroanidaztenda.1XXXX10helbideanirakurtzendeneankontroladorearenegoera-
erregistroairakurtzenda.


Diseinuaegindenmoduan,aurreikusidateklatuasarrerakoperiferikoadelaetainoizezduguladatu-
erregistroan,hauda1XXXX11helbideanidatziko.Erabereankontrol-
erregistroanburutukodeneragiketairakurketaizangodenez,posibleadabierregistrohauekhelbidebereanmapeatzea.Besteaukerabatizangolitzatekebierregistrohoriekhelbidedesberdinetanegotea,horrelabietanidatzietairakurriahalizangolitzate.Helbideakhonelageratukolirateke:
    * datu-erregistroa 1XXXX01 helbidean mapeatuta,
    * kontrol-erregistroa 1XXXX11helbidean mapeatuta,
    * egoera-erregistroa 1XXXX10 helbidean mapeatuta.
         1. irudian, erregistroen konexioa nola gauzatzen den ikus dezakegu.
O
   3.4 Irudia: Erregistroen konexioaren eskema memorian mapeatuta daudenean.
ndoren, S/Iko erregistroak memorian mapeatzearen abantaila eta desabantailak
aurkeztuko ditugu:
Abantailak:
S/I-ko erregistroak memoria posizioak bezalaxe atzitzen dira, hots, edozein
agindu eta edozein helbideratze-modu erabil daitezke. Izan ere, memorian
mapeatutako erregistroak memoria fisikoaren posizioak bailira maneiatzen dira
eta CPUa ez da enteratzen erregistro ala memoria-posizioa den.
Desabantailak:
Espazioa galtzen da memoria fisikorako.
Oso zaila da erabiltzaileak S/Iko erregistroak atzitu ditzan galeraztea. Eta
normalean Sistema-Eragilea (SE) da horretaz arduratu behar dena. Nolabait
erabiltzailearen atzipena galerazi behar da oso probablea baita zerbait
hondatzea ezjakintasunagatik. Kasu honetan hardware bitartez detektatu behar da
programa zein motakoa den: erabiltzaile arrunt batena edo SEarena eta lehenengo
motakoa bada transferentzia galerazi. Normalean prozesadoreek seinale berezi
bat izaten dute kontrol-busean exekutatzen ari den programaren mota
adierazteko: erabiltzaile arrunta edo berezia. Hori horrela bada aginduak
beharrezkoak dira mota hori aldatu ahal izateko eta egoera-hitzan (PSW) gorde
beharko da exekutatzen ari den programaren mota.
3.1.4.-Sarrera/Irteerabereiztuaedomemorianezmapeatua.
Helbidea, memoria-posizio bati edo S/I-ko kontroladorearen erregistroetariko
bati dagokion adierazten duen seinale berezi bat dago. Seinale hau IO/M da
(InputOutput/Memory = SarreraIrteera/Memoria). 3.5 irudian ikus daitekeen
moduan, seinale honi esker, memoria-mapa bat eta S/I-ko mapa bat desberdindu
daitezke.


M
          3.5 Irudia: S/I bereiztua duen sistema baten memoria-mapa.

emoria atzitzen duen agindu bat exekutatzen denean, MOV, ADD eta INC
bezalakoak, IO/M seinalea desaktibatuta dago (IO/M = 0); era honetan,
prozesadoreak sortutako helbidea memoria fisikoari dagokiola jakin daiteke.
Programak S/Iko portuak atzitu nahi baditu, agindu berezi bat exekutatu behar
du. Sarrera/irteerako agindu bereziak hauexek izan ohi dira:
INbarne_erregistro_kodea,portu_kodea
OUTportu_kodea,barne_erregistro_kodea
Bi agindu hauek exekutatzen direnean IO/M seinalea aktibatzen da (IO/M = 1). Bi
parametro dituzte: alde batetik, prozesadorearen erregistro bat eta beste
aldetik, S/Iko portu edo erregistro bat. Agindua IN edo OUT izatearen arabera,
portu horretan irakurri edo idatzi egiten da.
Laburbilduz, aurreko teknikarekiko desberdintasuna hauxe da: bi espazio
desberdin dago, memoria-mapa eta sarrera/irteerako mapa, eta hauetara atzitzeko
agindu desberdinak erabiltzen dira.
Lehenerakutsitakoadibidearekinjarraiki,orain,memoriakohelbideratzeko-
eremuko7bitakerabildaitezkememoriaberahelbideratzeko,beraz,memoriarentamaina27posiziokoaizandaiteke.IO/
Mseinaleak0balioahartubeharkoduRAMmemoriaatzitzekoeta1balioasarrera/
irteeraerregistroakatzitzeko,3.6irudianikusdaitekeenbezala.
  3.6 Irudia:Erregistroenkonexioareneskemahauekezdaudeneanmemorianmapeatuta.



Jarraian, lehen egin den moduan aukera honen abantaila eta desabantaila
nagusiak aipatuko dira:
Abantailak:
Ez da memoria fisikoaren espazioa galtzen bi espazioak bereiztuta daudelako.
Erraza da programatzaileak erregistroak atzitu ditzan galeraztea, IN eta OUT
aginduak SEak bakarrik erabiltzen baditu.
Desabantailak:
2 agindu gehiago behar dira agindu-multzoan eta kontrol-seinale bat gehiago
(IO/M). Hauek direla eta, CPU-ren diseinua pixka bat konplexuagoa suertatzen
da.
Zenbait makinetan bi metodoak nahasten dira: adibidez, i8086-an oinarritutako
ordenadore pertsonaletan pantaila memorian mapeatuta dago baina teklatua,
inprimagailua, eta bestelako periferikoak ez. Hau da, pantailan karaktere bat
idazteko nahikoa da memoria-posizio batean idaztea (pantailako puntu edo
"pixel" bakoitzari memoria-espazioko posizio bat dagokio), baina beste
periferikoen erregistroak atzitzeko IN eta OUT aginduak erabili behar dira.




3.1.5.-S/Ikokontroladoreensailkapena.
Kontroladoreak honelaxe sailka daitezke:
Ez-multiplexatuak:
Kontroladoreakperiferikobakarbathartzenduberegain,3.7irudianikusdaitekeenbezala.
     3.7 Ilustrazioa: Kontroladore ez-multiplexatua erakusten duen eskema.



Hauperiferikoaazkarradeneanerabiltzenda,honelakontroladoreanahikolanpetutamantendukodelarik.Adibidez:
diskoazkarrak,pantailagrafikoak,...
Multiplexatuak:Kontroladorebatekperiferikobatzukhartzendituberegain
(ikus3.8irudia).
      3.8 Ilustrazioa: Kontroladore multiplexatua erakusten duen eskema.



Kasu honetan multiplexazioa karakterez edo blokez egin daitekeenez, jarraian
dator bakoitzaren azalpena:
    * Karakterez multiplexatua:
      Kontroladoreakperiferikobatiegitendiokasorikkarakterebatentransferentziakdirauenbitartean.Periferikomotelekinerabiltzenda.Adibidez,osonormaladakontroladorebakarbatekteklatuaetapantaila,biakbatera,kontrolatzea,teklatuakatentzioanoizbehinkabainoeskatzenezbaitu,teklabat
      (karakterebat)sakatzendenean,alegia.


    * Blokez multiplexatua:
      Kontroladoreakperiferikobatiegitendiokasorikkaraktere-
      blokebatentransferentziakdirauenbitartean.Periferikoazkarragorekinerabiltzenda.Adibidez,kontroladorebatetazenbaitzinta-
      unitate.






3.2.- KOMUNIKAZIOA ETA SINKRONIZAZIOA SARRERA/ IRTEERAKO ERAGIKETETAN.
Konputagailu-sitema batetan S/Iko eragiketak nola burutzen diren ongi ulertzeko
ondoko hiru galderak erantzun behar ditugu:
- Nola burutzen da informazioaren transferentzia?
- Nork burutzen du transferentzia?
- Noiz burutzen da transferentzia?
Nola burutzen da informazioaren transferentzia?
Hau erantzun ahal izateko zein periferiko erabiltzen ari den jakitea guztiz
beharrezkoa da, informazio-transferentzia burutzeko jarraitu behar diren
urratsak periferikoaren menpekoak baitira.
Adibidez, i8086 makinan oinarritutako konputagailu batetik inprimagailu
batetara datu transferentzia nola egiten duen ikusiko dugu. Inprimagailuaren
kontroladoreak memorian ez mapeatutako 3 erregistro ditu. Erregistro hauen
helbideak honakoak izan daitezke (hau inprimagailuarekin bateragarria den
konputagailuaren fabrikatzailearen araberakoa izan daiteke):
      Erregistroa                 HELBIDEA
      datuak                        378H
      egoera                        379H
      kontrol                       37AH


Erregistrohauek8bitekoakdira.Egoera-
erregistroko7.bita1ekoaizateakadieraztendu,inprimagailuainprimatzekoprestdagoela.Egoerahorretan,karakterebatinprimatunahiizanezgero,karakterehorrenASCII-
kodeadatu-
erregistroanidatzietaSTROBEsekuentziaidatzieginbeharda.STROBEsekuentziakegitenduenazerada:
kontrol-
erregistroarenn.bitean1ekoaidatziondoren,bitberarengainean0koaidaztenda.Eragiketahaubeharrezkoada,konputagailuakdatuaonardezan.Edozeinmodutan,kontroladoreakjasotakoinformaziohauezdainprimatuko,<CR>eta<LF>karaktereakbidaliarte.Bitartean,kontroladoreakbarnebufferbateangordekodu.
Erabatdesberdinadenbestekontroladorebatenadibidea,pantailarenkontroladorearenada.Kasuhonetan,pantailarenposiziobakoitzari
(80x25karaktereentzakolekuadutestuzkopantailaarruntbatek)hitzbatdagokiobufferrean.Hitzhorretan,posiziohorretanerakutsikodenkarakterearenASCII-
kodeaetakaraktereanolaerakutsikodenadieraztenduenatributuagordetzendira.Atributuaadieraztekobyteanbaliodesberdinaksardaitezke.Adibidez:
                       07H                   normala
                       70H                   alderantzikatua
                       87H                   aldizkakoa


Pantailaren kontroladore hau memorian mapeatuta behar du izan, 0B0000H edo
0B8000H helbidetik aurrera (txartel-grafikoaren arabera).
Pantaila horren (i,j) posizioan karaktere bat erakutsi nahi badugu ondorengo
posizioetan, karakterearen ASCII-kodea eta atributua idatzi beharko dira:
(i,j) karakterearen @ = oinarri @ + 2(80i+j)
(i,j) atributuaren @ = oinarri @ + 2(80i+j) + 1
Pantailan esaldi bat idazteko, nahikoa litzateke karaktere eta atributu
bakoitza dagokion memoriako posizioan idaztea.
Noiz burutzen da transferentzia?
Galdera honi erantzuna eman ahal izateko hauxe da jakin behar dena: nola
sinkronizatzen da CPU S/Iko gailuekin? Hau da, nola enteratzen da CPU S/Iko
eragiketa berri bat has daitekeela?
Kasu batzuetan erantzuna oso erraza da:CPU-k transferentzia berri bati hasiera
ematen dio berak nahi duenean. Adibidez: pantailan karaktere berri bat
aurkezteko ez du zertan egoera berezi baten zain egon beharrik: nahi duenean
karaktere berria memoria-posizio batean uzten du eta kitto.
Beste kasu limitea hauxe da: CPU-k erabiltzaileak tekleatutako karaktere bat
irakurri behar duenenan. Kasu honetan CPU-k erabiltzaileak tekla sakatu arte
itxaron behar du.
Kasurik orokorrenean, CPU-k gailua transferentzia burutzeko prest dagoenentz
detektatu beharko du nola edo hala. Detekzio hau bi eratan egin daiteke. Hau
da, badaude bi metodo CPU eta S/I-ko gailuak sinkronizatzeko:
    * Inkestabidezkosinkronizazioa:CPU-
      kgailuaprestdagoendetektatzekogaldetuegitendioinkestamodukobatez,bereerregistroakaztertuz.
    * Etenenbidezkosinkronizazioa:KasuhonetankontroladoreadaCPU-
      riperiferikoaprestdagoelaesatendiona.Hauegitekoetenaizendatutakoseinalebataktibatzendu.
Nork burutzen du transferentzia?
Nork burutzen du kontroladore eta memoriaren arteko informazio-transferentzia?
(orokorrean periferiko batetik etorritako informazioa memorian metatzen da eta
alderantziz).
Bi aukera dago:
a) CPU-k S/Iko ekintza guztiak burutzen ditu.
b) CPU-k ekintza batzu baino ez ditu burutzen, beste guztiak kanpo zirkuitu
berezi batek burutzen dituelarik. Bi zirkuitu espezializatu mota dago:
    * DMA kontroladorea (memoriarako atzipen zuzena).
    * S/Iko prozesadorea (kanala).
3.2.1.-InkestabidezkoSarrera/irteera.
Kasu honetan, S/I-ko transferentzia prozesadoreak kontrolatzen du; hau da,
prozesadoreak ematen dio hasiera transferentziari periferikoa prest dagoela
detektatu ondoren. Hau egoera-erregistroaren bitartez jakiten da: egoeraren
inkesta edo egoeraren azterketa.
Bi inkesta mota:
    * Etengabeko inkesta (edo inkesta jarraia):
Programa nagusian exekutatu behar den algoritmoa hauxe da:
irakurri egoera-erregistroa
bitarteanez-prestegin
irakurri egoera-erregistroa
ambitartean
burutu S/I-ko transferentzia
Adb:
teklatua.DemagunCPUak10mskozikloaduelakaraktereajasotzekoetapertsonak10tekla
(karaktere)/segundosakadezakeela.
Karaktereenartekodenbora-tartea106ms/10karaktere=105ms/
karaktere.Horietetik10msjasotzekoeta99.990mslibre=>%99,99GALDUA
    * Inkesta periodikoa (edo aldizkako inkesta):
Egoera-erregistroa irakurtzen denean periferikoa ez badago prest, orduan
programa nagusiak beste eragiketa edo kalkulu batzu burutu ditzake eta hauek
bukatzean berriro aztertu egoera-erregistroa ea periferikoa prest dagoen.
Programa nagusian exekutatu behar den algoritmoa:
irakurri egoera-erregistroa
bitarteanez-prestegin
burutu beste eragiketa batzu /*edo itxaron denbora-tarte bat */
irakurri egoera-erregistroa
ambitartean
burutu S/I-ko transferentzia
Kasu honetan arazo bat sor daiteke: programa nagusiak beranduegi detektatzea
transferentzia burutu daitekeela. Adibidez, programa itxaroten ari den
bitartean edo beste kalkuluak egiten ari diren bitartean, erabiltzaileak bi
tekla sakatzen ditu eta lehenengoa galdu egiten da.
Alternatibabathauxeda:
inkestadenborizatua.Honetarakoperiferikoaktransferentziabatburutzekozenbatdenborabeharduenjakinbeharda.Denbora-
tartehauigaroondorensuposatzendaperiferikoaprestdagoelabestetransferentziaberribatburutzeko.Kasuhonetan,beraz,ezdabeharrezkoakontroladoreakegoera-
erregistrobatedukitzea
(honetarakobainoerabiltzenezbada,behintzat),zerenezbaitaaztertubehar.Garbidagoteknikahauezindelaerabilierantzun-
denboraezezagunadutenperiferikoekin.Adibidez,teklatua:erabiltzaileadabitekla-
sakatzekontsekutiborenartekodenborafinkatzenduenaetahauezdakonstantea!
3.2.2.-EtenenbidezkoSarrera/Irteera.
Etena, prozesadorearen aditasuna behar duen ohizkanpoko gertaera bat baino ez
da. Ohizkanpoko gertaerak honela sailkatzen dira:
    * Sinkronoak(Softwarezkoak):
      Etenaagindubatenexekuzioarenondorioada.Honengatikprogramarenfluxuarekikosinkronoada.Motabatzukdaude:
          o TRAP-ak:Eten-motahausortzenduenaginduaoso-
            osorikexekutatzendaetaondorenprozesadoreaketenarenzerbitzu-
            azpirrutinaexekutatukodu.Adibidez,komahigikorrezkoeragiketabateanOVFsortzendenean,edozerozkozatiketadenean,etaabar.
          o Agindua ez da osorik exekutatzen baina prozesadorea egoera ezagun
            batetan gelditzen da. Honela, hutsa ebatzi ondoren, etena sortu
            duen aginduaren exekuzioa hasten da berriro. Adibidez: paretasun-
            errorea memoria-irakurketa batetan.
          o Agindua ez da osorik exekutatzen eta prozesadorea egoera ezezagun
            batean gelditzen da. Honela guztiz ezinezkoa da programa
            berreskuratzea. Adibidez, memoria-posizio pribilegiatu bat atzitu
            nahi denean, edo kode ez zilegia duen agindu bat exekutatu nahi
            denean...
    * Asinkronoak(Hardwarezkoak):
      Etenhauekprogramarenexekuzioarenguztizindependienteakdira,prozesadoretikatgertatutakoekintzabatenondorioakdirelarik.Bimota:
          o HARDWAREARENHUTSAK:Tentsio-erorketa,bus-apurketa,...
          o SARRERA/IRTEERAKOAK:Sarrera/
            irteerakogailueksortzendituzteetenhauek.Hauekdiraguriinteresatzenzaizkigunak.
EdozeinCPU-keten-sarrerabatzudituzeintzuenbitartezperiferikoekberaieneten-
eskaerakluzatukodizkioteCPU-
ri.Periferikoatransferentziabatburutzekoprestdagoenean,berekontroladorearenegoera-
erregistrokobitbataktibatzenda
(inkestabidezkosinkronizazioanaztertzendenahainzuzen);unebereanINTirteera(eten-
eskaera)aktibatzenda,irteerahauCPU-
rensarreretarikobatekinkonektatutadagoelarik.Hardwareareneskemairudikoada.
CPU-ksarrerahauetarikobataktibatudeladetektatzenduenean(eten-
eskaera)etenhorimomentuhorretanbertanzerbitukoduenalaezerabakitzendu
(segunetagalerazitaalabaimendutadagoenedounehorretanburutzenaridenlanaS/I-
koeragiketabainogarrantzitsuagoabada).Baiezkoanprogramarenexekuzioagelditzendaetaetenarenzerbitzu-
azpirrutinarajauztenda.Etenarentratamenduabukatzendeneanprozesadoreaketendakoprogramarenexekuzioaberreskuratzendu.
Beraz, etenaren zerbitzu-errutina kanpo gertaera batek aktibatutako errutina
baino ez da. Errutina honek prozesadorea eta periferikoaren arteko informazio-
transferentzia burutzen du eta S/I-ko eragiketa eskatu zuen programari
transferentziaren emaitzari buruzko informazioa pasatzen dio. Hau guztiaren
eskema, 3.9 irudian ikus daiteke.
              3.9 Irudia: etenei erantzuteko mekanismoaren eskema





Lehentxeago aipatu denez, metodo honen abantaila hauxe da: prozesadoreak ez du
denborarik galtzen inkesta egiten eta beste ekintza batzuk burutu ditzake.
Desabantaila, makinaren hardwarea pixka bat konplexuagoa dela INT kontrol-
unitatearen sarrera-berria dela kausa, bere egoera algoritmoa konplexuagoa
izanik.
Eten bat sortzen denean burutzen diren ekintzak hauexek dira:
(1) Eten-eskaeraren detekzioa.
(2) Gorde etendako programaren egoera.
(3) Exekutatu behar den zerbitzu-errutinaren identifikazioa (periferikoaren
menpekoa).
(4) Zerbitzu-errutinaren exekuzioa.
(5) Etendako programarako itzulia.
Azter ditzagun orain banan banan.
3.2.2.1.-Eten-eskaerarendetekzioa.
Eten-eskaera CPU-ren sarrera baten aktibazioa da. CPU-k sarrera bat edo gehiago
izan dezake. Normalean etenak sor ditzaketen periferikoen kopurua CPU-ren
sarreren kopurua baino handiagoa izan ohi da. Honengatik periferikoak sarrera
horien artean banatu behar dira.
Orokorrean kontroladoreen irteerak kolektore irekikoak dira eta OR atea jarri
gabe elkar konekta daitezke.
CPU-k sarrera hori aztertu beharko du periodikoki. Normalean agindu baten
exekuzioa bukatzen denean aztertzen du, hurrengo aginduaren bilaketari ekin
baino lehen. Aginduak luzeak direnean, karaktere-kateen tratamenduak kasu,
karaktere baten gaineko eragiketa burutu ondoren aztertu ohi da. Normalean
eten-eskaerek berehala behar dute aditasuna. Honengatik ez da oso egokia eten-
seinalearen azterketa luzeegia izan daitekeen agindu baten exekuzioaren ondoren
egitea.
Oso normala da CPU-k etenen kontrako protekzio-baliabideren bat izatea,
adibidez: oso programa garrantzitsua exekutatzen ari denean. Orokorrean egoera-
hitzaren bit batzuk etenak baimenduta ala galerazita dauden adierazi ohi dute.
Eten-seinale bakarraren kasuan, hardwarea nolakoa izan daitekeen erakusten duen
eskema ikus daiteke 3.10 irudian.
       3.10 Irudia: eten-seinale bakarra dagoen kasurako hardware eskema





IF etenaren adierazlea (Interrupt Flag) da. Kontrol-unitateak aztertzen duen
seinalea INT* da, periferikoetatik heltzen den INT eten-eskaeraren seinalea
"maskaratuz" lortua. IF=0 denean etenak galerazita (disabled) daudela esaten
da. IF=1 denean, aldiz, etenak baimenduta daude (enabled). Eten-eskaera ez-
maskaragarriak esistitu ohi dira (NMI = Non Maskable Interrupt).
Eten-seinale batzu daudenean posible da bakar batzu baino ez galeraztea, 3.11
irudian ikus daitekeen bezala.
      3.11Irudia:eten-seinalebatbainogehiagodagoenkasurakohardwareeskema





Makina-lengoaietan IF bita eta maskara maneiatzeko agindu bereziak esistitu ohi
dira; Horrela, programatzailea uneoro hainbat etenetaz babesteko aukera izango
du.
Suposatuko dugu, etenaren zerbitzu-errutinaren exekuzioa hasten denetik amaitu
arte beste eten-eskaerak galerazita daude. Hau da, CPU-k eten bat zerbituko
duela erabakitzen duenean, IF bita automatikoki 0 izango da eta ez da berriro
aktibatuko zerbitzu-errutina amaitu arte.


3.2.2.2.-Gordeetendakoprogramarenegoera.
Teorikoki etenaren zerbitzu-errutinaren exekuzioa amaitzen denean etendako
programaren exekuzioa berreskuratu behar da. Hau egin ahal izateko beharrezkoa
da programaren egoera gordetzea etena onartzen denean.
Automatikoki gorde behar den gutxienezko informazioa hauxe da:
-PC: zerbitzu-errutinatik bueltatzerakoan exekutatu behar den hurrengo agindua
zein den jakiteko.
-PSW (baldintza-bitak edo egoera-bitak): zerbitzu-errutinatik bueltatzerakoan,
hau exekutatzen hasi aurretik zegoen egoera berean jarraitu dezan.
Zerbitzu-errutinak, bere aldetik, berak erabiltzen dituen erregistroen edukina
gorde beharko du. Zerbitzu-errutina ezin dela eten esan dugunez (maila
bakarreko etenak), prozesadorearen egoera posizio finkotan gorde daiteke.
Geroxeago ikusiko dugu prozesadore gehienetan maila anitzeko etenak onartzen
direla, eta horrexegatik prozesadorearen egoera pilan gorde beharko da.
2.2.2.3.-Zerbitzu-errutinaedoperiferikoarenidentifikazioa.
Etenak sor ditzaketen periferikoak desberdinak direnez eta bakoitzak tratamendu
egokitua behar duenez, etena detektatu (eta onartu) ondoren beharrezkoa da
periferiko eten-sortzailea identifikatzea berari dagokion zerbitzu-errutinara
jauzteko. Arazo hau agertzen da periferiko batzuk eten-sarrera bakarra
erabiltzen dutenean. Arazo hau ebazteko ondoko galderak egin behar dizkiogu
gure buruari:
- nork sortu du etena? ==> identifikazioa hardware bidez zein software bidez
egin daiteke.
- etena periferiko batek baino gehiagok eskatzen badu une berean, zeini egingo
zaio kaso lehenik? ==> lehentasuna.
    * Software bidezko identifikazioa:
Etenakbaimendutadaudela,INTseinaleaaktibatzendenbakoitzean,CPUzerbitzu-
errutinakonkretubatetarajauztenda(zerbitzu-errutinabanaeten-sarrerako):
zerbitzu-errutinaorokorra.Errutinahonenlehenengoaginduenhelburuahauxeda:eten-
eskaerasortuduenperiferikoarenidentifikazioaegitea,inkestabatenbidez,kontroladoreenegoera-
erregistroakaztertuz.Inkestarenordenakperiferikoenlehentasunaadieraztendu.Periferikoaidentifikatuaizandenean,beraridagokionzerbitzu-
errutinarajauztenda.
Ebazpen hau oso sinplea da baina motelegia izan daiteke. Hau erabiltzen duen
makina bat: Nintendo DS.




    * Hardware bidezko identifikazioa:
Kasuhonetanperiferikoaberaidentifikatzendaprozesadorearenaurrean.Horretarako,CPU-
kirteerabereziakbaditueteneskaerakonartzeko,INTAhainzuzen
(etenarenonarpena),3.12irudianikusdaitekeenbezala.IrteerahauenkopuruaINTsarrerenkopuruberada
[INT1,...,K====>INTA1,...,K].
 3.12 Irudia: kontroladorearen identifikazioa egiten duen hardwarearen eskema





CPU-k eten-eskaera onartzen duenean aktibatu den sarrerari dagokion INTA
irteera aktibatzen du. Seinale hau kontroladoreen sarrera izango da eta hauek
aztertuko dute; etena eskatu duen periferikoak seinale hau aktibatu dela
detektatzean, CPU-ri informazioa bidaliko dio honek jakin dezan zein den
exekuatu behar den zerbitzu-errutina.
Kontroladoreak prozesadoreari bidaltzen dion informazioa honelakoxea izan
daiteke:
- Zerbitzu-errutinaren helbidea (SIGNETICS 2650).
- Prozesadoreak exekutatuko duen agindu-kodea; agindu hau, logikoki, zerbitzu-
errutinarako jauzia da (i8080).
-Prozesadoreak,exekutatubehardenzerbitzu-
errutinarenhelbideagordetzenduentaulabatetaraatzitzekoerabilikoduenidentifikadorea.Teknikahoni"etenbektorizatua"izenaematenzaio
(i8086).
Edozeinkasutanere,bigarrenarazoaebaztekedaukagu,hots:
zereginunebereanperiferikobatzuketen-
eskaerasortubaldinbadute?Aurrekoeskemariezbadioguezergehitzen,etenaeskatuzutenperiferikoguztiek,INTAseinaleadetektatzean,dagokieninformazioabidalinahiizangolioketeprozesadoreari,guztiekbatera!Arazohauebaztekoerabiltzendirenaukeretakobatikusikodugu,Daisy-
chainedomargarita-katea.
CPU-k eten-eskaera hartu ondoren onartzea erabakitzen duenean INTA irteera
aktibatzen du. Kontroladore bakoitzak INTA sarrera eta irteera bana baditu.
Kontroladore batek bere INTA sarrera aktibatuta detektatzen duenean, berak ez
badu eten-eskaera luzatu, orduan bere INTA irteera aktibatzen du hurrengo
kontroladoreak azter dezan; prozesu hau errepikatzen da etena eskatu duen
kontroladoreraino heldu arte. Honek ez du bere INTA irteera aktibatzen eta
prozesadoreari errutina egokia exekuta dezan behar duen informazioa bidaltzen
dio.
Teknika honen bitartez, prozesadoretik hurbilen dauden periferikoak dira
lehentasun gorenekoak (INTA seinalea lehenago hartzen baitute). Ikusi 3.13
irudia.
                3.13 Iridia: margarita-katearen hardware eskema





3.2.2.4.-Zerbitzu-errutinarenexekuzioa.
Exekutatubehardenzerbitzu-
errutinazeindenaztertuondoren,burutubehardireneragiketakperiferikoarenetalortunahidenemaitzarenmenpekoakdira.
3.2.2.5.-Etendakoprogramarakoitzulia.
Zerbitzu-errutinaren azken agindua itzuliarena da: IRET edo RTI. Agindu honek
etendako programaren egoera (PC eta PSW) berreskuratzen du bere exekuzioa
berriro has dadin.
3.2.2.6.-Mailaanitzekoetenak.
Konputagailu gehienetan CPU etenda izan daiteke aurreko eten baten zerbitzu-
errutina exekutatzen ari den bitartean. Kasu honetan, zerbitzu-errutina berrira
jauzten da eten berria aurrekoa baino lehentasun handiagokoa baldin bada
soilik. Beraz, n lehentasuna duen etena sortzen denean, kasorik egiten zaio
etenak baimenduta badaude eta momentu horretan lehentasun txikiagoko etenaren
zerbitzu-errutina exekutatzen ari bada. Hau da, lehentasun mailak ezarri dira.
Kasu honetan IF ez da 0-n jarriko automatikoki.
         1. irudian,lehenikusitakoDaisy-
            Chainhardwareareneskeman,mailaanitzekoetenekinlaneginahalizatekoeginbeharrekoaldaketakzeintzukdirenikusdaiteke.
 3.14 Irudia: Daisy-chain hardwarea maila-anitzeko etenak jasateko aldaketekin







Kikontroladoreak,etenaeskatuduenahainzuzen,INTAseinaleahartzendueneanCPU-
rihonekzerbitzu-
errutinaidentifikatzekobehardueninformazioabidaltzendioetaSiseinaleadesaktibatzendu;honelaadieraztenduberaridagokionzerbitzu-
errutinaexekutatzenaridela.OrainKi+1kontroladoreaketenaeskatzenbaduINTAseinaleaezzaioiritsikoSiseinaleadesaktibatutabaitago;beraz,lehentasunaerrespetatzenda.EtenaKi-
1kontroladoreakeskatzenbaduondozerbitzukoda.Zerbitzu-
errutinarenexekuzioaamaitzendeneanSiseinaleaaktibatubeharkoda;horretarakoprozesadoreakkontroladoreariseinalebereziabidalibeharkodio.
3.2.2.7.-Etenenkontroladorea.
Etenen kontroladorea CPU eta S/I-ko kontroladoreen arteko bitartekaria da, bera
dela medio etenen kudeaketa eraginkorra lortzen delarik. Eten-eskaerak hartzen
ditu eta lehentasunaren arabera erabaki behar du heldutako eskaera CPU-ri
luzatu behar zaion ala ez. Eten-eskaera CPU-k onartzen duenean, etenen
kontroladoreak zerbitzu-errutina identifikatzeko behar den informazioa
bidaltzen dio CPU-ri.
Etenen kontroladorearen beste aukerak hauexek dira:
- etenak bereiztuta maskaratzea,
- lehentasunak programatzea (dinamikoki),
- etenen kontroladore zenbait kateatzea.



