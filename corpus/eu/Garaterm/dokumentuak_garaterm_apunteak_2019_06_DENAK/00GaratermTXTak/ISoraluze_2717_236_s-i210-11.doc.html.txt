







KonputagailuenEgitura(DMA)
7

3.3.- MEMORIARAKO ATZIPEN ZUZENA (DMA – Direct Memory Access)
Memoriaetaperiferikoenarteandatu-
kopuruitzelatransferitubehardeneanedoabiadurahandikotransferentziabateginbehardeneanorainarteikusitakometodoaezdabatereegokia.Datuguztiekprozesadoretikpasabeharbadute,denboraaskoerabilikodaS/
Ieragiketan.
Demagun disko eta memoriaren arteko transferentzia bat egin nahi dugula (ad.
sektore bat memoriara pasa nahi dugula):
•
Datuaskoidatzibehardugunezgero,prozesadoreakdenboraluzeaemangodulanhaubetetzen,bestegauzarikegingabe.
•Datu
guztiekprozesadoretikpasabehardutenezgero,transferentziaezda"osoazkarra"izangoeta,ondorioz,ezdituguperiferikoetamemoriarenabiadura-
ezaugarriakaprobetxatuko.

Daukagun eskema ondokoa da:

Transferentziahoriazkarragoaizandadin,hardwareberezibatsartukodugusistemanhorrelakodatu-
mugimenduazarduratzeko(kontuanhartuosolanerrazadela).ZirkuituhauDMA
(memoriarakoatzipenzuzena)kontroladoreada.Aurrekoeskemahorrelageratukolitzateke:


DMA-renbidezkosarrera/irteerabakarrikerabiltzendamemoria-
posiziokontsekutiboetandaudendatuaktransferitubehardirenean.Tipikoenakadibidez,kanpokomemoria-
biltegibatetamemorianagusiarenartekodatu-mugimenduakdira.
DMAmodukoidazketa/irakurketaprozesuarenhasieranprozesadoreakDMAkokontroladorea
(KDMA)programatukodulanhorretazarduradadin.Sarrera/
irteerakontrolatzekoeginbehardena,normalean,bigauzadira:bidalihelbideahelbide-
buseanetaRD/WRseinaleakontrol-busean.Ondoren,helbideaetabidalibehardirendatu-
kopuruagaurkotzendiraetadatuberribatbidaltzenda,guztiekinbukatuarte.
Halaizanik,busakkontrolatzendituztenbigailudaudeorain:
aldebatetikprozesadorea,normaleanbusakkontrolatzendituena,etabestaldetik,KDMA,S/
I-
koprozesuhauetanbusenkontrolaberegainhartzendituena.Biakbatera,prozesadoreaetaDMAkontroladorea,memoriaatzitzeaezinezkoadenezgero,soluziobataurkitubeharda.
a)Portuanitzekomemoriabat:

Kasu honetan bi bus daude eta CPUk bat kontrolatzen duen bitartean, KDMA-
k bestea kontrolatzen du. Horrela, P3 (irudian) eta memoriaren arteko
transferentzia bat egiten ari den bitartean, prozesadoreak, bere aldetik, bere
lanarekin jarraitzen du. Transferentzia osoa bukatuta dagoenean, DMA
kontroladoreak abisatuko dio prozesadoreari eta kito! Sinkronizazio hau, beti
bezala, inkestaren bidezkoa (CPU-k burutzen duena) edo etenen bidezkoa (KDMA-
k burutzen duena) izan daiteke. Azken hau erabiltzen bada, CPUa behin bakarrik
eten egiten da.

b)Portuanitzekomemoriakgarestiakdira.Horregatik,prozesadoreaketaKDMA-
kbusberaerabiltzendutememoriaatzitzeko.Ondorioahauxeda,batenbatekbusakerabiltzenditueneanbesteadeskonektatutaizanbehardu,inpedantziaaltukoegoeran.Haudabigarreneskema:











Jakina, paralelotasuna askoz txikiagoa da orain, zeren eta bata lana egiten ari
denean (memoria irakurri edo idatzi) bestea lanik egin gabe (memoriarekin
behintzat) geratuko da.
3.3.1-DMAkontroladorea.

DMAko kontroladore arrunt batean erregistro batzuk agertzen dira normalean.
Haien bidez zirkuituaren funtzionamendua programatzen da. Hauen artean daude:
-Helbideerregistroa:
erregistrohonetantransferentziarenhurrengodatuarenhelbideadaukagu.
-Luzeraerregistroa:transferitzekogeratzendirendatukopuruagordetzendu.
-Kontrolerregistroa:prozesuakontrolatzekoinformazioagordetzendu,halanola:
-sarrera-alairteera-prozesuaden(rd-wr)
-inkrementatu/dekrementatu:
helbideakkontrolatzeko,hauda,datubatbidalietagerohelbideainkrementatuedodekrementatubeharoteden.
-sinkronizazio-modua:prozesuabukatudelaadieraztekoetenakbaialaez.
-prozesu-mota:ziklo-lapurketa,blokeka,..
-Egoeraerregistroa:prozesuaondobukatuotedenjakiteko.

Honako hau da DMA kontroladorearen eskema:


* DMA bidezko transferentzia baten urratsak.
DMA motako sarrera/irteera bat egiteko hauek dira jarraitu behar diren pausuak:
1. Transferentziaren hasieraketa (CPU-k) (kontroladoreen programazioa).
2. Transferentzia: KPER <-----> M (KDMA-k).
   1. Transferentziaren amaiera (etena / inkesta).

Ikus ditzagun hiru pauso hauek zehaztasun handiagoz.


1.Hasieraketa

Kontroladoreen hasieraketak sarrera/irteera eragiketa normal bat bezala egiten
da, adibidez, inkesta jarraituaren bidez.
• AztertuKDMAetaKPERprestotedauden
• ProgramatuKDMA
- hasierako memoria-posizioa
- datu-kopurua
- kontrol-informazioa (norantza, etenak, transferentzia mota)
• ProgramatuKPER(periferikoarenarabera).Ad.diskoa
- unitatea, aldea, zilindroa, sektorea, pista, sektore-kopurua, ...
- irakurketa/idazketa, ....
2.Transferentzia

• KPERkontroladoreakDMAR
(DMARequest)seinaleaaktibatzenduprestdagoelaadierazteko:
datubatdaukaedodatubathartzekoprestdago.
• KDMAkontroladoreakBRseinaleaaktibatzenduCPU-ribusenkontrolaeskatzeko.
• CPU-kbiszikloaamaitzenduetaBGseinaleaaktibatzendu,busenkontrolaKDMA-
riemanezetabereirteeralerroakinpedantziaaltukoegoeranjarriz.
• KDMAkontroladoreakhelbideakokatzenduhelbidebusean,R/
WseinaleaaktibatzenduetaDMAGseinaleabidaltzendioKPER-
eridatubatirakuredoidatzdezandatubusean.
• Eragiketaamaitzerakoan,KDMA-
kBRseinaleadesaktibatzenduCPUribusenkontrolaemateko.
• Guztihauegitendatransferitubehardendatubakoitzarekin.


Teknikahoniziklo-lapurketa(cyclestealing)deitzenzaio,zerennoizbehinkaDMA-
kziklobatlapurtzendioCPU-ri.Periferikoarenabiadurahandiabaldinbada,orduanKDMA-
kzikloaklapurtzenaridizkiojarraianCPUrietateknikaezdaosoegokia.
Orduanbesteteknikaerabildaiteke:blokekakotransferentzia
(burst).Prozedurahonenbidezdatu-
blokeosobatbidaltzendaetakontroladoreak,datuguztiakpasadireneanbueltatzendiobusenkontrolaprozesadoreari.
3.Amaiera(sinkronizazioa)

Blokearen transferentzia amaitzen denean, CPU eta KDMA sinkronizatu egin behar
dira. Normalean etenen bidez egiten da (baina hau ere programa daiteke).
Zerbitzu-errutinak egoera-erregistroa aztertzen du dena ondo joan ote den
egiaztatzeko. Eten-eskaera sortzen duena bai KDMA bai KPER izan daiteke.

3.3.2.DMA-renerabilerarenadibidebat

Suposa dezagun diskoaren sektore bateko informazioa irakurri nahi dugula
(sektore bat hauxe da: n byte kontsekutiboki metatuta). Diskoaren
kontroladoreak hiru erregistro ditu: egoera-erregistroa, datu-erregistroa eta
agindu-erregistroa.

Ekintza hau burutzeko ondoko urratsak eman behar dira:
(1) Begiratu ea kontroladorea prest dagoen.
(2) Bidali kontrol-erregistrora pistaren zenbakia.
(3) Bidali sektorearen zenbakia.
(4) Bidali irakurketarako ordena.
(5)Bitarteankaraktereakirakurtzekeegin
(6) Begiratu ea karakterea prest dagoen
(7) Irakurri karakterea eta gorde
ambitartean
(8) Irakurri egoera-erregistroa eragiketa ondo burutu ote den aztertzeko.
(9) Baldin errorea badago, hasi berriro.
(10) Prozesatu irakurritako sektorea. Segi.

(a) CPU-k ekintza guztiak burutu behar ditu.

Sinkronizazioa inkestaren bidezkoa baldin bada, orduan (1) eta (6) ekintzak
inkestaren bidez burutzen dira eta programa nagusiak diskoan irakurri nahi
duenean aurreko algoritmoa oso-osorik exekutatu behar du.
Sinkronizazioa etenen bidezkoa baldin bada, orduan karaktere bat bidaltzeko
prest dagoenean kontroladoreak eten-seinalea aktibatuko du. Programa nagusiak
urrats hauek emango ditu:
(1) Itxoin kontroladorea prest egon arte.
(2) Bidali pistaren zenbakia.
(3) Bidali sektorearen zenbakia.
(4) Bidali irakurketarako ordena.
--->*Kalkulatubesteedozeingauza.
--->*ItxoinAMAIAdelakoseinalebategiazkoaizanarte.
(10) Prozesatu irakurritako sektorea.

Programa nagusiak irakurketarako ordena (RD, IN, MOV) bidali ondoren, edozein
momentutan, kontroladoreak karaktere bat prest duenean eten-seinalea aktibatuko
du. CPU-k seinale hau detektatu bezain pronto programa nagusia eteten du
(kalkulu independentea burutzen ari denean ziur aski), etenaren tratamendu-
azpirrutinara jauzten delarik. Azpirrutina honen exekuzioa amaitzen denean
programa nagusia berrexekutatzen da etendako puntutik aurrera. Dena den, datuak
eskaintzen dituen diskoa oso azkarra baldin bada CPU-a beti eten eginda izango
da eta prozesadoreak denbora asko emango du sarrera/irteera prozesuan.

Etenaren tratamendu-azpirrutina hauxe da:
* Irakurri datua (karakterea)
* gorde
*Baldindatugehiagoezorduan
irakurri egoera
baldinerroreaorduan
Itxoin kontroladorea prest egon arte
Bidali pistaren zenbakia
Bidali sektorearen zenbakia
Bidali irakurketarako ordena
bestelaAMAIA:=TRUE
ambaldin
ambaldin
RETURN etenaren zerbitzu-errutinatik.

(b) Lanaren zati bat DMA-ko kontroladore batek burutzen du.

Zirkuitu honek memoria eta kontroladorearen arteko datu-transferentzia burutzen
du. Aurreko kasuan programa nagusiak nahiz etenaren zerbitzu-azpirrutinak
burutzen zuen transferentzia hau.
Datuak periferiko eta memoriaren artean zuzen-zuzenean mugitzen direnez,
memoriarako atzipen zuzena deitu ohi zaio.
CPU-k diskoaren sektore bat irakurri nahi duenean hauxe egin behar du:
• Bidali
KDMA-rihasierakomemoria-
posizioa.Diskotikekarritakodatuakposiziohorretatikaurreragordekodira.
• Bidali
KDMA-riirakurribehardendatu-kopurua(sektorearentamaina).
• Programatu
diskoarenkontroladorea(pista-zenbakia,sektore-zenbakia,...etairakurketa-
ordena).

Programazioaren ondoren, diskoaren kontroladoreak datu bat prest duenean KDMA-
ri esango dio honek irakur dezan, geroxeago dagokion memoria-posizioan kokatuko
duelarik. Ondoren KDMAk memoria-helbidearen kontagailua inkrementatu eta datu-
kopuruaren kontagailua dekrementatuko ditu. Baina oraindik sinkronizazioaren
arazoa ebazteke dago. Hemen ere bi aukera dago:

*_Inkestaren_bidezko_sinkronizazioa:

KDISKO-ari irakurketa-ordena bidali ondoren programa nagusiak KDMA-ren egoera-
erregistroaren inkesta egiten du honek eragiketa bukatu dela (datu guztiak
transferitu dituela) adierazten dion arte.
Garbi dagoenez aukera hau ez da oso logikoa zeren eta CPU-k ez baitu lanik
egiten informazio-transferentziak dirauen bitartean. Beraz, ez da ezer
irabazten lan guztia CPU-k burutzen duenean egiten denarekin konparatuta.
Zerbait irabaztekotan abiaduraren aldetik izango litzateke KDMA-ren abiadura
handiagoa baita CPUrena baino.

*_Etenen_bidezko_sinkronizazioa:

Programa nagusiak kontroladoreak programatzen ditu hasieran informazio-
transferentziari hasiera emateko baina gero transferentziak dirauen bitartean
beste kalkulu batzuk (memoria erabiltzen ez dutenak noski) egin ditzake. KDMA-
k datu guztiak transferitu direla detektatzen duenean CPUri eten-seinalea
bidaltzen dio transferentziaren bukaera adierazteko.
Programa nagusia honelakoxea izango litzateke:
Programatu KDMA.
Programatu KDISKO.
Burutu lan independentea.
Itxoin AMAIA aldagaia egiazkoa izan arte.
Prozesatu irakurritako sektorea.

KDMA-ak CPU eten egingo du sektore osoa irakurri denean. Etena sortzen denean
exekutatu behar den errutina honelakoxea izango da:
Irakurri egoera-erregistroa
Baldinerroreaorduan
Programatu KDMA berriro
Programatu KDISKO berriro
bestelaAMAIA:=egiazko
ambaldin
Honela CPUri S/I-ko lan astunaren zati bat kentzen zaio, orain zirkuitu
elektroniko batek (KDMA) burutzen duelarik. CPU bakarrik enteratzen da sektore
osoa irakurri denean.


