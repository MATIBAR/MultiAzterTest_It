


Gertaera diskretuko
kontrolerako teknikak
1
Sarrera
Gai honetan estudiatuko ditugun metodoek gertaera diskretuak jasotzen eta
sortzen dituzte sistema dinamikoen kontrolean. Teknika hauek arlo askotan
aplika daitezke, besteak beste fabrika konplexu eta handien automatizazioan.
Industri aplikazio ohikoak dira piezak maneiatzeko sistemak, ensanblatze la-
nak, mekanizazio sistemak eta hainbat prozesuren kontrola. Lan hauetan
kontrolatu beharko dira robotak, transfer makinak, fabrikazio malguko zelu-
lak eta beste eratako automatizazioak. Gertaera diskretuko kontrola beste
inguruneetan ere erabiltzen da. Etxe barruan, eta maila arruntagoan, klima-
tizazio eta igogailu kontrolak ditugu.
Kontroleko seinaleak sortzeko logika konbinazionala (proposizionala) eta
sekuentziala erabiltzen dira, kontrol sistemaren sarrera eta sentsoreetatik lor-
tzen diren baldintzak aztertuz. Kontrol logiko programagarria edo kontrol
sekuentziala ere deitzen zaio kontrolaren arlo honi. Eta kontrolatutako sis-
temak gertaera diskretuko sistema dinamikoak izango dira.
Kontrolagailuan jasotzen diren sarrera eta feedback ordenak normalean
seinale bitarrak dira. Prozesuari itzultzen zaizkion kontrol ekintzak ere sei-
nale bitarrak izaten dira. Prozesuaren aldagaiak era jarraian gainbegira dai-
tezke, baina feedback seinaleak gertaera diskreturen bat ematen denean bi-
daltzen dira. Gertaera diskretu bat izango dugu seinale jarraitu bat auke-
1

ratutako erreferentzia baino handiagoa (edo txikiagoa) egiten denean. Ger-
taeren sekuentzia denboran zehar aurreikusi ezin diren sistemaren aldakun-
tza, lan eskari eta hutsegiteen menpean dago, ondorioz gertaera sekuentzia ez
da izango oro har ziklikoa eta errepikatutako sekuentziak ere ez dira izango
periodikoak.
Gertaera diskretuzko kontrolean lan jarraitu bat egiterakoan honen ha-
sieratze eta amaitzea bakarrik kontsideratzen da. Kontrolatutako sistema
zatiak dagokion lana burutuko du kontrolaren agindua jasotzen duenean,
agian kontrol azpisistema baten laguntzaz baina hau independentea izanik
gertaera diskretuzko kontrolarekin.
Irudian dugu gertaera diskretuzko kontrolaren eskema orokorra:
Langilea
edo
konputagailu
gainbegiratzailea
Kontrolagailua
Prozesua
-
Sarrera baldintzak
-
Ekintzak
Estatua
Neurtutako baldintzak
2
Estatu trantsizioko teknikak
Makina sekuentzialak edo automatak konputagailu teoriaren oinarrian dau-
de eta hauen egokitze bat izango dira hemen deskribatuko ditugun estatu
trantsizioko teknikak. Teknika hauek kontrolerako estrategia eraginkorrak
deﬁnitzen dituzte, baita ere egitura sekuentzial ulergarria. Teknika hauen
bidez kontrol hierarkiak gara daitezke, hutsegite diagnostikoak erraz eredu-
tzen dira, baita ere eragiketa konkurrenteak.
Estatu trantsizioko metodologiaren hainbat formulazio erabil ditzakegu.
2

Petri sareak eta estatu trantsizioko diagramak (edo diagrama sekuentzial fun-
tzionalak ) teknika graﬁkoak dira. Beste aukera bat da taula batean erlazioak
adieraztea: estatuak, trantsizioak, baldintzak. Honelako taula baten lerroak
programazio aginduen sekuentzia bezala interpreta ditzakegunez, estatu hiz-
kuntzako taula deitzen zaio teknika honi. Oro har, erraz ulertzen dira tekni-
ka hauek, baina estatu hitzak esanahi ezberdina du sistema linealen kontrol
teoria analitikoan duen esanahitik. Gertaera diskretuko kontrolean estatuak
operazio modu bat adierazten du, adibidez “mugitu ezkerrera” edo “geratu
makina”.
Metodologia honetan erlazio zuzena daukagu programazioa eta dagokion
funtzio sekuentzialaren artean. Diagrama edo taula baten bidez adieraziko
ditugu sistemak har ditzakeen estatuak, baita ere estatu hauetatik irtete-
ko baldintzak. Oraingo estatua uzteko baldintzak betetzen direnean, honi
jarraitzen dion estatuari dagokion operazio modura igarotzen gara ekintza
jakin batzuk abiatuz. Estatu batean gaudelarik, hemendik irtetzeko baldin-
tzak (agindu iturriak eta sentsoreak) bakarrik aztertzen dira, baldintza hauek
betetzen direnean estatu berrirako trantsizioa egingo delarik.
Kontrola diseinatzerakoan “lapitza eta papera” erabiliz osatu dezakegu
diagrama edo taula. Ondoren programazio hizkuntza batera eramango ge-
nuke (esaterako C-ren bertsio batera), denbora errealeko ingurune batean.
Eskuragai daude I/O modulu industrial estandarrak seinaleak neurtu eta
konmutatzeko (AC edo DC tentsioak).
Aukera interesgarriagoa da gertaera diskretuko kontrolerako eraikitzen
diren sistema bereziak erabiltzea. Sistema hauetan softwarea eta hardwarea
egokituta daude estatu trantsizioko formulazioan oinarritutako programazio
hizkuntza bat erabili ahal izateko. Sistema hauei kontrolagailu logiko pro-
gramagarriak (PLC) deitzen zaie, baita ere automata programagarriak, eta
sarrera/irteerako modulu industrialak sisteman integratuta dituzte.
Dena den, kontrolagailu logiko programagarri guztiek ez dute erabiltzen
estatu trantsizioko teknikan oinarritutako programazioa, rele zurubiaren logi-
ka izeneko teknika erabiltzen dute sistema industrial askok. Teknika honetan
graﬁkoki adierazten diren rele zirkuituetan oinarritzen da kontrola, garai ba-
tean erabiltzen ziren rele elektromagnetikoetan oinarritutako kontrolagailuen
oinordekoa izanik teknika hau. Zoritxarrez teknika hau ez da estatu trantsi-
zioko teknikak bezain metodikoa eta ulergarria.
3

3
Gertaera diskretuko kontrol batzuk
Segurtasunezko konmutagailua
Kontsidera dezagun makina arriskutsu baten konmutagailua, esaterako zerra
bat edo prentsa baten konmutagailua. Konmutagailuarekin makina abiarazi
edo geratuko dugu. Segurtasunez jokatzeko bi konmutagailu ipini daitez-
ke, biak sakatuta daudenean bakarrik ibiliko da makina eta horretarako bi
eskuak beharko dira, esku bat konmutagailu bakoitzean. Honela ezinezkoa
izango da makina esku batekin abian jartzea eta beste eskuarekin istripua
izatea. Sistema honen estatuak kontsideratzean pentsa dezakegu nahikoa
izango dela bi estatu deﬁnitzea: makina lanean ariko da sakatuta badaude
bi botoiak eta geldirik bestela. Baina beste arazo bat ere kontuan hartuko
dugu, sakatutako botoia trabatuta gera daitekeela eskua kendu arren, eta or-
duan nahikoa litzateke beste konmutagailua bakarrik sakatzea makina abian
jartzeko esku bat aske izanik. Horregatik hiru estatu deﬁnituko ditugu: ma-
kina lanean, lanerako prest eta geldirik. Makina lanerako prest dagoenean
bi konmutagailuak sakatuz lanean hasiko da. (Ez dago biak batera sakatu
beharrik, denbora tarte bat igaro daiteke.) Makina lanean ari dela gelditu
egingo da baldin konmutagailuren bat askatzen bada (bat edo biak). Egoera
honetatik lanerako prest izatera igaroko da bi konmutagailuak askatuta ba-
daude. (Kontrol estrategia hau ez da akatsik gabea: makina prest dagoelarik
botoi bat sakatu eta trabatuta gera daiteke, esku bat nahikoa izango delarik
bestea sakatzeko. Bestalde, lanean ari denean biak trabatuta geratzen badira
makinak lanean jarraituko du eta eskuak aske izango dira. Edo gerta daiteke
esku bat kendu eta botoia trabatuta geratzea.)
Estatu trantsizioko teknika erabiltzeko erabat garbi deﬁnitu behar ditu-
gu estatuak, estatuetatik irtetzeko baldintzak eta estatuetara sartzean egingo
diren ekintzak. Baldintzak aldagai bitarrak izango dira, denboran zehar 1/0
balioak hartuko dituztenak, eta algebra boolearraren bidez adieraziko du-
gu estatu batetik noiz irten esango digun funtzio logikoa. Bestalde, ekintza
batzuk binaka emango dira, ekintza bat eta bere aurkakoa ditugularik, adibi-
dez makinari argindarra ematea eta kentzea. Hona hemen deskribatu dugun
kontrolari dagozkion estatu, baldintza eta ekintzak:
4

• Estatuak
S1 - Makina geldirik
S2 - Makina lanerako prest
S3 - Makina lanean
• Baldintzak
C1 - Makinaren 1 botoia sakatuta (agian trabatuta)
C2 - Makinaren 2 botoia sakatuta (agian trabatuta)
• Ekintzak
A1 - Makinari argindarra eman lanerako ( A1 argindarra kendu)
Gertaera diskretuko kontrola guztiz deﬁnitu dugularik:
≻ Irudikatu kontrol honi dagokion Petri sarea edo estatu trantsi-
zioko diagrama. Irudikatu baita ere estatu hizkuntzako taula.
Pintza baten kontrola
Kontsidera dezagun robot baten pintza. Pintza honen lana izango da tamaina
ezberdinetako objektuak eutsi eta honela mantentzea denbora batean. Siste-
ma honen kontrolean bi maila izango ditugu, alde batetik gertaera diskretuko
kontrola, pintza ixteko, irekitzeko, mantentzeko, eta bestetik pintzaren mu-
gimendua kontrolatu behar da abiadura jakin batean mugi dadin, objektua
eutsita duenean presio maila mantentzeko.
Pintzak hiru sentsore mota izango ditu. Lehenik etengailu batek pin-
tza guztiz zabalik dagoen seinalatuko du. Bestalde, sistema optiko baten
bidez jakin dezakegu pintzen artean objekturik dagoen eutsi aurretik. Azke-
nik pintza batean galga estensiometrikoa ipiniz neurtu dezakegu objektu bat
eutsitakoan honi egiten zaion indarra.
Pintzaren kontrolean bi mailatako aginduak bereiziko ditugu. Goi mai-
lakoak izango dira gertaera diskretuei buruzko aginduak, pintza irekitzea,
pintza ixtea, objektua eustea. Maila hau estatu trantsizioko teknikak era-
biliz aztertuko dugu. Behe mailan daukagu pintzaren motorraren kontrola,
5

kontrolagailu digitalari D/A bihurgailua erantsiz burutuko duguna. Lehen-
dabizi behe mailako kontrola deskribatuko dugu laburki eta ondoren gertaera
diskretuko kontrola deﬁnituko dugu.
Pintzaren motorra kontrolatzeko bi egoera ezberdindu behar ditugu, mo-
torra biraka ari denean pintza ireki edo ixteko, eta motorra geldirik da-
goenean baina indarra eginaz objektuari eusteko. Pintzaren motorra bira-
ka dabilenean begizta irekiko kontrola erabiliko genuke, sistemaren sarrera
izanik tentsioa eta irteera pintzaren abiadura; honela 0 motako sistema dau-
kagu, abiadura eta tentsioa proportzionalak (zati iragankorraren ondoren),
eta abiadura tentsioaren bidez kontrolatuko dugu, objektua hauskorra den
ala ez begiratuz. Pintzak objektuari heltzen dionean motorra geldirik dago
eta pintzak egiten duen indarra motorraren induzitutik doan korrontearekin
proportzionala da. Sarreratzat tentsioa eta irteeratzat korrontea hartuz 0
motako sistema dugu. Begizta itxiko PI (edo PID) kontrola erabiliz 1 mota-
ko sistema dugu, ondorioz erreferentzia korrontea jarraitu dezake sistemak,
hau da, pintzek egin behar duten indarrerako erreferentzia.
Estatu trantsizioko eredua deﬁnitzerakoan, motorraren operazio moduak
hauek izango dira: “pintza zabalduta itxaron”, “pintza itxi”, “objektua eu-
tsita mantendu”, “pintza ireki” eta “geratu”. Azken estatua sartzen dugu
kontrolagailuak geratzea agintzen duenerako, adibidez larrialdi batean, pin-
tza guztiz zabalduta ez dagoela. Hemen dugu estatu, baldintza eta ekintzen
zerrenda, gertaera diskretuko mailari dagokion kontrolerako:
• Estatuak
S1 - Pintza zabalduta itxaron
S2 - Pintza itxi
S3 - Objektua eutsita mantendu
S4 - Pintza ireki
S5 - Geratu
6

• Baldintzak
C1 - Tresna abiarazteko seinalea
C2 - Pintza ixteko seinalea
C3 - Pintza irekitzeko seinalea (C2=C3=1 ezinezkoa)
C4 - Pintza artean objektua
C5 - Objektua eutsita
C6 - Pintza guztiz zabalik
• Ekintzak
A1 - Motorrari argindarra eman pintza irekitzeko ( A1 kendu)
A2 - Motorrari argindarra eman pintza ixteko ( A2 kendu)
A3 - Motorra begizta itxian kontrolatu objektua eusteko
A4 - Objektua eutsita dagoenaren seinalea bidali ( A4 ez bidali)
A5 - Pintza guztiz zabalik dagoenaren seinalea bidali ( A5 ez bidali)
≻ Irudikatu kontrol honi dagokion Petri sarea edo estatu trantsi-
zioko diagrama.
Hutsegite diagnostikoa duen kontrol bat
Estatu trantsizioko teknikak erabiltzean erraza da hutsegite diagnostikoa
programazioan sartzea, hutsegite estatuak deﬁnituz. Adibide gisa har de-
zagun daratulu makina baten operazioa, hutsegiteak izango direlarik makina
gainberotzea edo gehiegizko denbora batean jardutea. Operazio normalean,
abiatzeko seinalaren ondoren daratulua aurrera mugitzen da pieza zulatuz,
itxoiten du une batez limiteko posizioan eta gero atzera egiten du. Hala eta
guztiz, motorraren gainberotzea neurtzen bada aurrerako edo atzerako mugi-
mendua amaitu aurretik, hutsegite estatu batera joaten da makina. Antzera,
daratuluak aurrera egiterakoan denbora muga bat gainditzen bada limiteko
posiziora iritxi aurretik, beste hutsegite estatu batera doa makina. Hutsegite
estatuan sartzean daratulua gelditzen da, alarma jo eta dagokion argia pizten
da. Hutsegite estatutik irtetzeko eskuz hasieratu behar da makina, orduan
daratuluak atzera egingo du.
7

• Estatuak
S1 - Itxaroten lanerako prest
S2 - Daratulua aurrera mugitu
S3 - Limiteko posizioan itxaron
S4 - Daratulua atzera mugitu
S5 - Gainberotze hutsegitea
S6 - Gehiegizko denboragatik hutsegitea
• Baldintzak
C1 - Abiarazteko seinalea
C2 - Aurrerako mugimendua osatu du
C3 - Atzerako mugimendua osatu du
C4 - Aurrerako mugimendurako denbora limitea gainditu da
C5 - Limiteko posizioan egon beharreko denbora bete da
C6 - Gainberotzea
C7 - Eskuzko reset seinalea
• Ekintzak
A1 - Daratuluaren errotazio mugimendua abiarazi ( A1 gelditu)
A2 - Aurrerako mugimendua abiarazi ( A2 gelditu)
A3 - Atzerako mugimendua abiarazi ( A3 gelditu)
A4 - Aurrerako mugimendurako denbora kontatzen hasi
A5 - Limiteko posizioan egon beharreko denbora kontatzen hasi
A6 - Alarma jo eta gainberotze argia piztu ( A6 itzali)
A7 - Alarma jo eta gehiegizko denboraren argia piztu ( A7 itzali)
≻ Irudikatu kontrol honi dagokion Petri sarea edo estatu trantsi-
zioko diagrama.
8

4
Kontrol konkurrentea
Kontrol konkurrenteaz ari gara, paraleloki ari diren bi operazio edo gehiago-
ren kontrola egin behar denean. Operazio bakoitzak autonomoki jarraitzen
du denboran zehar, baina ez mugarik gabe, baldintza batzuk betetzen dire-
nean operazio ezberdinak sinkronizatu egin beharko dira.
Petri sarearekin deﬁni dezakegu kontrol konkurrentea. Une bakoitzean
estatu bakarra egongo da aktibatuta, edo bestela, bi operazio (edo gehia-
go) ari badira paraleloki, bi estatu (edo gehiago) egongo dira aktibatuta.
Operazio bakuneko egoeratik operazio konkurrenteko egoerarako trantsizioa
honela adieraziko dugu Petri sarean. Operazio bakuneko estatuan gaudela-
rik eta honen irteerako baldintza betetzen delarik baldintza honi jarraitzen
dion bidea bitan zatitzen da, bide bakoitzak eramaten duelarik operazio kon-
kurrente bakoitzaren hasierako estatura. Operazio konkurrente bakoitzak
zeharkatzen dituen estatuen bidea deﬁnitzen du Petri sareak. Operazio kon-
kurrente hauek sinkronizatu beharko dira punturen batean; honela, operazio
konkurrente bakoitzak azken estatua du eta hemen itxoiten du beste opera-
zio konkurrenteak azken estatura heldu arte eta orduan, beste baldintzarik
gabe, operazio bakunera igarotzen da sistema estatu zehatz batetik jarrai-
tuz. Marra bikoitz baten bidez elkartzen dira aipatutako azken estatuetatik
datozen bideak.
Terminologia zehaztuz, estatu trantsizioko diagrama batean edozein une-
tan estatu bat dago aktibatuta, ez gehiago. Beraz operazio konkurrenteak di-
tugunean Petri sarea ez litzateke zehazki estatu trantsizioko diagrama. Ope-
razio konkurrenteei dagozkien estatuak Petri sarean, sistema osoaren estatu
partzialak lirateke, bakoitzak dagokion operazio konkurrentearen egoera des-
kribatzen duelarik. Ondorioz operazio batzuk paraleloki ari direnean estatu
bat baino gehiago izango dugu aktibatuta Petri sarean.
Mahai biratzailea
Operazio konkurrenteko sistema bat mahai biratzaile industriala da eta ho-
nen kontrolerako Petri sarea marraztuko dugu. Mahaiaren mutur batean
pieza ipintzen da eta mekanizatze lan batzuk egiten zaizkio bata bestearen
ondoren. Gero mahaia 180◦ biratzen da eta piezari zuzenketa eta leunketa
lanak egiten zaizkio, azkenik pieza mahaitik kenduz. Mahaia biratzen den
9

bakoitzean pieza berria ipintzen da mekanizatzeko.
Eredua sinpleagoa izateko eman dezagun hasieran pieza bat mekanizatuta
dagoela mahaiaren mutur batean eta bestean berria ipiniko dela. Lan ziklo
bakoitza hasi aurretik itxaron egingo dugu abiarazteko seinalea desaktibatu-
ta dagoen bitartean. Bestalde, piezaren gainean egin behar den lana amaitu
dela jakingo dugu dagokion baldintza betetzean. Hauek dira sistemaren es-
tatu, baldintza eta ekintzen zerrenda.
• Estatuak
S1 - Itxaron
S2 - Pieza ipini
S3 - 1. mekanizatze lana
S4 - 2. mekanizatze lana
S5 - 3. mekanizatze lana
S6 - Mekanizatzea amaituta
S7 - 1. zuzenketa lana
S8 - 2. zuzenketa lana
S9 - Leunketa
S10 - Zuzenketa eta leunketa amaituta
S11 - Kendu pieza
S12 - Biratu mahaia
• Baldintzak
C1 - Abiarazteko seinalea
C2 - Pieza berria detektatu
C3 - 1. mekanizatze lana osatuta
C4 - 2. mekanizatze lana osatuta
C5 - 3. mekanizatze lana osatuta
C6 - 1. zuzenketa lana osatuta
C7 - 2. zuzenketa lana osatuta
C8 - Leunketa lana osatuta
10

C9 - Amaitutako pieza kendu dela detektatu
C10 - Mahaiaren biratzea osatuta
• Ekintzak
A1 - Pieza berria ipini mahaian
A2 - 1. mekanizatze lana egin
A3 - 2. mekanizatze lana egin
A4 - 3. mekanizatze lana egin
A5 - 1. zuzenketa lana egin
A6 - 2. zuzenketa lana egin
A7 - Leunketa lana egin
A8 - Pieza kendu mahaitik
A9 - Mahaia biratu
≻ Irudikatu kontrol honi dagokion Petri sarea.
5
Kontrol hierarkikoa
Sistema batean elementu ezberdinak integratzen ditugunean kontrol hierarki-
koa daukagu. Robot eta makina automatizatuak konputagailu lokalekin kon-
trolatzen dira, kontrolagailu dedikatu gisara diseinatutako konputagailuekin.
Kontrol gainbegiratzailea arduratzen bada honelako osagaiak integratzeaz,
egitura hierarkikoa deﬁnitzen da, lehen mailan kontrol estrategia nagusia
osagaiek egin beharreko operazioen gainean, eta bigarren mailan osagai ba-
koitzaren operazioa garatzeko kontrola. Sistema deskribatzeko eta kontrola
deﬁnitzeko gertaera diskretuak kontsideratzen baditugu, Petri sarearen bidez
adieraz dezakegu estrategia osoa.
Ondorengo adibideko Petri sarean konkurrentzia malgutasun osoz era-
biliko dugu. Une batean paraleloki ari diren operazioak ezberdinak izango
dira egoera batetik bestera. Petri sareak bete behar duen baldintza baka-
rra da estatu bat aktibatuta dagoenean ezin dela aurreko estatua aktibatuta
egonik trantsizio baldintza bete (hau da, aktibatuta dagoen estatua berriz
aktibatu behar izatea). Horrezaz gain, trantsizio baldintza bati jarraitzen
11

dion bidea zatitu daiteke bide ezberdinetan, honela trantsizioaren ondoren
bi estatu edo gehiago aktibatuz. Marra bikoitzarekin bilduko ditugu operazio
konkurrenteen azken estatuak operaziok sinkronizatzeko, lehen esan bezala.
Estatu berezi bat izango dugu, hasierakoa: kontrol sekuentziaren hasieran
hau aktibatuta izango dugu eta besteak desaktibatuta.
Bi roboteko sistema
Adibide honetan kontrol hierarkiko eta konkurrentea gauzatuko dugu. Bi ro-
bot ditugu, Wilbur eta Orville, errail gainean dabiltzanak. Wilburrek pieza
ekartzen du lan estaziora eta beste makina batzuk piezaren gaineko lanak
egindakoan Orvillek eramaten du. Wilburrek pieza uzten duenean lan esta-
zioan ez du itxoiten lanak amaitu arte beste piezaren bila joateko. Antzera
Orvillek pieza kentzen duenean hurrengo piezarekin hasten dira jarraian lan
estazioan, pieza berria badago.
• Estatuak
S1 - Robot zelula itxoiten
S2 - Wilbur itxoiten biltegian piezarik egon arte. (Hemendik irtetzean
gelditzeko seinalea ere begiratu.)
S3 - Wilbur piezaren bila doa
S4 - Wilbur pieza hartzen
S5 - Wilbur piezarekin dator
S6 - Wilbur itxoiten lan estazioa hustu arte
S7 - Wilbur pieza lan estazioan ipintzen
S8 - Lan estazioan piezari 1. lana egiten
S9 - Lan estazioan piezari 2. lana egiten
S10 - Pieza amaituta lan estazioan. (Sinkronizatu Orvillekin.)
S11 - Orville itxoiten lan estazioan. (Sinkronizatu piezaren amaiera-
rekin.)
S12 - Orville pieza hartzen lan estaziotik
S13 - Orville pieza eramaten
12

S14 - Orville pieza jomugan uzten
S15 - Orville itzultzen
• Baldintzak
C1 - Abiarazteko seinalea, C1 gelditzeko seinalea
C2 - Biltegian piezak daude
C3 - Wilbur iritxi da biltegira
C4 - Wilburrek pieza hartu du
C5 - Wilbur iritxi da lan estaziora
C6 - Lan estazioa hutsik
C7 - Wilburrek ipini du pieza lan estazioan
C8 - 1. lana amaituta
C9 - 2. lana amaituta
C10 - Orvillek pieza hartu du lan estaziotik
C11 - Orville iritxi da jomugara
C12 - Orvillek utzi du pieza jomugan
C13 - Orville itzuli da lan estaziora
• Ekintzak
A1 - Wilbur biltegira joan
A2 - Wilburrek pieza hartu
A3 - Wilbur lan estaziora itzuli
A4 - Wilburrek pieza lan estazioan ipini
A5 - 1. lana egin
A6 - 2. lana egin
A7 - Orvillek pieza hartu
A8 - Orville jomugara joan
A9 - Orvillek pieza utzi
A10 - Orville itzuli
13

≻ Irudikatu kontrol honi dagokion Petri sarea. Zenbat estatu
izango ditugu aktibatuta egoera ezberdinen arabera? Zein operazio
ari daitezke konkurrenteki: Wilbur, Orville, lan estazioa? Lanean
jardun ondoren gelditzeko seinalea bidaltzen bazaio robot zelulari
zer egoeratan geldituko da, zein estatutan?
6
Rele zurubiak
Teknologia elektroniko digitala erabili aurretik fabriketako automatizazioe-
tan rele zirkuituak erabiltzen ziren funtzio logiko sekuentzialak gauzatzeko.
Zirkuitu hauek zurubiaren antza zuten, maila bakoitzeko zirkuituak rele bat
kontrolatzen zuelarik. Automatizazioaren konplexutasunaren arabera siste-
ma oso handiak behar ziren eta kontrolaren programazioan zerbait aldatzeko
kableatua aldatu behar zen. Gaur egun teknologia digitala erabiltzen da eta
kontrol programa konputagailu baten memorian idazten da. Hala eta guzti,
rele zurubiarekin jarraitzen da kontrolagailu askotan, ez ﬁsikoki eraikiz re-
le zirkuituak, baizik programaziorako metodo gisa erabiliz, itxura hori duen
pantailan idazten delarik kontrol programa.
Rele elektromekanikoa etengailu bat da, bobina baten bidez itxi eta ire-
kitzen dena, irudian ikusten dugunez.
Relea
s
s
l
l
l
l
l
On/Oﬀ
s
s


k
Sinboloa
s
s
Bobinari tentsiorik aplikatzen ez zaionean kontaktua irekita dago. Bobina-
ri tentsioa aplikatzen zaionean honek eremu magnetiko bat sortzen du eta
kontaktua itxi egiten da indar magnetikoaren eraginez. Releak erabiltzen
dira konmutagailuak tentsio edo korronte handiak jasan behar baditu, edo
baldintza gogorretan egin behar badu lan. Oro har, releak erabiltzen dira
etengailua sistema elektromekaniko baten bidez gauzatzeko.
14

Rele zurubiko zirkuituetan kontaktuak izango ditugu. Kontaktu bat ireki
edo itxi egingo da dagokion etengailuaren bidez. Bi eratako kontaktuak ditu-
gu, normalean irekita daudenak (NO) eta normalean itxita daudenak (NC),
irudiaren arabera adierazten dugu bakoitza.
NO kontaktua
NC kontaktua
Zurubian etengailu bakoitza aldagai bitar batekin identiﬁkatuko dugu. Kon-
taktua NO bada, irekita dago aldagaiak 0 balioa duenean, eta itxita 1 balioa
duenean. Aldiz, kontaktua NC denean, itxita dago aldagaia 0 denean eta
irekita 1 denean.
Goian deskribatu dugun relearen kontaktua NO zen baina rele batek NC
kontaktua ere gauzatu dezake.
Rele zurubi bat aztertuko dugu, gai honen 3. atalean kontsideratu genuen
segurtasunezko konmutagailua kontrolatzeko erabil daitekeena.
C1
C2
D
A
D
D
C1
C2
A
A
Zurubiaren irudian bi kable paralelo ditugu, bertikalak, eta hauen artean
tentsio bat ezarri dela kontsideratu behar dugu. Bi hari hauen artean maila
15

ezberdinak ditugu, gure kasuan bi. Maila bakoitzaren eskuinean relea dau-
kagu, dagokion etengailua desaktibatu egingo da mailaren zirkuitua irekita
dagoenean eta aktibatu zirkuitua itxita dagoenean. Esan bezala, etengailu
bakoitza aldagai bitar batekin identiﬁkatuko dugu, gure adibidean A eta D
releak ditugu. Etengailuak kontaktu bat edo gehiago izango ditu elkartu-
ta eta etengailuaren egoeraren arabera (0/1) kontaktu bakoitza irekita edo
itxita izango dugu NO edo NC kontaktua izateari jarraituz. Zurubiaren mai-
letan releei dagozkien kontaktuak agertzen zaizkigu, baina badira releenak
ez diren beste kontaktu batzuk, adibidean C1 eta C2 etengailuenak. Re-
leen egoera zurubiko zirkuituek determinatzen dutelarik, beste etengailuen
egoera kanpotik ﬁnkatzen da, hauek kontrolaren sarrerak dira, kontrolatu
beharreko sistemaren egoera deskribatzeko aldagaiak eta baita ere sistemari
ematen zaizkion aginduetarako aldagaiak. Azkenik, rele bakoitzak ekintza
batzuk ditu elkartuta, zurubiaren irudian adierazi ez ditugunak, eta relea
aktibatzen denean ekintza hauek burutzen dira honela sistema kontrolatuz.
Segurtasunezko konmutagailuaren rele zurubian, A relea aktibatzean makina
abiarazten da eta relea desaktibatzean makina gelditzen da.
Hasieran releak desaktibatuta daude, eta jarraitzen duen sekuentzian re-
leak aktibatzen eta desaktibatzen joango dira kontaktuen arabera. Zurubia-
ren simulazioan mailak banaka aztertzen dira, era ziklikoan, eta mailaren
relearen egoera aldatzen bada, etengailu honen balioa aldatzen da zurubian
maila aztertu ondoren.
≻ Aztertu segurtasunezko konmutagailurako rele zurubiaren bila-
kaera denboran zehar, une bakoitzean zein rele dauden aktibatuta
zehaztuz.
Rele zurubian maila bateko relearen egoera kontaktuen egoeraren fun-
tzio logikoa da eta hau garbi ikusten da zurubian. Baina zurubiaren estatua
aztertzea ez da hain erraza, rele guztien egoerak determinatzen baitu esta-
tua. Gainera zurubiaren mailek batak bestearekin elkarreragiten dute. Hau
honela izanik, zaila egiten da estatu sekuentziaren bilakaera aztertzea, be-
reziki kontrol estrategiaren konplexutasuna handitzen denean. Beraz rele
zurubiaren teknika ez da egokiena gertaera diskretuko kontrolerako, meto-
do ulergarriagoa eta naturalagoa da estatu trantsizioko tekinika, erosoagoa
da honekin lan egitea kontrol konplexuetan, zer esanik ez konkurrentzia eta
hierarkizazioa ditugunean.
16

7
Kontrolagailuak eta fabrika automatizazio-
ak
Kontrolagailu logiko programagarria (PLC) edo automata programagarria
erabiltzen da fabrika automatizatuetan gertaera diskretuko kontrola buru-
tzeko, hainbat makina eta prozesuren jarduera automatizatuz. Prozesu ja-
rraituetarako moduluekin ere hornitzen dira. PLCa ingurune gogorretan lan
egiteko gai izan behar du, kutsadura elektromagnetiko edo kimikoa jasate-
ko etab. Kontrolagailu programagarria tresna elektroniko digitala da, ma-
kinak eta prozesuak kontrolatzeko diseinatua, gauzatzen dituelarik funtzio
logikoak, sekuentzia kontrola, denbora kontrola, kontaketa, eragiketa arit-
metikoak, datuen manipulatzea, etab. Kontrolagailu programagarriaren es-
kema daukagu 1. irudian, hemen bereizten ditugularik modulu prozesatzailea,
sarrera eta irteera moduluak, programazio unitatea (PC bat izan daiteke).
Kontrolagailuak bi argindar hornidura behar ditu, bata bere prozesagailu eta
zirkuituentzat, eta bestea sarrera eta irteerekin konektatutako gailuek behar
dutenerako. Modulu prozesatzailean mikroprozesagailua eta RAM memoria
ditugu. Memoriak programa gordetzen du eta baita ere sarrera eta irteeren
imajinak.
Prozesagailuaren operazioa ziklikoa da, ohiko konputagailu pertsonaleta-
tik ezberdina. Urrats hauek errepikatzen dira behin eta berriro:
1. Sistema kudeatzeko eragiketak: sistemaren bitak eta informazioak tra-
tatzen dira. Programazio unitatetik egindako eskariak eta deiak trata-
tzen dira eta mezuak bidaltzen zaizkio.
2. Sarrera irakurketa: sarrera moduluen erregistroak irakurtzen dira, ez
sarrerak zuzenean hau moduluak egiten baitu, eta balio hauek me-
morian idazten ditu sarreren imajinak bezala. Imajina hauek ez dira
eguneratuko hurrengo zikloa hasi arte.
3. Programaren exekuzioa: ziklo bakoitzean programa osoa exekutatzen
da, lehenengo agindutik hasita. Erregistroen balio berriak kalkulatzen
dira, horien artean irteeren imajinak. Azken aginduarekin amaitzen da
urratsa.
4. Irteera idazketa: irteera moduluen erregistroetan idazten dira irteeren
imajinak. Modulu hauek arduratuko dira irteera tentsioak, korronteak
17

edo releak aktibatzeaz.
Zikloaren iraupena periodo ﬁnkoa izan daiteke edo bestela indeterminatua,
ziklo bat amaitzean bestea hasiz berehala. Zikloaren exekuzioa ahalik eta
lasterrena izan behar da, automatizazioak denbora errealen egiten baitu lana
eta sistemaren aldakuntzak jarraitu behar dira. Adibidez ehun milisegundoko
iraupena handiegia izan daiteke.
Kontrolagailuak bi operazio modu ditu. Lehenengoan aipatutako zikloa
jarraituz aritzen da etengabe eta programa ezin daiteke aldatu. Bigarrengoan
zikloa geratzen da eta erabiltzaileak programa aldatu dezake programazio
unitatetik.
Sarrera eta irteera moduluen bidez kontrolagailuak automatizatutako sis-
tematik informazioa jasotzen du, aginduak ere bai, eta sistemari eragiten
dio. Sarrera moduluek sarrera digitalak jasotzen dituzte, sakatzeko botoiak,
muga etengailuak, presio etengailuak, etab. Irteera moduluekin hainbat tres-
nari eragin diezaiokegu, lanparak, motorrak, releak, etab. Sarrera eta irteera
analogikoak, prozesu aldagai jarraituentzako dira, informazioa jaso eta pro-
zesua kontrolatzeko. PID moduluak sistema lineala kontrolatzen du, irteera
jaso eta sarrera emanaz. Beste kontrolagailu programagarri batzuekin edo
konputagailu gainbegiratzaile batekin komunikatzeko aukera eskeintzen digu
komunikazio moduluak.
Lehenengo kontrolagailuek prozesagailu bakarra zuten, baina hemen bo-
tilalepoa sor daiteke prozesu asko batera kontrolatzean. Gaur egun sistema
multiprozesatzaileak erabiltzen dira, non prozesagailu zentralarekin batera
beste prozesagailu espezializatuak izango ditugun, bakoitza dagokion proze-
suaz arduratuz, prozesagailu zentrala besteekin komunikatuko da eta para-
metroak bidaliko dizkie. Honela, sarrera eta irteera modulu batzuek beren
prozesagailua izango dute dagokien prozesua kontrolatzeko. Adibidez kon-
trolagailuak ardatz bat kontrolatu behar badu PID baten bidez, prozesagailu
zentralak determinatuko ditu PID parametroak, ardatzaren abiadura etab,
eta ondoren ardatzaren moduluak exekutatuko du kontrol algoritmoa.
Programazio unitatearen bidez idatziko ditugu programak kontrolagailu-
an, eta baita ere kontrola abiatu ondoren sarrera eta irteeren egoera moni-
toretuko dugu eta hainbat erregistroren balioak ikusi. Programazio unitaea
mota ezberdinetakoa izan daiteke: esku programatzailea, kontrolagailurako
terminal berezia, konputagailu pertsonala. Terminal berezia PCaren antze-
18

koa da baina zehazki kontrolagailua programatzeko diseinatuta dago. PCa
erabiltzen denean software egokia behar du.
Kontrolagailuaren programazio unitateak hizkuntza espeziﬁko bat erabi-
liko du, mailaren arabera sailkatu dezakeguna. Lehenik agindu zerrendako
hizkuntzaz idatz dezakegu, non programako aginduak maila baxukoak izaten
diren. Zerbait maila altuagoa dute rele zurubian oinarritutako hizkuntzak
eta testu egituratuko hizkuntzak. Maila altuan genituzke Petri sareetan oina-
rritzen diren hizkuntzak, GRAFCET izenekoa bezala.
Fabrika bat automatizatzerakoan, behar adina kontrolagailu programa-
garri prozesuetatik hurbil kokatzeko joera dago, eta ez PLC handi batez
automatizazio osoa kontrolatu, milaka sarrera eta irteera beharko lituzkeen
kontrolagailuaz. Beraz prozesu bakoitzaren ondoan dagokion PLCa ezartzen
da eta kontrolagailu guztiak konputagailu gainbegiratzaile batekin koordi-
na ditzakegu sare lokaletik komunikatuz PLC guztiekin. Honela kontrolaren
programazioa ere hierarkikoki antolatuko dugu, konputagailu nagusia goi-
mailako kontrol estrategiaz arduratuko da eta kontrolagailu bakoitzak dago-
kion operazio zehatza kontrolatuko du. Hardware aldetik ere hobe da kontrol
banandua eta ez kontrolagailu erraldoi bakarra. Fabrikazio zelula deskriba-
tu bezala antolatzen dugunean, konputagailuz integratutako fabrikazioaz ari
gara (CIM).
Adibidea 2. irudian dugu. CIM zelula honetan konputagailu nagusia du-
gu, estazio osoa kontrolatuko duena, hiru robot bakoitza bere PLCarekin, bi
makina CNC kontroldunak (zenbakizko kontrola), uhal garraiatzailea, bilte-
gia. Konputagailu nagusia zelulako osagai bakoitzaren kontrol sistemarekin
komunikatuko da.
8
Kontrolagailuaren programazioa
PLCaren programazioa aztertuko dugu, maila baxuko hizkuntzatik abiatuz.
Kontrolagailuaren programek objektuak bezala ezagutzen diren aldagaiekin
egiten dute lan. Objektu hauek, betetzen duten funtzioaren arabera sailka-
tzen dira eta dagokion sinboloarekin adierazi:
• Memoria aldeko objektuak: %M
• Sarreren aldeko objektuak: %I
19

• Irteeren aldeko objektuak: %Q
• Konstanteen aldeko objektuak: %K
• Sistema aldeko objektuak: %S
• Komunikazio objektuak: %N
Objektuaren neurriaren arabera jarraian idazten da X (ken daiteke), B, W,
D (edo F ﬂoat), hau da, bit bat, byte bat, bi eta lau byte hurrenez hurren.
Azkenik objektuaren zenbakia ipintzen da. Honela idatziko dugu adibidez:
%MD 52, %I 1.2 (1. moduluako 2. bidea), %KW 56.
Adibide baten bidez ikusiko dugu nola programatzen den maila baxuko
hizkuntza batean. Zehazki Siemens kontrolgailuentzako STEP-5 hizkuntzan
egindako programa aztertuko dugu. Aldagaien idazkera zerbait aldatzen da
azaldu dugunetik.
Orga batek A eta B puntuen artean ibili behar du. A puntuan geldirik
dagoela, etengailu baten bidez agindua ematen zaionean B puntura abiatzen
da, eta honera iristean A puntura itzultzen da. A puntura iristean hor ge-
ratzen da berriz agindua jaso arte. A eta B puntuetan sentsoreak daude
orga iritsi dela jakiteko kontrolagailuak, honela orgaren higidura kontrola
dezan. Kontrol programa 3. irudian dugu. Programa osoa exekutatzen da
kontrolagailuaren ziklo bakoitzean, lehenengo lerrotik azkeneraino. S agindu-
ak dagokion bita 1 baliora aldatzen du eta R aginduak 0 baliora. U aginduak
bita egiazkoa den begiratzen du, egiazkoa bada hurrengo agindura iragaten
da exekuzioa, baina faltsua bada jarraian egon litezkeen U aginduak eta
ondorengo S eta R aginduak ez dira exekutatzen eta hauen ondoren datorren
U aginduarekin jarraitzen da. Hasieran bit guztiak 0 balioa izango dute
normalean eta programari hasieratzeko aginduak ere erantsi behar dizkiogu.
Programan ikusten dugunez estatuen arteko trantsizio bakoitzari honela-
ko agindu blokea dagokio:
U aurreko estatua
U jauzi baldintza
S estatu berria
R aurreko estatua
Testu egituratuko hizkuntzan honela idatziko genuke:
20

IF aurreko estatua AND jauzi baldintza THEN
SET estatu berria
RESET aurreko estatua
ENDIF
Rele zurubia edo kontaktu hizkuntzan ere programa dezakegu bloke hau.
Programan beste bloke batzuk ere baditugu ekintzak aktibatu eta desakti-
batzeko:
U estatua
R ekintza1
S ekintza2
Kontrolagailua programatzeko egokiagoa da maila altuko hikuntza era-
biltzea, bereziki Petri sarean oinarritzen den hizkuntza bat. Grafcet dugu
Petri sareak erabiltzen dituen hizkuntza estandarra. Grafcet tresnarekin es-
tatu eta trantsizioen diagrama graﬁkoki adierazten da, 4. irudian ikusten
dugunez, eta graﬁko honetan oinarrituz programatzen dira jauzi baldintzak
eta egin beharreko ekintzak. Orgaren adibiderako programa 5. irudian dugu,
aldagaiak erabiliz eta baita ere sinboloen bidez. Ikusten dugunez, agindu
zerrenda hutsarekin baino errazagoa da Grafcet tresnaren laguntzaz progra-
matzea.
Kontrolagailuak 6. irudiaren arabera egiten du lan ziklikoki. Prozesu
nagusia edo maisu prozesua programatu behar du erabiltzaileak. Grafcet
tresnarekin Chart modulu sekuentziala bakarrik programatzen da eta beste
biak programatzeko, Prl aurreko modulua eta Post atzeko modulua, agindu
zerrenda erabili behar da, testu egituratuko hizkuntza edo kontaktuen hiz-
kuntza. Prl moduluan sistemaren bitekin eragiketak egin daitezke, larrialdiak
detektatu eta beste eragiketa batzuk. Post moduluan kontatzaileak egune-
ratu daitezke etab.
Kontrolerako Petri sarea Grafcet-en bidez gauzatzen badugu, ekintzak
hiru eratakoak dira. Ekintza bakoitzerako bere programa kodea idatziko
dugu eta kontrolagailuaren ziklo bakoitzean kode hau exekutatuko da ala ez
ekintza motaren arabera.
• Aktibazio ekintza: dagokion estatua aktibatzen den zikloan bakarrik
exekutatzen da kodea.
21

• Ekintza jarraitua: estatua aktibatuta dagoen bitartean ziklo bakoitzean
exekutatzen da kode osoa.
• Desaktibazio ekintza: estatua desaktibatzen den zikloan bakarrik exe-
kutatzen da kodea.
Honen adibidea 7. irudian dugu, non aktibazio ekintza (P1) eta ekintza ja-
rraitua (N1) ditugun, eta hauen programa kodeak. Kontrolagailuaren zi-
klo bakoitzean maisu prozesuko Chart zatia exekutatzen denean lehendabizi
trantsiziorik egin behar den aztertzen da, aktibatzen dira estatu berriak eta
desaktibatzen zaharrak. Ondoren esandakoa jarraituz ekintzen kodeak exe-
kutatzen dira.
Amaitzeko Gemma gida aipatuko dugu laburki. Fabrikazio zelula bat
automatizatzerakoan ez da nahikoa lan estazioaren jarduera normala kontsi-
deratzea, baita ere kontrolatu behar dira bestelako egoerak: makinaren batek
huts egitea, larrialdi gelditzeak, makinak berriz abiarazteko prozesua, testak
egitea, eskuzko kontrola. Gemma gidak egitura estandarra ematen digu hau
guztia antolatzeko Petri sarea diseinatzen dugunean, 8. irudian ikusten du-
gunez.
22

Sistema linealen analisia
1
Sistema linealak
Kontrol sistemen osagai mekaniko eta elektrikoak aztertzeko eredu ﬁsiko-
matematikoak erabil ditzakegu sarritan. Bereziki sistemaren eboluzioa den-
boran zehar deskribatzen dituzten ekuazioak lor ditzakegu ﬁsika legeen bidez.
Ekuazio horiek F (t, y, y′, y′′, . . .) = 0 formakoak dira: y sistemaren egoera
adierazten duen magnitude ﬁsiko bat da, t denboraren funtzioa izango de-
na, y′ = dy/dt magnitude horren lehen ordenako deribatua da, y′′ = d2y/dt2
bigarren ordenako deribatua, etab. Fisika legeetatik lortzen diren ekuazio ho-
rien ezezaguna y(t) funtzioa da, hau da, sistemaren egoera adierazten duen
magnitudearen balioa denboran zehar. Bestalde ekuazio horiei, ekuazio di-
ferentzialak deitzen zaie, ezezaguna den funtzio baten deribatuak agertzen
direlako ekuazioetan.
Sistema bat lineala dela esaten dugu F 
(t, y, y′, y′′, . . .) = 0 ekuazioa lineala
denean, hau da, analisi matematikoa guztiz errazten duen forma berezi hau
duenean:
a0 y(t) + a1 y
′(t) + a2 y′′(t) + . . . = x(t)
non a0, a1, a2. . . koeﬁziente batzuk diren eta x(t) denboraren funtzio bat,
guztiak ezagunak. Kontrol sistema batean ditugun zenbait osagai garran-
tzitsu sistema linealak dira, bereziki elementu elektromekanikoak: adibide
nagusiena da karga bati eragiten dion DC motorea. Kontrol sistema begizta
irekian edo begizta itxian eraikiz, sistema linealen analisi matematikoa erabil
dezakegu kontrol sistema horren ezaugarriak aztertzeko.
23

Adibidea 1
Irudian dugu DC motorea, karga bati eragiten diona. Idatzi
sistema elektromekaniko honen ekuazioak ﬁsika legeetatik. Izan bedi moto-
reari sartzen zaion e(t) tentsio elektrikoa ezaguna, hori litzateke sistemaren
sarrera (input), lortu motorearen ardatzaren ω(t) abiadura angularrari, sis-
temaren irteerari (output), dagokion ekuazio diferentziala, sistema lineala
dugula egiaztatuz.
e(t)
eb(t)
L
i(t)
R
ardatzaren biraketa
marruskadura
Adibidea 2
Badira sistema lineal bitxiagoak, irudiko pendulu itzulia bezala.
Sistemaren sarrera f (t) indarra da, eta irteera θ(t), penduluak ardatz berti-
kalarekin duen angelua. Sistema honen kontrolaren helburua da f (t) indar
egoki baten bidez pendulua ardatz bertikaletik hurbil ibiltzea, θ(t) angelua 0
balioaren inguruan izatea. Sistema hau berez ez da lineala, baina pendulua
ardatz bertikaletik ez dela urruntzen onartzen badugu, orduan ekuazio dife-
rentzial lineala lortzen da (sin θ = θ eta cos θ = 1 idatziz). Ikus inverted
pendulum, ingelesezko Wikipedia entziklopedian.
24

F
x
m, l
M
Sistema linealaren ekuazio diferentziala jakinik, horren soluzioa lortzea
nahi izango dugu, horrela sistemaren egoera deskribatzen duen magnitude
ﬁsikoaren eboluzioa denboran zehar aztertu ahal izango genuke. Hau egiteko
bi era nagusi ditugu:
• Zenbakizko kalkuluaren bidez soluzioa lortzea, magnitude ﬁsikoaren ba-
lioak denboran zehar kalkulatuz. Zenbakizko kalkulurako algoritmoak
ditugu hainbat matematika software-tan: Matlab eta Scilab adibidez.
• Sistema lineala analizatzea Laplace transformatua erabiliz. Ekuazio
diferentzialen ordez ekuazio algebraikoak maneiatzen dira metodo ho-
nekin.
Bi modu hauek osagarriak dira, zenbakizko kalkulua nahitaezkoa denez solu-
25

zioaren balioak (zenbakizkoak) kalkulatzeko. Baina Laplace transformatua-
rekin sistemaren analisia egin dezakegu, zehazki:
• Laplace transformatuaren bidez ekuazio diferentzialak ekuazio algebrai-
ko bihurtzen dira.
• Laplace transformatuaren bidez lortzen diren ekuazioek interpretazio
ﬁsiko-enpirikoa dute, oso garrantzitsua dena.
• Sistemaren analisi koalitatiboa egin dezakegu soluzioa kalkulatu aurre-
tik, soluzioaren ezaugarri garrantzitsuak aztertuz.
• Sistema konplexu bat hainbat osagai linealen konbinazioa denean, La-
place transformatuarekin, osagaietatik abiatuz sistema osoaren ekua-
zioa lortzeko modu erraza dugu.
• Ekuazio diferentziala ez badugu ezagutzen, edo bere koeﬁzienteak eze-
zagunak badira, interpretazio ﬁsiko-enpiriko horretan oinarrituz siste-
maren analisi koalitatiboa egin dezakegu.
2
Laplace transformatua eta
transferentzia funtzioa
Izan bedi f (t) funtzioa, Laplace transformatua deitzen diogu F (s) = L[f(t)]
funtzioari:
F (s) =
∞
0
f (t) e
−
stdt
Beraz f (t) funtzioari, t denbora aldagaiaren funtzioari, F 
(s) funtzio bat ego-
kitzen diogu, s aldagaiaren funtzioa: aldagai honen interpretazio ﬁsikoa au-
rrerago ikusiko dugu. Hauek dira funtzio batzuen transformatuak:
f (t)
F (s) = L[f(t)]
1
1/s
tn
n!/sn+1
eat
1/(s − a)
cos ωt s/(s2 + ω2)
sin ωt
ω/(s2 + ω2)
26

Propietate batzuk azalduko ditugu. Laplace transformatua lineala da:
L[f(t) + g(t)] = L[f(t)] + L[g(t)] , L[c f(t)] = c L[f(t)]
Baldin F (s) = L[f(t)], orduan f(t) = L
−
1(F (s)) idatziko dugu. F (s) ema-
nik, f (t) = L
−
1(F (s)) existitu daiteke ala ez, baina existitzen bada, f(t)
funtzioa bakarra da.
Funtzio baten deribatuaren transformatua hau da:
L[f
(n)(t)] = sn L[f(t)]
Berdintza hau betetzen da f (0) = f ′(0) = . . . = f (n−1)(0) = 0 denean.
Eredu ﬁsikoetan f (t) magnitude ﬁsiko bat izango da eta oro har arrazoizkoa
izango da baldintza hori betzen dela onartzea. Bestalde, hau da integralaren
transformatua:
L[
t
0
f (u) du] =
1
s
L[f(t)]
Funtzio baten Laplace transformatuaren propietateekin amaitzeko, denbora-
ren limitea1 hartuz:
lim
t→∞
f (t) = lim
s→0
s F (s)
non F (s) = L[f(t)].
Adibidea 3
Irudiko malgukirako ekuazio diferentzial hau dugu:
m y
′′(t) = f(t) − k y(t)
k
m
f
y
1Beste propietate hau ere badugu: limt
→
0
f (t) = lims
→∞
s F (s)
27

Konstante ﬁsikoen balioak eta f (t) indarra ﬁnkatuz, eman dezagun hau du-
gula:
y
′′(t) + 5y(t) = 2 sin ωt
Kalkulatu ekuazio diferentzialaren Laplace transformatua eta lortu Y (s) =
L[y(t)] funtzioa.
Adibide honetan, Y (s) = L[y(t)] lortu ondoren, y(t) = L
−
1(Y (s)) kalkula-
tuz ekuazio diferentzialaren soluzioa genuke, posizioaren eboluzioa denboran
zehar. Baina Laplace transformatuarekin ez dugu horrela lan egingo. Siste-
ma batean x(t) sarrera eta y(t) irteera identiﬁkatuko ditugu, hauen Laplace
transformatuak deﬁnitu, X(s) eta Y (s), eta ekuazio diferentzialaren Laplace
transformatutik funtzio hau deduzituko dugu:
Y (s)
X(s)
= F (s)
Sistema linealaren transferentzia funtzioa deitzen zaio F (s) funtzioari, ir-
teeraren eta sarreraren Laplace transformatuen erlazioari. Transferentzia
funtzioaren erabilera ez da sarrera partikular bati dagokion irteera kalkula-
tzea, baizik sistemaren denbora erantzunaren ezaugarri nagusiak aztertzea
koalitatiboki.
Adibidea 4
Aurreko adibidearekin jarraituz, izan bedi x(t) = f (t) sarrera,
zehaztu gabe utziko duguna, eta y(t) irteera. Ekuazio diferentziala hau bada:
y
′′(t) + 5y(t) = x(t)
lortu F (s) = Y (s)/X(s) transferentzia funtzioa, non Y (s) = L[y(t)] eta
X(s) = L[x(t)].
3
Maiztasun erantzuna
Sistemaren erantzuna deitzen diogu sarrera jakin baterako sistemaren irtee-
rak hartzen duen balioari, bai sarrera eta bai irteera denboraren funtzioak
izanik. Bi erantzun motaz hitz egingo dugu:
• Denbora erantzuna. Hau da sistemaren erantzun arrunta, ohikoak diren
sarreretako duen erantzuna. Adibidez DC motorearekin, ohiko sarrerak
28

dira pausoa (konstantea), malda, hauen antzeko funtzioren bat, edo
hauen konbinazioren bat. Honelako sarrerak eta irteera/erantzunak
ditugu kontrol sistema bat abiatuz.
• Maiztasun erantzuna. Hemen ere irteera denboraren funtzioa da noski,
baina sarrera mota berezia hartzen da: seinale sinusoidala. Maiztasun
erantzunak ematen digu transferentzia funtzioaren interpretazio enpiri-
koa eta erantzun honetan oinarrituko gara kontrol sistemaren azterketa
koalitatiboa egiteko kontrol sistema abiatu aurretik. Horregatik da ga-
rrantzitsua maiztasun erantzuna.
Sistemaren denbora erantzuna aztertzen dugunean zati iragankorra eta zati
geldikorra bereizten ditugu, bakoitzaren ezaugarriak begiratuz. Maiztasun
erantzunaren azterketan zati iragankorra ez da kontuan hartzen.
Maiztasun erantzunari dagokionez, azpimarratuko dugu esperimentalki
lortu dezakegula, ez dugu ekuazio diferentzialen beharrik, eta maiztasun
erantzunean oinarrituz sistema linealaren analisia egin dezakegu, horren bi-
dez kontrol sistema diseinatuz. Gure planteamendua izango da sistema lineal
baten analisiak ematen dizkigun ezaugarrietan oinarrituz, kontrol sistema
diseinatzea, eta analisi hori egiteko maiztasun erantzunaz baliatuko gara.
Ondoren, diseinatu dugun kontrol sistemaren denbora erantzuna begiratuko
genuke, ea betetzen dituen eskatutako zehaztapenak.
Kontsidera dezagun irudiko sistema lineala,
E
E
F (s)
X(s)
x(t)
Y (s)
y(t)
x(t) sarrera seinalea da, X(s) honen Laplace transformatua, y(t) irteera sei-
nalea, eta Y (s) honen Laplace transformatua. F (s) transferentzia funtzioa
da.
Eman dezagun sarrera sinusoidala dugula,
x(t) = X sin(ωt)
29

Ekuazio diferentzialen teoriatik jakina da denbora-inbarianteko sistema line-
alean sarrera sinusoidala bada orduan egoera geldikorrean irteera ere sinu-
soidala dela,
y(t) = Y sin(ωt + φ)
Irteeraren maiztasuna ω berdina da. Irteeraren zabaltasuna (anplitudea) Y
oro har ezberdina da, eta irteeraren fase-diferentzia sarrerarekiko φ da.
Ekuazio diferentzialetik erlazio hau dugu:
Y (s)
X(s)
= F (s)
non F (s) = P (s)/Q(s), polinomioak izanik P (s) eta Q(s).
Propietatea.
Y /X = |F (jω)| eta φ = F (jω)
Bi motako kontrol sistemak ditugu: begizta irekikoa eta begizta itixikoa.
Begizta irekiko kontrol sistemari dagokio aurreko irudia. Zehaztasun han-
diagoa duen kontrola diseinatzeko, begizta itxiko kontrol sistema hartzen da,
eta honi dagokion eredu orokorra hau da:
G0(s)
e−Tds
E
E
T
R(s)
C(s)
+
−
G0(s) denbora-inbarianteko sistema linealaren transferentzia funtzioa izango
da eta e−Tds sistemak izan dezakeen denbora atzerapenari dagokion transfe-
30

rentzia funtzioa. Beraz, begizta itxian
C(s)
R(s)
= M(s)
transferentzia funtzioa izanik
M(s) =
G(s)
1 + G(s)
non G(s) = G0(s)e
−
Tds begizta irekiko transferentzia funtzioa den.
Goian aipatutako propietatea betetzen da eredu orokorrerako, begizta itxi-
an M(s) transferentzia funtzioak irteeraren magnitudea eta fasea determina-
tuko duelarik sarrera jakin baterako, eta G(s) transferentzia funtzioak begiz-
ta irekian.
4
Begizta itxiko maiztasun erantzunerako
zehaztapenak
Transferentzia funtzioa emanik, ω-ren funtziotzat hartuko ditugu M(jω)-ren
magnitudea |M(jω)| eta fasea M(jω). Irudian ditugu magnitude eta fase
kurbak ohiko kontrol-sistema batean.
31

?
-
6
-
0
ωr
BW
ω
0.707M0
M0
Mr
|M(jω)|
(−)
ω
M(jω)
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
• Mr gailur erresonatzailea, |M(jω)| magnitudearen balio maximoa da.
Oro har, Mr-k sistemaren egonkortasuna adierazten digu. Mr/M0 han-
dia dugunean denbora-erantzuneko gainbultzada maximoa handia du-
gu eskuarki. ωr maiztasun erresonatzailea, Mr gailur erresonatzaileari
dagokion maiztasuna da.
• BW banda-zabalera, |M(jω)| magnitudearen balioa zero-maiztasuneko
M0 balioaren ehuneko 70.7ra erortzen deneko maiztasuna da2.
21/
√
2 ≈ 0.707
32

Magnitudea neurtzeko unitatea dezibelioa da. |M(jω)| irudikatzean es-
kala logaritmikoa erabili ohi da eta
|M(jω)| unitate absolutuetan ≡ 20 log |M(jω)| dB
Logaritmoaren oinarria 10 izango da beti.
Beraz banda-zabalera, magnitudearen balioa zero-maiztasuneko baliotik
3 dB erortzen deneko maiztasuna da:
20 log M0 − 20 log(0.707M0) =
= −20 log 0.707 ≈ 3 dB
Oro har, denbora-erantzunaren propietate iragankorren berri ematen digu
banda-zabalerak. Banda-zabalera handia altxatze-denbora azkarragoari da-
gokio, maiztasun handiko seinaleek errazago zeharkatzen baitute sistema, eta
alderantziz.
(Banda-zabalerak baita ere erakusten dizkigu sistemaren zarata-ﬁltrake-
taren berezitasunak eta sistemaren sendotasuna. Sistema sendoa dela esaten
dugu baldin parametro aldaketarako sentiberatasun txikia badu.)
5
Nyquist-en egonkortasun irizpidea
Sistema linealaren denbora erantzunaren egonkortasuna aztertzeko, maizta-
sun erantzunean oinarritzen den irizpidea, Nyquist-en irizpidea, erabiliko du-
gu. Izan bedi G(s) begizta irekiko transferentzia funtzioa.
E
E
T
l
+
−
G(s)
33

Nyquist diagraman G(s) marraztuko dugu plano konplexuan, Im [G(s)] ma-
rraztuz Re [G(s)]-ren aurka, s-ri balio berezi batzuk emanaz. Nyquist dia-
gramak propietate erakargarri hauek ditu:
• Begizta itxirako egonkortasun absolutua determinatzeaz gain, egonkor-
tasun erlatiboari buruzko informazioa ematen digu, sistemaren egon-
kortasun maila deﬁnitzen digu.
• Transferentzia funtzioa ezaguna denean, Nyquist diagrama zuzenean
marraztu dezakegu (ez da errorik kalkulatu behar, eta abar), bereziki
konputagailuaren laguntzaz.
• Transferentzia funtzioa ezezaguna denean, Nyquist diagrama esperi-
mentalki lor dezakegu, nahikoa dugu seinale sinusoidalak erabiliz zabal-
tasunaren magniﬁkazioa (Y /X) eta fase diferentzia neurtzea maiztasun
bakoitzerako.
• Denbora-atzerapenak dituzten sistemak azter daitezke, erroen irizpide-
arekin ezin daitekeena.
• Begizta itxiko maiztasun-erantzunerako zehaztapenak, Mr, ωr, BW,
etab, erraz lortzen dira M(s) = G(s)/(1 + G(s)) erlazioa erabiliz.
Oro har, begizta irekiko transferentzia funtzio hau dugu:
G(s) =
K(1 + T1s)(1 + T2s) . . . (1 + Tms)
sN (1 + T ′1s)(1 + T
′
2s) . . . (1 + T
′
ns)
e
−
Tds
N osokoa sistemaren mota da, aurrerago ikusiko dugu honen eragina. G(s)-
ren zeroak s = −1/Ti balioak dira eta poloak s = −1/T
′
i balioak, zenbaki
errealak edo konplexu konjugatuak izango direnak . (Funtzio konplexu bat
emanik, f (s), esango dugu z zeroa dela baldin f (z) = 0 bada, eta p poloa
dela baldin f (p) = ∞.) Td atzerapena da, erreala.
Transferentzia funtzioa ezaguna bada, denbora erantzunaren egonkorta-
sun irizpidea hau da:
• Begizta irekiko egonkortasuna: sistema egonkorra da baldin G(s) be-
gizta irekiko transferentzia funtzioaren poloak s-planoaren ezkerrean
badaude, kontuan hartu gabe jakinaren gainean dauden s = 0 poloak.
34

• Antzera begizta itxiko egonkortasuna: sistema egonkorra da baldin
M(s) = G(s)/(1 + G(s)) begizta itxiko transferentzia funtzioaren po-
loak s-planoaren ezkerrean badaude.
Maiztasun erantzunean oinarritzen den Nyquist-en egonkortasun irizpi-
dea eman aurretik deﬁnizio batzuk behar ditugu.
Hasteko zero edo polo bakoitza bere ordena adina aldiz zenbatuko dugu:
adibidez 1/sn funtzioak n polo ditu, etab.
Kontsidera dezagun orain plano konplexuan puntu bat, A, eta kurba ireki
bat, Γ.
-
6
s
A
Γ
C
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
E
Irudi honetan, kurba irekia geziari jarraituz zeharkatzean, A puntuarekiko Φ
angelua zeharkatu dugula esango dugu.
Ohikoa denez Φ positiboa da erlojuaren aurkako noranzkoan eta negati-
boa bestela. Irudian Φ ≈ (1 + 1/8)2π = 9π/4 rad.
Sistema lineal baten begizta irekiko transferentzia funtzioa, G(s), hartuko
dugu orain eta s aldagaiari balio konplexuak emanez ΓG kurba lortuko dugu
35

plano konplexuan: zehazki G(jω) marraztuko dugu 0-tik ∞-ra eramanaz ω.
Konputagailu programak marraztuko digu ΓG kurba. Deﬁnizio hauek ditugu:
• P : G(s) funtzioak s-planoaren eskuinean dituen poloen kopurua.
• Pω: G(s) funtzioak jω ardatz osoan dituen poloen kopurua.
• Φω: G-planoan −1+j0 puntuarekiko zeharkatzen den angelua s-plano-
an jω ardatzerdi positiboa zeharkatzean 0-tik ∞-ra, betiere ardatzer-
diko poloak inguratuz.
Nyquist-en irizpidea hau da: begizta itxiko sistema egonkorra da baldin eta
soilik baldin
Φω = P +
1
2
Pω · π
Adibidea 5
Aztertu begizta itxiko sistemaren egonkortasuna K-ren balioen
arabera baldin begizta irekiko transferentzia funtzioa hau bada:
G(s) =
K
s(s + 2)(s + 10)
Adibidea 6
Aztertu begizta itxiko sistemaren egonkortasuna baldin
G(s) =
s2 − s + 1
s(s2 − 6s + 5)
Gehienean begizta irekiko sistema egonkorra izango da eta ez du polorik
izango s-planoko eskuinean, ezta ere jω ardatzean, 0-an izan ezik. Kasu
honetan Nyquist-en egonkortasun irizpidea honela geratzen da:
Φω = n
π
2
non n, s = 0 poloaren ordena den (n ≥ 0), hau da, sistema-mota.
Fase minimoko sistema batean, deﬁnizioz, P = 0 da eta Pω = 1, s = 0
poloa dugu. Beraz egonkortasun baldintza Φω = π/2 da.
36

6
Denbora atzerapenak
Denbora atzerapenak dituen sistemaren Nyquist diagrama aztertuko dugu.
Begizta irekiko transferentzia funtzioa honelakoa izango da:
G(s) = G0(s) · e
−
Tds
non G0(s) funtzio arrazionala den (sistema linealari dagokiona), eta Td den-
bora atzerapena. (Sarrera baterako, sistemaren zati linealaren irteera gehi
Td-ko atzerapena da sistema osoaren irteera.)
G(s)-ren Nyquist diagrama G0(s)-ren berdina da baina G0(jω) puntu
bakoitza −Tdω radianeko angelua biratuz 0-ren inguruan:
G(jω) = G0(jω) · e
−
jTdω
Normalean3 ω → ∞ doanean G0(jω) = 0 izango da, eta G(jω)-k espirala
izango du jatorriaren inguruan. Bestalde,
lim
ω→0
G(jω) = lim
ω→0
G0(jω)e
−
jTdω = lim
ω→0
G0(jω)
Nyquist diagrama berrian egonkortasun irizpide ohikoa dugu, e−Tds-k polorik
ez duela jakinik4.
Adibidea 7
G(s) =
e−Tds
s(s + 1)(s + 2)
7
Egonkortasun erlatiboa
Sistema bat egonkorra den edo ez jakiteaz gain, zein neurriraino egonkorra
den neurtu nahi dugu, hau da, egonkortasun erlatiborako neurria deﬁnitu.
K9-54 irudian dugu fase minimoko sistema baten (non P = 0, eta Pω = 1,
s = 0 poloa) denbora eta maiztasun-erantzuna, K begizta-irabaziaren balio
3Sistema hertsiki propioa dugunean, hau da, izendatzaileren gradua zenbakitzailearena
baino handiagoa.
4Poloa inﬁnituan du, s-planoaren ezkerrean.
37

ezberdinetarako. Egonkorra da Φω = π/2 denean. K balioa handitzen doan
heinean sistema ez-egonkorra bihurtzen da.
Egonkortasun erlatiboa neurtzeko irabazi-marjina deﬁnituko dugu. Le-
henik fase-zeharkagunea deituko diogu G-planoan G(jω)-k ardatzerdi erreal
negatiboa mozten duen puntuari, eta puntu honi dagokion ωp maiztasunari
fase-zeharkaguneko maiztasuna,
G(jωp) = π
Irabazi-marjina honela deﬁnituko dugu:
GM =
1
|G(jωp)|
eta dezibeliotan,
GM = 20 log
1
|G(jωp)|
dB = −20 log |G(jωp)| dB
Aurreko irudian hau dugu:
• GM > 0 dB denean sistema egonkorra da,
• GM < 0 dB denean sistema ez-egonkorra da.
Irabazi-marjinak adierazten digu zenbatean gehitu daitekeen irabazia begizta
itxiko sistema ez-egonkorra bihurtu aurretik:
K0
G(s)
E
E
T
+
−
38

irabazia K0 faktoreaz biderkatzen badugu, egonkorra izateari utziko dio
|K0 · G(jωp)| = 1 betetzen denean (K0 > 1 eta |G(jωp)| < 1). Beraz
K0 =
1
|G(jωp)|
Dezibeliotan 20 log K0 = −20 log |G(jωp)|, irabazia gehienez 20 log K0 = GM
dezibeliotan gehitu dezakegu egonkortasuna galdu gabe, hau da,
K0 = 10
GM(dB)/20
faktoreaz biderka dezakegu gehienez.
Egonkortasun erlatiboa neurtzeko irabazi-marjinaz gain fase-marjina ere
deﬁnituko dugu. Irabazi-zeharkagunea deituko diogu G-planoan G(jω)-ren
magnitudea 1 den puntuari, eta honi dagokion ωg maiztasunari irabazi-ze-
harkaguneko maiztasuna,
|G(jωg)| = 1
Fase-marjina honela deﬁnitzen da ( G(jωg) positiboa hartuz):
PM = G(jωg) − 180
◦ (gradutan)
Hau da, zer angelu biratu behar dugun Nyquist diagrama, jatorriaren ingu-
ruan eta noranzko negatiboan, irabazi-zeharkagunea −1+j0 puntura erama-
teko.
39

-
6
PM
−1
G(jωg)
PM > 0
G-planoa
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
p
6
@
@
R
E
Sistema egonkorra dugu baldin eta soilik baldin PM > 0.
Azkenik kontuan izan irizpide hauek fase minimoko sistemarako deduzitu
ditugula, eta beste era bateko sistema dugunean egiaztatu egin beharko dugu
irizpide hauek mantentzen diren ala ez.
8
Bode diagrama
Bode diagraman G(jω)-ren magnitudea eta fasea marraztuko ditugu ω-ren
balioak (0, ∞) tartean hartuz, magnitudea dezibeliotan eta fasea (noranzko
negatiboan) gradutan neurtuz. Nyquist diagramarekin alderatuz, Bode dia-
grama egokiagoa da diseinurako, irabazi eta fase marjinak determinatzeko.
40

ω rad/sec
|G(jω)| dB
ωg
GM > 0
0
?
6




ω rad/sec
G(jω) grad
PM > 0
ωp
-180
0
6
?
Bode diagraman hau daukagu fase minimoko sistemarako:
a) Irabazi-marjina positiboa da, eta sistema egonkorra, fase-zeharkagunean
G(jω)-ren magnitudea 0 dB ardatzaren azpitik badago.
b) Fase-marjina positiboa da, eta sistema egonkorra, irabazi-zeharkagunean
G(jω)-ren fasea −180
◦ ardatzaren gainetik badago.
41

Nabaria denez (a) ⇔ (b).
Adibidea 8
K9-60 irudian fase minimoko sistema baten Bode diagrama,
GM eta PM.
Denbora atzerapenak
Adibide baten bidez azalduko dugu nola erabili Bode diagrama denbora atze-
rapenak daudenean.
Adibidea 9
K9-61 irudian fase minimoko sistema baten Bode diagramak,
atzerapenik gabe eta Td = 1 segundoko atzerapenarekin.
9
Bode diagrama eta sistema identiﬁkazioa
Sistema baten begizta irekiko maiztasun erantzuna adierazten du Bode dia-
gramak, eta sistema identiﬁkatzeko erabil dezakegu diagrama hau. Bode
diagrama transferentzia funtziotik kalkula dezakegu, baina esperimentalki
ere determina dezakegu, sarrera sinusoidalerako irteeraren magnitude eta fa-
sea neurtuz maiztasun ezberdinetarako.
Bode diagramaren bidez begizta itxiko sitemaren egonkortasuna azter
dezakegu. Honez gainera, sistema identiﬁkatuko duten ezaugarri hauek ere
deduzi ditzakegu:
• Sistema-mota, N
• Egoera geldikorreko erroreak, begizta itxian,
• (Denbora-erantzuna, Fourier-en transformatuarekin.)
Sistema-mota honela identiﬁkatuko dugu. Sistema lineala badugu, atze-
rapenak barne, orduan
G(s) =
K(1 + T1s) . . . (1 + Tms)
sN (1 + T ′1s) . . . (1 + T ′ps)
e
−
Tds
42

Bode diagraman hau dugu,
G(jω) =
K(1 + jT1ω) . . . (1 + jTmω)
(jω)N (1 + jT ′1ω) . . . (1 + jT ′pω)
e
−
jTdω
Maiztasun baxuetan, hau da, ω → 0 doanean
G(jω) =
K
(jω)N
=
K
ωN
· (−j)
N =
K
ωN
· 1−π
2 N
fasea hau da:
G(jω) = −90
◦ × N
Magnitudearen malda ere kalkulatuko dugu:
20 log |G(jω)| = 20 log K − N · 20 log ω
Maiztasun bandak hamarrekotan neurtuko ditugu: ω2/ω1 = α bada esango
dugu ω1-etik ω2-rako maiztasun bandak log ω2 − log ω1 = log α hamarreko
neurtzen duela. Adibidez ω2/ω1 = 10 bada ω1 - ω2 bandak hamarreko bat
neurtzen du. Ondorioz maiztasun baxuetan5 magnitudearen malda hau dugu:
−20 · N dezibelio/hamarreko (dB/dec)
Adibidez 3 motako sisteman, maiztasun baxuetan, malda −60 dB/hamarreko
da eta fasea G(jω) = −270
◦.
5Maiztasun baxua kontzeptu erlatiboa da, sistema batean 0.1 -
 1 banda hartuko dugu,
edo 0.01 - 0.1 banda, edo 0.3 -
 3, hamarreko bat neurtzen dutenak, etab. Maiztasun
baxuetan fasea eta magnitudearen malda konstanteak egiten direla dakigu.
43

-
6
0.1
1
10
100
ω rad/sec
|G(jω)| dB
hamarrekoa
−60 dB
d
d
d
d
d
dd
Egoera geldikorreko erroreak determinatzeko K jakin behar dugu. Maiztasun
baxuan:
20 log K = 20 log |G(jω)| + N · 20 log ω
Begizta itxiko denbora erantzunaren ess egoera geldikorreko erroreak taula
honek6 ematen dizkigu:
Mota/Sarrera
Pausoa: R
Malda: R t Parab: R t/2
N = 0
R/(1 + K)
∞
∞
N = 1
0
R/K
∞
N = 2
0
0
R/K
Adibidea 10
Bode diagrama maiztasun baxuetan aztertuz, identiﬁkatu sis-
temaren mota eta kalkulatu egoera geldikorreko erroreak.
6Taulako emaitzak lortzeko kontuan izan behar dugu K = lims
→
0
s
N G(s) dela, eta
Laplace transformatuaren limt
→∞
f (t) = lims
→
0
s F (s) propietatea. Egoera gerakorreko
errorea, kontrolatu nahi den magnitudearen eta kontrol erreferentziaren arteko diferentzia
bezala deﬁnitzen da.
44

Kontrol sistemen diseinua
1
Kontrolagailuaren diseinua
Kontrol-sistemen diseinua aztertuko dugu gai honetan. Kontrol-sistema egi-
tura ezberdinekoa izan daiteke, K10-2 irudian ikusten dugunez. Oro har,
feedback edo erretroakzio sistemak ditugu: kontrolatu behar den aldagaia
eta erreferentzia balioaren arteko aldea erabiltzen da sistemaren sarrera be-
zala. Guk kontsideratuko dugun oinarrizko kontrol-sistema hau da:
KONTROLAGAILUA
Gc(s)
PROZESUA
G(s)
E
E
T
E
r(t)
c(t)
+
−
e(t)
Kontrolagailuaren diseinurako zehaztapenak erabiliko ditugu sistemak zer
eta nola egin behar duen adierazteko. Zehaztapen hauek bi eratara eman
daitezke:
1. Maiztasun-erantzunerako: irabazi-marjina, fase-marjina, Mr, banda
zabalera.
45

2. Denbora-erantzunerako: altxatze-denbora, atzerapen-denbora, ezarpen
denbora, gainbultzada maximoa, egoera gerakorreko erroreak.
Oro har, diseinuan bi eratako zehaztapenak erabiliko ditugu. Transferentzia
funtzioa ezaguna bada denbora-erantzuna daukagu konputagailu programak
erabiliz, eta bestela esperimentalki azter genezake denbora-erantzuna. Bode
diagrama transferentzia funtziotik kalkula daiteke, eta hau ezezaguna ba-
da esperimentalki lortuko genuke Bode diagrama sistemaren identiﬁkazioa
honela eginaz. Bode diagramatik transferentzia funtzioaren hurbilketa bat
egin daiteke edo bestela zuzenean lortu denbora-erantzuna analisi armoni-
koa erabiliz. Gu maiztasun-erantzunean oinarrituko gara batez ere kontro-
laren diseinua egiterakoan, teknika egokiagoa denez, denbora-erantzuna ere
aztertuz diseinurako zehaztapenak betetzeko, azkenean denbora-erantzuna
interesatzen baitzaigu.
Kontrol-sistema diseinatzean lehenik kontrolagailu mota aukeratu behar
dugu eta ondoren kontrolagailuaren parametroak determinatu. Normalean
diseinu zehaztapenak beteko dituzten parametroak ez ditugu zuzenean aur-
kituko, baizik iterazio prozedura bat jarraituz: parametroren bat aldatuz
zehaztapen bat bete daiteke baina beste bat okertu, etab. Beraz komeni
zaigu diseinu erregela batzuk ﬁnkatzea:
1. Alde batetik Mr, eta beste aldetik indargetzea, fase-marjina eta irabazi-
marjina, alderantziz proportzionalak dira. Indargetze-tasa gainbultza-
darekin alderantziz proportzionala da.
2. Banda-zabalera zenbat eta handiagoa izan, sistemak lasterrago eran-
tzungo du, altxatze-denbora txikiagoa izango da.
3. Erantzuna lasterragoa den neurrian sistema barneko seinaleak handia-
goak eta garestiagoak izango dira.
Erlazio hauek kualitatiboak dira, ez hertsiki hartu beharrezkoak eta diseinua
egitekoan balio konkretuak esperimentalki, edo transferentzia funtzioaren bi-
dez, lortuko ditugu.
Kontrolagailuaren parametroak kalkulatzerakoan bi metodo erabil dai-
tezke, bata erroen lekuan oinarritzen da eta bestea maiztasun-erantzunean,
Bode diagraman alegia. Noski bietan denbora erantzuna eskuragai izan behar
46

dugu, esperimentalki edo transferentzia funtzioaren bidez (edo analisi armo-
nikoa eginez). Bigarren metodoa egokiagoa iruditzen zaigu, lehenengo meto-
doa analitikoa baita eta aldiz bigarrenak oinarri ﬁsiko-esperimentala baitu.
Kontrolagailu arruntena kontrolagailu proportzionala da, adibide honetan
aztertuko duguna.
Adibidea 1
Aztertu kontrolagailu proportzionala bigarren ordenako prototi-
porako.
Gai honetan kontrolagailu konplexuagoak aztertuko ditugu: PD, propor-
tzional deribatiboa, PI, proportzional integrala, eta biak elkartuz PID kon-
trolagailua, hau izanik gaur egun kontrol sistema gehienek erabiltzen duten
kontrolagailua.
2
PD kontrolagailua
Eskema hau dugu:
Gp(s)
KP
KD s
E
E
T
E
T
E
+
+
+
−
Kontrolagailuaren transferentzia funtzioa beraz hau da:
Gc(s) = KP + KD s
KP eta KD konstante proportzionala eta deribatiboa dira hurrenez hurren.
Kontrolagailuko zati deribatiboaren eragina aztertuko dugu. Eman deza-
gun kontrol proportzionala bakarrik dugula,
47

Gp(s)
KP
E
E
T
E
E
+
−
r(t)
y(t)
e(t)
non y(t) irteera den eta e(t) errore seinalea. K10-5 irudian ikusten dugunez,
PD kontrolagailuaren zati deribatiboak errore seinalearen deribatua kalku-
latzen du. Oro har, malda negatibo edo positibo handia dugunean gainbul-
tzada edo azpibultzada baten hasieran gaude eta PD kontrolaren helburua
sistemaren erantzuna leuntzea da.
Hauek dira ondo diseinatutako PD kontrolaren eraginak:
1. Idargetzea hobetzen du eta gainbultzada maximoa txikitu. GM, PM
eta Mr hobetzen ditu.
2. Altxatze-denbora eta ezarpen-denbora txikitzen ditu. Banda-zabalera
handitzen du.
3. Maiztasun altuko zarata gehitu dezake.
Bestalde PD kontrolaren zati deribatiboak ez du eraginik egoera gerakor-
reko errorean eta ez du sistemaren mota aldatzen. (Hau argi dago s → 0
eramanaz.)
Adibidea 2
Kontsidera dezagun hirugarren ordenako sistema bat:
Gp(s) =
1.5 × 10
7 K0
s (s2 + 3, 408.3 s + 1, 204, 000)
Hauek izango dira denbora-erantzuneko zehaztapenak:
• unitate-maldako sarreraren egoera gerakorreko errorea ≤ 0.001
48

• gainbultzada maximoa ≤ 5%
• altxatze-denbora, tr ≤ 0.005 sec
• ezarpen-denbora, ts ≤ 0.005 sec
Diseinatu zehaztapen hauetarako PD kontrolagailua.
3
PI kontrolagailua
Eskema hau dugu:
Gp(s)
KP
KI / s
E
E
T
E
T
E
+
+
+
−
Kontrolagailuaren transferentzia funtzioa hau da:
Gc(s) = KP +
KI
s
=
KP s + KI
s
KP eta KI izanik konstante proportzionala eta integrala hurrenez hurren.
Hauek dira ondo diseinatutako PI kontrolagailuaren eraginak:
1. Indargetzea hobetzen du eta gainbultzada maximoa txikitu. GM, PM
eta Mr hobetzen ditu.
2. Altxatze-denbora gehitzen du. Banda-zabalera txikitzen du.
3. Maiztasun altuko zarata ﬁltratzen du.
49

Bestalde, PI kontrolagailuak s = 0 polo bat gaineratzen dio sistemari,
sistemaren mota unitate batean gehituz. Honela, jatorrizko sistemak egoera
gerakorreko errore konstantea bazuen sarrera jakin baterako, PI kontrolagai-
luak zerora eramango du errore hau, sistema konpentsatua egonkorra bada
behintzat.
Maiztasun-erantzunean oinarrituko gara PI kontrola diseinatzeko7.
PD kontrola altu-pasako ﬁltroa den bezala, PI kontrola baxu-pasako ﬁl-
troa da, K10-6 eta K10-18 irudietan nabaritzen denez. PI kontrolagailuaren
Bode diagraman ikusten dugunez, ω = 10KI/KP rad/sec maiztasunetik au-
rrera irabazia 20 log KP dB-koa da gutxi gorabehera, konstantea, eta fasea
ia nulua. Propietate honetan oinarrituz, urrats hauek emango ditugu PI
kontrolagailua diseinatzekoan:
1. Bode diagrama erabiliz, fase-marjinaren zehaztapenaren arabera, fase-
marjin honi dagokion ω′g irabazi-zeharkagunearen maiztasun berria de-
terminatuko dugu. Begiztaren irabazia gutxituko dugu PI kontrolaren
maiztasun altuko irabaziaren arabera,
20 log KP = −|Gp(ω
′
g)| dB
hemendik KP < 1 kalkulatuko dugularik.
2. Azkenik, KI/KP = ω
′
g/10 erlaziotik KI dugu, edo agian bi hamarreko
azpitik hartuz, KI/KP = ω
′
g/100.
Balio hauek lehen hurbilketa ba-
tzuk izango dira eta sistemaren erantzunaren arabera ﬁnkatuko dugu
KI. Oro har, KI handiagoak fase-marjina gutxitu dezake eta txikia-
goak banda-zabalera estutu. Fase-marjinaren zehaztapen ezberdinak
ere aztertuko ditugu.
3. Egoera gerakorreko errorearen zehaztapena egiaztatuko dugu.
Adibidea 3
Kontsidera dezagun lehenagoko hirugarren ordenako sistema:
Gp(s) =
2.718 × 10
9
s (s2 + 3, 408.3 s + 1, 204, 000)
7Erroen lekuan oinarrituz ere diseina daiteke kontrol mota hau. PI kontrolagailuak,
s = 0 poloaz gain, s = −KI/KP zeroa du: Gc(s) = KP (s+KI/KP )/
s. Erregela hau jarrai
dezakegu: aukeratu s = −KI/KP zeroa jatorritik hurbil eta G(s)-
ren beste poloetatik
urruti. α = KI /KP erlazio bat aukeratu ondoren, KI = αKP , KP -
ri dagokion erroen
lekua erabil dezakegu KP ﬁnkatzeko, eta hemendik KI . Dena den, guk ez dugu teknika
hau erabiliko.
50

PI kontrolerako zehaztapen hauek hartuko ditugu:
• sarrera parabolikorako errorea egoera gerakorrean ≤ 0.2
• gainbultzada maximoa ≤ 5%
• altxatze-denbora, tr ≤ 0.01 sec
• ezarpen-denbora, ts ≤ 0.02 sec
Sistemaren erantzuna motelagoa izango da PD kontrolarekin baino.
4
PID kontrolagailua
PID kontrolak zati proportzionala, integrala eta deribatiboa ditu, beraz PD
eta PI kontrolen onurak uztartuko ditugu PID kontrolagailua diseinatzean.
PID kontrola eraikitzeko PD eta PI kontrolak konektatuko ditugu jauzian:
Gc(s) = K0 (1 + KD s) KP +
KI
s
= K
′
P + K
′
D s +
K′
I
s
Parametroak hiru pausotan determinatuko ditugu:
1. Lehenik K0 faktore proportzionalarekin hasierako sistemaren irabazia
ﬁnkatuko dugu egonkortasun erlatibo txikiarekin abiatzeko.
2. Ondoren, PD osagaia hartuz, egonkortasun erlatiboa hobetuko dugu
eta banda-zabalera handitu, zehaztutako ezarpen-denbora edo txikia-
goa lortuko dugu. Zehaztapenen arabera aztertuko dugu egonkortasun
erlatibo handienari dagokion balioa hartzea komeni den kontrol para-
metrorako, edo bestela, balio honi ezarpen-denbora handiegia badago-
kio, egonkortasun txikiagoarekin ezarpen-denbora hobea ematen digun
balioa hartzea.
3. Azkenik, PI osagaia erantsiz, egonkortasun erlatiboa handituko dugu
gainbultzadarako zehaztapena betetzeko. Ezarpen-denbora pixka bat
handitu dezake. PI osagaiak sistemaren mota unitate batean gehituko
du eta, PID kontrolaren parametro guztiak ﬁnkatu ondoren, sistemaren
egoera gerakorreko errorearen zehaztapena azter dezakegu.
51

Ondorengo adibidean sistemaren hasierako fase-marjina 8◦koa da. PD osa-
gaiarekin egonkortasun erlatiboa hobetuko dugu, adibidean PM = 60◦ra iri-
txiko gara. PI osagaiko parametroak determinatzean fase-marjin handiagoa
lortzen saiatuko gara, adibidean 70◦koa. Gainbultzadak 79%, 11%, 5% izan-
go dira hurrenez hurren.
Bestalde, bereziki sistema ez denean fase minimoko sistema bat, egonkor-
tasun erlatiborako irizpide bezala fase-marjina erabiltzen dugularik, komeni
da Nyquist irizpidea egiaztatzea PM-ren arabera.
Azkenik, esango dugu diseinu zehaztapenak baino balio hobeak lortu
beharrik ez dagoela, honekin sistema barneko seinale handiegiak baditugu,
edo gehiegizko banda-zabalera, maiztasun altuko zaratarekin arazoa sortuz.
Adibidea 4
Har dezagun aurreko sistema ez-konpentsatua:
Gp(s) =
2.718 × 10
9
s (s2 + 3, 408.3 s + 1, 204, 000)
Sistema honen fase-marjina 8◦koa da, gainbultzada izanik 79%. Diseinurako
zehaztapenak hauek izango dira:
• sarrera parabolikorako errorea egoera gerakorrean ≤ 0.2
• gainbultzada maximoa ≤ 5%
• altxatze-denbora, tr ≤ 0.005 sec
• ezarpen-denbora, ts ≤ 0.005 sec
Determinatu PID kontrolagailuaren parametroak. Identiﬁkatu azkenean lor-
tzen dugun sistema, egoera gerakorreko errorea ere kalkulatuz.
52

Kontrol sistema digitalak
1
Sarrera
Kontrol sistema batean kontrolagailutzat konputagailu edo mikroprozesadore
bat erabil dezakegu zirkuitu elektroniko analogikoaren ordez (anpliﬁkagailu
operazionalez eraikitako zirkuitua). Mikroprozesadoreak gero eta merkeago
eta ahaltsuago izateaz gain, malgutasun osoa eskaintzen dute: osagai elek-
tronikoak aldatu beharrean nahikoa dugu programa berria idaztea. Oro har,
elektronika digitalaren abantailak ditugu, kontrolagailua sistema informatiko
batean egokitu dezakegularik.
Kontrol sistema digitalean, kontrolatutako prozesua denbora-jarraitukoa
izanik, kontrolagailuaren sarrera eta irteera seinaleak denbora-diskretukoak
izan behar dira bihurgailu egokiak erabiliz. Irudian dugu kontrol digitalerako
eskema:
A/D
bihurgailua
Kontrolagailu
digitala
D/A
bihurgailua
Prozesua
E
E
T
E
E
E
E
r(t)
c(t)
+
−
e(t)
53

Eskema sinpliﬁkatuta dago. Berez kontrolagailu digitalaren sarrerak izango
lirateke kontrolatu beharreko aldagaia, A/D bihurgailutik igaro ondoren, eta
erreferentzia balioa, hau ere A/D bihurgailutik igaroko litzateke. Bi seinale
digitalen aldea izango da kontrol digitalerako algoritmoaren sarrera. Dena
den goiko eskema baliokidea da.
2
Datu-lagindutako sistemak
Kontrol digitaleko sisteman datu analogikoak eta digitalak ditugu beraz. Sei-
nale analogiko batetik seinale digitala lortuko dugu T periodoko laginketa
eginaz, honela y(t) denbora-jarraituko funtzioa A/D bihurgailutik igarotzean
yk, k = 0, 1, 2, . . . sekuentzia bihurtzen da, T periodoko denbora-diskretuko
sekuentzia.
6
-
 
 
 
 
 
 
 
 
 
 
  
t
y(t)
6
-
6
6
6
6
6
6
6
6
k
yk
Alderantziz, yk, k = 0, 1, 2, . . . seinale digitala emanik, T periodoko denbora-
diskretuko sekuentzia, D/A bihurgailuak y(t) seinale analogikoa, denbora-
jarraituko funtzioa, sortuko du. Bihurgailu hau ZOH (zero-order hold) erakoa
bada, irudiaren araberako funtzio mailakatua da y(t).
54

6
-
6
6
6
6
6
6
6
6
k
yk
6
-
t
y(t)
3
PID kontrolagailuaren digitalizazioa
Denbora-jarraituko sistemarako PID kontrolagailuaren diseinua aztertua du-
gu. Eman dezagun determinatu ditugula kontrolaren parametroak eta orain
kontrolagailu digitala erabili nahi dugula. Laginketako T periodoa nahiko
txikia bada, itxaron dezakegu sistemaren bilakaera denbora-jarraituko bila-
kaeratik hurbilekoa izango dela.
Denbora-jarraituko PID kontrolagailuaren transferentzia funtzioa hau da:
Gc(s) = KP + KD s +
KI
s
Izan bedi xk kontrol digitalerako sarrera sekuentzia eta yk irteera sekuentzia.
Sarrera sekuentzia emanik irteera sekuentzia kalkulatzeko ekuazioak lortu
nahi ditugu. Lehenik kontrolaren zati bakoitza aztertuko dugu.
Osagai proportzionalarekin ez dugu arazorik:
yk = KP xk
Osagai deribatiboan ekuazio hau erabil dezakegu (deribatua atzerako dife-
rentziaren erregelarekin hurbilduz):
yk = KD
xk − xk−1
T
55

Eta osagai integralerako ekuazio hau dugu (integrazio trapezoidalerako erre-
gelaren hurbilketa erabiliz):
yk = yk−1 + KI
T
2
(xk + xk−1)
PID kontrolerako hiru osagaiak batera hartu behar ditugu. Horretarako
z-transformatuaren teoria erabili behar da. Emaitza ipiniko dugu besterik
gabe. PID kontrol digitalerako algoritmoa diferentzia ekuazio honek deﬁni-
tzen du:
yk − yk−1 = Axk + Bxk−1 + Cxk−2
non
A = KP + T KI/2 + KD/T
B = T KI/2 − KP − 2KD/T
C = KD/T
56
