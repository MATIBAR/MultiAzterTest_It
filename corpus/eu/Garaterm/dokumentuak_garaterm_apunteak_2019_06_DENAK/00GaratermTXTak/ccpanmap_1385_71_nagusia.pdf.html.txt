


Gaien Aurkibidea
1
OPTIMIZAZIOAREN TEORIA
ix
1.1
Sarrera . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
ix
1.1.1
Ekoizpen-problema bat . . . . . . . . . . . . . . . . . . .
x
1.2
Ereduen erabilpena . . . . . . . . . . . . . . . . . . . . . . . . .
xi
1.2.1
Garraio-problema bat . . . . . . . . . . . . . . . . . . . .
xii
1.3
Azterketarako urratsak . . . . . . . . . . . . . . . . . . . . . . . xiii
1.4
Beste zenbait metodo . . . . . . . . . . . . . . . . . . . . . . . .
xv
1.4.1
Simulazioa . . . . . . . . . . . . . . . . . . . . . . . . .
xv
1.4.2
Metodo heuristikoak . . . . . . . . . . . . . . . . . . . . xvii
1.5
Optimizazioaren erabilera praktikoak . . . . . . . . . . . . . . . . xix
1.5.1
Inbentario-problemak . . . . . . . . . . . . . . . . . . . . xix
1.5.2
Mantenu-ordezkatzearen problemak . . . . . . . . . . . .
xx
1.5.3
Itxarote-problemak . . . . . . . . . . . . . . . . . . . . .
xx
1.5.4
Antolaketa-problemak . . . . . . . . . . . . . . . . . . . xxi
1.5.5
Baliabide-esleipenaren problema . . . . . . . . . . . . . . xxii
2
EREDU LINEALAK ETA SOLUZIO GRAFIKOA
xxiii
2.1
Sarrera . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xxiii
2.2
Eredu lineala . . . . . . . . . . . . . . . . . . . . . . . . . . . . xxiii
2.3
Eredu lineala idazteko erak . . . . . . . . . . . . . . . . . . . . . xxiv
2.4
Ereduen eraiketa
. . . . . . . . . . . . . . . . . . . . . . . . . . xxvi
2.5
Programazio linealaren suposaketak . . . . . . . . . . . . . . . . xxxiv
2.6
Ebazpen graﬁkoa . . . . . . . . . . . . . . . . . . . . . . . . . . xxxv
2.7
Ariketak . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
xl
3
ALJEBRA LINEALA ETA MULTZO GANBILAK
xlv
3.1
Aljebra Lineala . . . . . . . . . . . . . . . . . . . . . . . . . . . xlv
3.1.1
Bektoreak . . . . . . . . . . . . . . . . . . . . . . . . . . xlv
v

vi
GAIEN AURKIBIDEA
3.1.2
Bektore-eragiketak . . . . . . . . . . . . . . . . . . . . . xlv
3.1.3
Menpekotasun eta independentzia lineala. Oinarria . . . . xlvii
3.1.4
Matrizeak . . . . . . . . . . . . . . . . . . . . . . . . . .
lii
3.1.5
Ekuazio linealen sistemak. Soluzioak. . . . . . . . . . . .
liv
3.2
Multzo ganbilak . . . . . . . . . . . . . . . . . . . . . . . . . . . lvii
3.2.1
Zuzen baten ekuazioa . . . . . . . . . . . . . . . . . . . . lvii
3.2.2
Segmentuak . . . . . . . . . . . . . . . . . . . . . . . . . lvii
3.2.3
Hiperplanoak eta erdiespazioak . . . . . . . . . . . . . . lvii
3.2.4
Multzo ganbilak: deﬁnizioak . . . . . . . . . . . . . . . . lviii
3.2.5
Multzo ganbilak: teoremak . . . . . . . . . . . . . . . . .
lix
3.2.6
Multzo ganbil deﬁnizioaren orokorpena . . . . . . . . . .
lx
3.3
Programazio linealerako erabilera
. . . . . . . . . . . . . . . . .
lx
3.3.1
Adibidea . . . . . . . . . . . . . . . . . . . . . . . . . .
lx
3.3.2
Eredu linealerako ondorioak . . . . . . . . . . . . . . . .
lxi
3.4
Ariketak . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
lxi
4
PROGRAMAZIO LINEALA. SIMPLEX METODOA
lxiii
4.1
Helburuaren eta murrizketen aldaketa
. . . . . . . . . . . . . . . lxiv
4.2
Idazkera estandarrerako bihurketa . . . . . . . . . . . . . . . . . lxvi
4.3
Soluzioak. Oinarrizko deﬁnizioak . . . . . . . . . . . . . . . . . lxviii
4.4
Oinarrizko teoremak
. . . . . . . . . . . . . . . . . . . . . . . . lxxi
4.5
Simplex metodoa . . . . . . . . . . . . . . . . . . . . . . . . . . lxxviii
4.5.1
Deﬁnizioak, idazkerak eta teoremak . . . . . . . . . . . . lxxix
4.5.2
Soluzio optimo bornegabeak . . . . . . . . . . . . . . . . xci
4.5.3
Soluzio optimo anizkoitzak . . . . . . . . . . . . . . . . . xciv
4.5.4
Hasierako oinarria . . . . . . . . . . . . . . . . . . . . . xcvii
4.5.5
Simplex metodoaren taula . . . . . . . . . . . . . . . . . ciii
4.6
Simplex algoritmoa . . . . . . . . . . . . . . . . . . . . . . . . .
cv
4.7
Zigortze-metodoa . . . . . . . . . . . . . . . . . . . . . . . . . . cxi
4.8
Bi faseetako metodoa . . . . . . . . . . . . . . . . . . . . . . . . cxvii
4.9
Simplex berrikusiaren metodoa . . . . . . . . . . . . . . . . . . . cxxi
4.10 Zenbait ohar . . . . . . . . . . . . . . . . . . . . . . . . . . . . . cxxvi
4.11 Ariketak . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . cxxxii
5
DUALTASUNA
cxxxvii
5.1
Sarrera adibidea
. . . . . . . . . . . . . . . . . . . . . . . . . . cxxxvii
5.2
Problema duala . . . . . . . . . . . . . . . . . . . . . . . . . . . cxxxix
5.2.1
Deﬁnizioak . . . . . . . . . . . . . . . . . . . . . . . . . cxxxix

GAIEN AURKIBIDEA
vii
5.2.2
Primal-dual arteko erlazioa . . . . . . . . . . . . . . . . . cxli
5.2.3
Eredu primalaren eta dagokion dualaren osagaien azalpena cxliii
5.2.4
Dualtasuna: kasu orokorra . . . . . . . . . . . . . . . . . cxliii
5.3
Dualtasunari buruzko teoremak . . . . . . . . . . . . . . . . . . . cxlvii
5.4
Soluzio dual optimoa taulan
. . . . . . . . . . . . . . . . . . . . clvii
5.5
Dualtasunaren interpretazio ekonomikoa . . . . . . . . . . . . . . clxi
5.5.1
Itzal-prezioak . . . . . . . . . . . . . . . . . . . . . . . . clxii
5.5.2
Aldagai primalen kostu ekonomikoa . . . . . . . . . . . . clxvi
5.5.3
Simplex metodoaren interpretazioa
. . . . . . . . . . . . clxvii
5.6
Simplex dual metodoa
. . . . . . . . . . . . . . . . . . . . . . . clxvii
5.6.1
Simplex dual metodoaren urratsak . . . . . . . . . . . . . clxix
5.7
Murrizketa artiﬁzialaren metodoa . . . . . . . . . . . . . . . . . . clxxii
5.8
Ariketak . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . clxxix
6
SENTIKORTASUN-ANALISIA
clxxxiii
6.1
Aldaketa diskretuak . . . . . . . . . . . . . . . . . . . . . . . . . clxxxiii
6.1.1
b bektorearen aldaketak . . . . . . . . . . . . . . . . . . clxxxvii
6.1.2
c bektorean gertatutako aldaketak . . . . . . . . . . . . . cxc
6.1.3
aj bektorearen aldaketa j oinarrikoa ez denean . . . . . . cxciii
6.1.4
Aldagai berriak gehitzea . . . . . . . . . . . . . . . . . . cxcvi
6.1.5
Murrizketa berriak gehitzea
. . . . . . . . . . . . . . . . cxcviii
6.2
Programazio parametrikoa . . . . . . . . . . . . . . . . . . . . . cci
6.2.1
Prezio-bektorean gertatutako aldaketa jarraiak . . . . . . . cci
6.2.2
Baliabide-bektorean gertatutako aldaketa jarraiak . . . . . ccviii
6.3
Ariketak . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ccxiv
7
GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
ccxix
7.1
Garraio-problema . . . . . . . . . . . . . . . . . . . . . . . . . . ccxix
7.1.1
Garraio-problemarako matrize-idazkera . . . . . . . . . . ccxxiii
7.1.2
Garraio-ereduaren ebazpidea . . . . . . . . . . . . . . . . ccxxiv
7.1.3
Hasierako soluzio baten kalkulua
. . . . . . . . . . . . . ccxxvii
7.1.4
Oinarriko soluzio bideragarri baten hobekuntza . . . . . . ccxxxiv
7.1.5
Garraio-problemarako algoritmoa . . . . . . . . . . . . . ccxxxix
7.1.6
Soluzio endekatua . . . . . . . . . . . . . . . . . . . . . ccxlvii
7.2
Esleipen-problema . . . . . . . . . . . . . . . . . . . . . . . . . ccl
7.2.1
Esleipen-metodoa: Metodo hungariarra. . . . . . . . . . . ccliv
7.2.2
Maximizatze-problemak . . . . . . . . . . . . . . . . . . cclix
7.2.3
Aukerazko optimoak . . . . . . . . . . . . . . . . . . . . cclxi

viii
GAIEN AURKIBIDEA
7.3
Erabilpen praktikoak . . . . . . . . . . . . . . . . . . . . . . . . cclxiii
7.3.1
Ekoizpen-problema bat . . . . . . . . . . . . . . . . . . . cclxiii
7.3.2
Maximizatze-problema bat . . . . . . . . . . . . . . . . . cclxiv
7.3.3
Ordutegien esleipena . . . . . . . . . . . . . . . . . . . . cclxv
7.4
Ariketak . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . cclxvi
8
PAKETEAK
cclxxi
8.1
Sarrera . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . cclxxi
8.1.1
Nahasketen problema . . . . . . . . . . . . . . . . . . . . cclxxi
8.1.2
Jan-neurriaren problema . . . . . . . . . . . . . . . . . . cclxxii
8.1.3
Garraio-problema bat . . . . . . . . . . . . . . . . . . . . cclxxii
8.1.4
Esleipen-problema bat . . . . . . . . . . . . . . . . . . . cclxxiii
8.2
QSB+ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . cclxxiv
8.3
LINDO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . cclxxix
8.3.1
Sarrera . . . . . . . . . . . . . . . . . . . . . . . . . . . cclxxix
8.3.2
Sentikortasun-analisia . . . . . . . . . . . . . . . . . . . cclxxxix

Kapitulua 1
OPTIMIZAZIOAREN TEORIA
1.1
Sarrera
Optimizazio-teorian zenbait aukera posibleren artean optimoa hautatzearen prob-
lema aztertzen da. Normalki, aukera posibleen multzoa murriztua izaten da eta
multzo murriztu horretatik hautatu beharko du optimoa erabakitzaileak.
Aukera optimoa hautatu behar dela diogunean inplizituki zera esaten ari gara:
aukera posible horiek kuantitatiboki neurtuak izan daitezkeela neurri irizpideren
bati jarraituz eta erabakitzaileak aukera horien artetik optimoa hautatu ahal izango
duela. Horretarako, optimizazio-teoriak ebatzi beharreko problema zehaztu eta
soluzio hoberenak aurkitzeko metodoak eraikitzen ditu.
Optimizazio-problema bat aztertzean ondokoak kontutan izan behar dira:
• Problemaren aukera posibleak deﬁnitzen dituen murrizketa-multzoa identi-
ﬁkatu behar da.
• Aukerak kuantitatiboki ebaluatuko dituen irizpidea behar da.
• Soluzio optimoa aurkitzeko metodoa behar da.
Optimizazio-problema bat ebazterakoan, aurreko hiru puntuek garrantzi berbera
dute. Hala ere, datozen gaietan soluzio-algoritmoak aztertuko ditugu gehienbat.
Soluzio-algoritmoak eraikitzeari programazio matematikoa deritzo.
Optimizazio-problema baten ebazpidean bi urrats nagusi bereiz daitezke:
• Lehen urratsean problema planteatu eta berau adieraziko duen eredua eraik-
itzen da, hau da, aukera-multzoa eta neurri-irizpidea zehazten dira.
ix

x
KAPITULUA 1. OPTIMIZAZIOAREN TEORIA
• Bigarren urratsean soluzio-algoritmoren bat erabiliz problemaren soluzioa
kalkulatzen da.
Soluzio-algoritmo horiek lehen urratsean eraikitako eredua ebazteko erabiltzen
dira, eta lortutako soluzioa soluzio izango da eredu horrentzat. Soluzioa proble-
ma errealerako soluzio izan dadin eredua ondo eraikia egotea eta benetan eskuar-
tean daukagun problema erreala adieraztea behar-beharrezkoa izango da. Hori
dela eta, problemarako soluzio on bat lortzeko ondokoak egin beharko dira:
 ered-
ua eraikitzeko datuak lortu, eredurako soluzioa kalkulatu, soluzioa problemarako
egiaztatu eta praktikan horren arabera erabakiak hartu.
Praktikan asko dira planteamendu hau erabiliz ebatz daitezkeen problemak:
ekoizpen-problemak, itxarote-problemak, esleipen-problemak, antolaketa-
problemak,
etab.
Ikus dezagun adibide baten bidez optimizazio-teoriak zer motatako problemak
aztertzen dituen.
1.1.1
Ekoizpen-problema bat
Ekoizpen-
problema honetan errealitatean ager daitekeen zenbait aspektu kontsider-
atuko dugu.
Lantegi batean
n produktu mota desberdin ekoizten da. Ekoizpena modurik
hoberenean antolatu ahal izateko ekoizpen-sailak eta salmenta-
sailak, beste zen-
baiten artean, ekoizpenari eta salmentari buruz dituzten datuak kontutan izaten
dira.
Ekoizpen-sailak badaki produktu horietariko bakoitza ekoizteko zein lehen-
gai erabiltzen den. Jakina da ekoizpena mugatua dela, lehengaiak erosteko dirua
mugatua delako, lantegiaren biltegiratze-
ahalmena ere mugatua delako, eta lante-
giaren ekoizpen-denbora ere mugatua delako. Murrizketa guzti horien arabera
produktu-unitate gehiago edo gutxiago ekoiztuko da lantegian.
Hala ere, ez dira horiek lantegiaren ekoizpena mugatzen duten arrazoi bakar-
rak. Salmenta-sailak publizitatean inbertitzearen ondorioz produktua saltzen du
eta horren ondorioz ezagutzen du zein den bezeroen eskaria, produktu-unitateko
salneurria eta produktu-unitateko garraio-
kostua. Guzti horiek ere eragiten dute
produktuaren ekoizpena antolatzeko garaian.
Azkenean, lantegiaren ekoizpen-maila hoberena zein den jakin nahi da, lortu-
tako irabaziak ahalik eta handienak, edo gastuak ahalik eta txikienak izan daitezen.
Ekoizpen-maila optimoa lortzeko aukera desberdinak daude, eta irizpideren bati
jarraituz aukera horiek ebaluatuko ditugu. Gure adibiderako irizpide egokia izan

1.2. EREDUEN ERABILPENA
xi
liteke ekoizpen-maila bakoitzaren ondorioz lor litekeen irabazia neurtzea. Beti
ere, ekoizpen-maila optimoa lortzeko ekoizpen-prozesuaren murrizketa guztiak
kontutan izan beharko ditugu: baliabideak (ordu-
kopurua, lehengaiak etab.), lante-
giaren biltegiratze-ahalmena, bezeroen eskariak, eragiketen kostuak 
(garraioa etab.)
. . .
1.2
Ereduen erabilpena
Optimizazio-
teoriaren erabilpen praktiko gehienetan eredu matematikoa erabiltzen
da problema erreala adierazteko. Eredu matematikoa, helburu-funtzio batez eta
zenbait murrizketaz osaturik dago. Helburu-
funtzioak aukerak kuantitatiboki neurtzen
ditu eta berau da optimizatu behar dena. Murrizketek, aldiz, problemaren aukerak
edo erabaki-aldagaiak deﬁnitzen dituzte.
Oro har, errealitateko sistema bat adieraziko duen eredua eraikitzeko jarraitu
beharreko araurik ez da existitzen. Horregatik, lehen urrats hori zientzia baino
artea dela esan ohi da.
Eredu matematikoa sistema errealaren sinpliﬁkazioa da beti eta erabaki-
aldagaiak,
murrizketak, parametroak eta elkarren arteko erlazioak zehazten dira bertan.
Soluzioak kalkulatzerakoan ereduaren erabilera abantailatsua izan dadin, ere-
dua sinplea izatea komeni da. Sistema erreala murrizketa askoren menpe egon
badaiteke ere, sistemaren jokaera baldintzatzen dutenak zein diren bereiztu be-
harko da, beraiek izango baitira ereduan kontutan izan beharko ditugunak. Ered-
ua zenbat eta sinpleagoa izan, orduan eta erabilgarriagoa gertatuko da. Hala ere,
gehiegi sinpliﬁkatu nahi izateagatik, behar baino murrizketa gutxiago edo erabaki-
aldagai gutxiago kontutan izango bagenu, lortuko genukeen ereduak ez luke behar
bezala sistema erreala adieraziko, eta horren ondorioz, eredu matematikoa ebatziz
lortutako soluzioa ez litzateke sistema errealaren soluzio izango. Zenbait kasutan
metodo bat baino gehiago erabiltzeko aukera izango dugu eredua ebazteko. Beste
zenbaitetan aldiz, eta eredua konplexuegia izateagatik, soluzio-metodo zehatzak
erabili ordez metodo heuristikoak erabili beharko ditugu.
Errealitatean bada oso sarri agertzen den eta optimizazio-teoriako metodoen
bidez ebatzia izan daitekeen zenbait problema mota. Sakonki aztertuak izan on-
doren, problema adierazteko eredu ﬁnkoak eta soluzioa lortzeko teknika bereziak
eraiki dira. Adibide gisa, hor daude programazio lineala, osoa, ez-
lineala, sare-
teoria, itxarote-iladak etab.
Ereduaren eraikuntzak duen garrantziaz jabetzeko adibide bat aztertuko dugu.

xii
KAPITULUA 1. OPTIMIZAZIOAREN TEORIA
1.2.1
Garraio-problema bat
Lantegi batek produktu baten ekoizpenerako bi ekoizpen-zentro ditu bi hiri des-
berdinetan:
H1 eta H2. Behin produktuaren ekoizte-prozesua amaitu denean, B1,
B2 eta B3 biltegietara garraiatuko dira produktuak. H1 hirian asteko 30 produktu-
unitate ekoizten da eta 20 unitate
H2 hirian. Biltegien asteko eskariak 15, 10 eta
25 produktu-unitatekoak dira, hurrenez hurren.
Honako taulan, hirietatik biltegietara produktu-
unitate bat garraiatzeak eragiten
dituen kostuak datoz:
B1 B2 B3
H1
7
4
6
H2
9
5
3
Problema honetan lortu nahi dena zera da: hirietatik biltegietarako asteko gar-
raioak antolatu nahi dira ahalik eta kosturik txikienean, beti ere, hirietan ekoiztu-
tako produktu-unitateekin biltegien eskariak beteko direlarik.
Garraio-sistema hau adieraziko duen eredu matematikoa eraikitzeko honako
erabaki-aldagaiak deﬁnituko ditugu:
• xij : Hi(i = 1, 2) hiritik Bj(j = 1, 2, 3) biltegira garraiatzen den produk-
tuaren unitate-kopurua.
Problemaren helburua garraioa ahalik eta kosturik txikienean antolatzea denez,
optimizatu beharreko helburu-funtzioa ondokoa izango da:
min z = 7x11 + 4x12 + 6x13 + 9x21 + 5x22 + 3x23
Hiri bakoitzetik biltegietara garraiatzen den unitate-kopurua mugatua dago.
x11 + x12 + x13 ≤ 30
x21 + x22 + x23 ≤ 20
B1, B2 eta B3 biltegien asteko eskariak bete egin behar dira:
x11 + x21 ≥ 15
x12 + x22 ≥ 10
x13 + x23 ≥ 25

1.3. AZTERKETARAKO URRATSAK
xiii
Kontutan izan beharko da baita, erabaki-
aldagaiak, hau da, garraiatutako produk-
tuen unitate-kopuruak, ezin daitezkeela negatiboak izan.
xij ≥ 0 i = 1, 2 j = 1, 2, 3
Guztiarekin, garraio-sistema hori adierazten duen eredu matematikoa honakoa da:
min z = 7x11 + 4x12 + 6x13 + 9x21 + 5x22 + 3x23
ondoko murrizketen menpe
x11 + x12 + x13 ≤ 30
x21 + x22 + x23 ≤ 20
x11 + x21 ≥ 15
x12 + x22 ≥ 10
x13 + x23 ≥ 25
xij ≥ 0 i = 1, 2 j = 1, 2, 3
Eredu matematikoa eraikitzeko erabilitako datuak ﬁdagarriak ez badira, ered-
ua ez da baliogarria izango gure problema ebazteko. Aurreko adibidean, datuak
ziurrak direla suposatzen ari gara. Hau hala ez balitz, sistema ebaztean lortutako
soluzioak ereduaren soluzio izango lirateke, baina ez sistema errealarenak. Prak-
tikan, datu zehatzak lortzea problemaren ebazpenaren urratsik zailenetarikoa izan
daiteke, eta eginbehar horretan laguntzeko ez dago inolako erregelarik.
Zenbait kasutan, datuak probabilitatez beteko direla kontutan izatea garrantzit-
sua da, horrelakoetan eredu determinista eraiki ordez eredu probabilistikoa eraiki
beharko dugulako.
1.3
Azterketarako urratsak
1. Problemaren formulaketa.
Problema praktikoetan askotan gertatzen da ebatzi behar den problema ez
dela hasieran sakonki ezagutzen. Problemaren formulaketa zehatza egin
ahal izateko jakin behar da zein diren sisteman eragiten duten eragile gar-
rantzitsuenak.
Urrats honetan ﬁnkatu beharko da lortu nahi den helburua, zein diren horre-
tarako aukera posible desberdinak eta zein diren problemaren murrizketak.

xiv
KAPITULUA 1. OPTIMIZAZIOAREN TEORIA
2. Eredu matematikoaren eraikuntza.
Behin problema zehazki formulatua izan denean, sistema hori adieraziko
duen eredu matematikoa eraiki behar da. Ereduak problema erreala adier-
azi behar du modu sinpliﬁkatuan. Sinpleagoa izate hori sistema erreala
aztertzeko abantaila handia da, sistemaren ulerpena eta erabilera errazten
dituelako. Eragozpenak ere baditu hala ere, eredua sistema errealaren ideialpe-
na izateagatik, suposaketak eta hurbilketak egin beharko direlako, eta horien
ondorioz, eraikitako eredua sistema errealaren adierazpen baliogarri ez iza-
tea gerta daitekeelako.
Eredua idazteko, sistemaren funtzionamendua baldintzatzen duten aldaga-
iak identiﬁkatu behar dira. Aldagai horiek erabiliz helburua neurtzen edo
optimizatzen duen funtzioa eta soluzioen espazioa deﬁnitzen duten erlazioak
idazten dira. Guztiarekin, eredua idatzia izango dugu.
Eredu horren egitura ezaguna izan liteke eta ondorioz baliteke soluzio-metodoa
ezaguna izatea. Hau hala izatekotan erraza gertatuko da soluzioa lortzea.
Alderantziz, eredua konplexuegia bada, soluzio zehatzak lortzeko metodo
bat eraikitzea zaila izango da; horrelakoetan, soluzio hurbilak emango di-
tuzten teknikak erabiltzea komenigarria izango da.
3. Ereduaren ebazpidea.
Aurreko urratsean aipatu dugunez, zenbait problema praktiko aztertua izan
da eta problema horiek adierazten dituzten ereduak ebazteko metodoak eza-
gunak dira. Optimizazio-teorian ezagunak diren metodoen artean progra-
mazio lineala, programazio osoa, programazio dinamikoa, iladen teoria etab.
aurkitzen dira. Metodo horiek, oro har, iteratiboak dira eta problemen soluzio
optimoa kalkulatzen dute.
Behin eredua ebatzia izan denean, lortutako soluzio optimoaren azterke-
ta egitea interesgarria, eta askotan beharrezkoa, izaten da. Azterketa honi,
analisi postoptimoa edo sentikortasun-analisia deritzo. Ereduaren parametroren
bat aldatuko balitz, aldaketa horrek soluzioan izango lukeen eragina ezagutzea
interesa lekiguke. Azterketa hori beharrezko gerta daiteke ereduaren parametroren
bat aldatzen denean, edo datu estimatuak erabili direlako, estimazioa oso
zehatza izan ez delarik, edo aldaketarik gertatu ez bada ere, gerta litezkeen
aldaketek soluzioan izango luketen eragina ezagutzea interesa lekigukee-
lako, besterik gabe.
4. Ereduaren eta soluzioaren egiaztapena.

1.4. BESTE ZENBAIT METODO
xv
Sistema adierazteko eraikitako eredua egokia den ala ez jakiteko, aurretik
dauzkagun datuak erabiliz funtzionamendua egiazta daiteke. Eredua bali-
ogarria izango da baldintza ezagunetan emaitza onak sortzen baditu. Egiaz-
tapena pasatako datuekin egiteak desabantailak baditu; datu berberak baldin
badira eredua eraikitzeko eta eredua egiaztatzeko erabiltzen direnak, egiaz-
tapena oso esanguratsua ez izatea gerta liteke.
Hala ere, egiaztapen hori egitea ez da beti posible izaten, zenbaitetan au-
rretik ez delako daturik izaten. Horrelakoetan egin eredua ebaztearen on-
dorioz kalkulatutako soluzioa erabil daiteke problema errealean erabaki-
ak hartzeko, eta errealitatean lortutako datuak geroago ereduaren jokaera
ebaluatzeko erabiliak izango dira.
5. Soluzioaren erabilpena praktikan.
Praktikan erabakiak hartzeko unean oso lagungarri gertatzen da ereduaren
bitartez kalkulatutako soluzioa eskuartean izatea. Eraikitako ereduak eta
soluzioa lortzeko erabilitako metodoak emaitza ona sortzen duten egiazta
daiteke azken urrats honetan. Kalkulatutako emaitza ona ez dela egiaztatuz
gero, planteatutako eredua berrikusi beharko da.
1.4
Beste zenbait metodo
Ereduak eraikitzearen teoria asko garatu bada ere, zenbait sistema erreal adier-
azteko aipatu ditugun eredu matematikoak erabiltzea oso zaila gertatzen da oraindik,
bai sistemaren aldagai-kopurua edota murrizketa-kopurua handiegia delako, bai
soluzioa lortzeko teknika matematikorik ez dagoelako.
Arazo horiek direla eta, eredu matematikoa erabiltzeari komenigarri ez derit-
zogunean beste teknikaren bat erabili beharko da, halanola simulazioa eta metodo
heuristikoak. Sarreraren eta irteeraren arteko erlazioa esplizituki adierazi beharrik
ez da izaten simulazio ereduetan, eta hori abantaila handia da. Bestalde, metodo
heuristikoak erregelatan oinarritzen direnez, algoritmo zehatzak baino errazagoak
dira askotan.
1.4.1
Simulazioa
Simulazio-eredu batek sistema errealaren portaera imitatzen du eta, saiakuntza
estatistikotzat hartu behar da.

xvi
KAPITULUA 1. OPTIMIZAZIOAREN TEORIA
Sistema errealak adierazteko eredu matematikoak erabiltzean sistema sinpli-
ﬁkatu egin behar izaten dela aipatu dugu; ez ordea simulazioa erabiliz gero. Baina,
simulazioaren bidez lortzen diren soluzioak soluzio on baldin badira ere, ez dira
optimo izaten, eta gehienetan, soluzio on horiek lortzeak kalkulu asko eskatzen
du.
Simulazio adibide bat
Demagun joko batean parte hartzeko aukera daukagula. Jokoa txanpona bat-
en jaurtiketan datza. Jakina denez, txanpona jaurtiki ondoren aurpegia edo gu-
rutzea agertuko da. Joko honetan txanpona behin eta berriz botako dugu ateratako
aurpegi-kopuruaren eta gurutze-kopuruaren arteko aldea 3-koa den arte. Behin 3-
ko alde hori lortu denean 8.000 pta irabazten du jokalariak, baina hau gertatzen ez
den bitartean txanpona jaurtikitzen duen bakoitzeko 1.000 pta ordaindu beharko
du.
Jokoaren arauak horiek izanik, jokalariak dirua irabaziko du helburua lortzeko
8 jaurtiketa baino gutxiago behar izaten duenetan. Bestelako kasuetan garbi dago
jokalariak dirua galduko duela. Joko honetan parte hartzea errentagarri gertatuko
zaion jakin nahi du jokalariak.
Jokoan gertatzen diren diru irabazi eta galerak garbiago ikusteko behin eta
berriz txanponarekin bere kasa jokoan jardutea erabakitzen du, gero saio horien
arabera batezbesteko irabazia kalkulatzeko.
Demagun zenbait jokaldi egiten duela eta ondoko emaitzak lortzen dituela:
XAAXAXAXXXXXAAAAAXXXX
XXAXAAXXXAXXAXXXXAXAX
XXXXAXXXXXXAXAXXAXAAA
AXAXAAXAAAAXAAAAXAXAX
AAXXXXXAAXAXAAA . . .
Ondokoak dira lortu diren emaitzak. Lehen jokaldian, txanpona 11 aldiz jau-
rtiki ondoren jokaldia bukatzen da 
(7 gurutze eta 4 aurpegi). 11.000 ordaindu eta
8.000 irabazi direnez, 3.000 galdu dira. Bigarrenean berriz 5 aldiz jaurtiki on-
doren (gurutze 1 eta 4 aurpegi). 5.000 ordaindu eta 8.000 jasotzeagatik 3.000-
ko
irabazia izan dugu. Jokaldi asko burutu ondoren 
(laginaren tamaina handia izanik)
jokoa irabazteko txanpona batezbesteko zenbat aldiz jaurtiki beharko duen badaki

1.4. BESTE ZENBAIT METODO
xvii
jokalariak. Kontutan izan behar da, laginaren tamaina eta bariantza oso garrantz-
itsuak direla jokoan parte hartzea komeni den ala ez erabakitzeko.
Kasu honetan 13 jokaldi burutu dira eta batezbestekoa honela kalkulatuko
dugu:
11 + 5 + 5 + 9 + 7 + 7 + 5 + 3 + 17 + 5 + 5 + 11 + 9
13
= 7.6
Normalki, laginak ez dira txanpona jaurtikiz lortzen, ausazko zenbakiez os-
aturiko zerrendak sortuaz baizik. Zerrenda horietatik abiatuz eta probabilitate-
banaketak erabiliz ausazko azterketak lortuko dira.
Iladen simulazioa
Demagun bezeroek zerbitzuren baten zain ilada bat osatzen dutela. Honelakoetan
bi motatako kostuak sortzen dira: eragite-kostua, zeina zerbitzari-kopuruarekin
batera handitzen den, eta itxarote-kostua, zerbitzari-
kopuruak behera egitean han-
ditzen dena. Kostu hauek zerbitzari-
kopuruaren arabera aldatzeaz gain zerbitzatze-
denboraren eta bezeroen sarritasunaren arabera ere aldatzen dira.
Problemak eskatzen duena zera da: kostuak minimo izan daitezen izan be-
harko dugun zerbitzari-kopurua zein den aurkitzea. Kopuru hori zein izan daite-
keen ezagutzeko sistemaren funtzionamendua simulatuko duen sistema eraiki deza-
kegu, zerbitzari-
kopuru desberdinekin zer nolako kostuak sortzen diren aztertu eta
honela batezbesteko kostuak kalkulatzeko. Simulazioari esker lorturiko datuek
beharrezko erabakiak hartzen lagunduko digute.
1.4.2
Metodo heuristikoak
Oro har, metodo heuristikoak ere iteratiboak dira. Problemarako soluzioa ematen
dute, soluzio hori soluzio optimotik zenbateraino gertu dagoen jakiterik ez bada-
go ere. Hala ere, metodo hauek badituzte abantailak, kalkulu gutxiago eskatzen
baitute soluzioa lortzeko eta ulerterrazagoak diren erregelatan oinarritzen baitira.
Metodo heuristikoak soluzio hurbilak kalkulatzeko erabiltzeaz gain, optimizazio-
algoritmo zehatzetan erabil daitezke konberjentzia azkartzeko asmoz.
Adibidea:
Demagun bidaiari batek lau hiri bisitatu behar dituela; egunean zehar lau hiri-
etatik pasa behar du behin eta bakarrik behin, iturburu hirira itzuli baino lehen.

xviii
KAPITULUA 1. OPTIMIZAZIOAREN TEORIA
Kilometro-
kopuru txikieneko ibilbidea burutu nahi du bidaiariak, eta horretarako,
hiriak zein ordenatan bisitatu beharko dituen jakin nahi du. Hirien arteko dis-
tantziak taulakoak dira:
1
2
3
4
1 − 6
3
8
2 6 −
4
7
3 3
4
− 10
4 8
7 10 −
Diagonaleko distantziak zero badira ere, zero horiek ez dira esleituak izango.
Soluzioa kalkulatzeko metodo heuristiko erraz bat honakoa da: 1. hirian has-
ten dela emanik, 3. hirira abiatuko da, bera baita gertuen gelditzen zaiona. On-
doren, oraindik bisitatuak izan ez diren hirien artetik gertuen dagoenera joango
da, 2. hirira alegia. 2. hiritik gertuen dagoen bisitatu gabeko hirira:
 4. hirira.
Azkenik, 1. hirira itzuliko da. Ibilitako kilometro-kopurua:
3 + 7 + 4 + 8 = 22
Metodo horren izena aldameneko gertuenaren metodoa da eta problemarako
soluzio bat kalkulatzen du oso modu errazean. Hala ere, soluzio hori soluzio
optimotik zein gertu dagoen jakiteko modurik ez dago.
Adibidea:
Demagun xii.orrian azaldutako garraio-problemaren moduko bat daukagula,
eta dagozkion kostu-matrizea eta eskari eta eskaintzari dagozkion murrizketak
ezagunak direla. Soluzio bat kalkulatzeko honako metodo heuristikoa erabil daiteke.
H1 hiritik B1 biltegira ahalik eta produktuen unitate-kopuru handiena bidaltzen
da. Ondoren gauza bera egiten da
B2 biltegira ere, eta H1 hiriaren eskaintza
oraindik bukatu ez bada
B3 biltegiaren eskaria zerbitzatuko da. Modu berean
jokatzen da
H2 hiriaren eskaintzarekin. Honako soluzioa lortuko genuke.
B1 B2 B3 ESKAINT ZA
H1
15 10
5
30
H2
20
20
ESKARIA
15 10 25

1.5. OPTIMIZAZIOAREN ERABILERA PRAKTIKOAK
xix
Garraio-problemaren soluzioa lortzeko metodo hau erabiltzea ez da oso egokia,
eskariak zerbitzatzeko ez dituelako garraio-kostuak ezertarako kontutan izaten.
Soluzio bat lortzeko metodo heuristiko hobeak badira.
1.5
Optimizazioaren erabilera praktikoak
Modu honetako planteamenduak adibide praktiko askotan erabil daitezke. Gain-
era, horietariko zenbait oso maiz agertzen da eta arreta bereziz aztertuak izan di-
ra. Horri esker, problema horiek identiﬁkatu dira, eta berauek adierazteko eredu
matematikoak eta eredua ebazteko teknikak ﬁnkatu dira. Azter ditzagun hori-
etariko batzuk.
1.5.1
Inbentario-problemak
Inbentarioan produktuen unitate-
kopuruak gordetzen dira. Bezeroen eskariak betet-
zeko erabiltzen da inbentarioa. Eskari horiek denboran zehar bete behar dira.
Mota desberdinetako kostuak aurki ditzakegu inbentario bati lotuak. Inben-
tarioaren tamainarekin zuzenki proportzionala den kostua, gerora erabiliak izango
diren inbentarioko unitateak biltegiratuak izateak dakarren kostua da, adibidez.
Bestalde, inbentarioko unitateak erosteak edo ekoizteak eragiten duen kostua eta
inbentarioaren urritasun-kostua edo atzerapen-
kostua daude, inbentarioaren tamaina
txikitzean handiagotuko direnak.
Horrelako prozesuetan erabakiak hartu behar dira. Erosi edo ekoiztu behar-
reko unitate-kopurua eta zenbat denbora barru erosi edo ekoiztuak izango diren
zehaztu beharko da.
Bai inbentarioaren igoerak eta baita jaitsierak ere kostu gehigarria suposatzen
dutenez, mantenu minimoa eskatuko duen inbentario-maila zehaztu nahi da.
Prozesu hori determinista izango da eskariak aldez aurretik ezagunak baldin
badira. Aitzitik, eskariak ausaz sortzen badira, prozesua bera ere ausazkoa izan-
go da; inbentario-mailaren mantenua ausazko eskarien funtzioan egongo da une
bakoitzean. Mota horretako problemak ebazteko bada zenbait teknika matem-
atiko, hala nola programazio lineala, programazio dinamikoa eta programazio
koadratikoa.

xx
KAPITULUA 1. OPTIMIZAZIOAREN TEORIA
1.5.2
Mantenu-ordezkatzearen problemak
Zenbait prozesutan erabiltzen den tresneriak ez du betirako iraungo eta noizbe-
hinka tresneria zaharkitua tresneria berriaz ordezkatzea komeni da. Hau gerta
daiteke uneko tresneria ez dabilelako eta arazoa konponezina delako edota tresne-
ria errendimendu gutxikoa delako.
Ordezkatze-problemak bi taldetan bana daitezke, tresneriaren iraupen motaren
arabera:
1. Zenbait tresneri denboran zehar eraginkortasuna galduz doa, bai narriadura-
gatik edo baita eraginkorragoak diren tresneriak merkaturatzen direlako,
tresneri zaharren eraginkortasun erlatiboa jaitsiarazten dutelarik.
2. Beste zenbait tresneri motaren eraginkortasuna, aldiz, konstantea da zeharo
hondatzen diren arte. Hondatze hori edozein unetan gerta daiteke, hon-
datzearen probabilitatea tresneriaren adinarekin batera handitzen bada ere.
Eredua eraikitzeko unean, problema determinista den ala ausazkoa den bereiz-
tu beharko dugu. Hauek dira mantenu-ordezkatzearen problemetan izaten diren
kostuak:
• Mantenu-kostua eta eragite-kostua, tresneriaren aintzinatasunarekin hazten
direnak.
• Tresneriaren balioa, aintzinatasunarekin txikituz doana.
• Tresneri berria erosteak eragindako kostua.
Tresneriaren ordezkaketa egiteko datarik egokiena zehaztean datza problema.
Data horrek tresneria berria erosteak eragindako kostua eta tresneria zaharraren
erabilgarritasun galera eta balio galera orekatuko ditu.
Mantenu-ordezkatzearen problemak bai teknika bereziak erabiliz eta bai pro-
gramazio dinamikoa erabiliz ebatz daitezke.
1.5.3
Itxarote-problemak
Mota honetako problematan, nolabaiteko zerbitzua eskaintzen duen zerbitzaria
dago eta bezeroek eskariak egiten dituzte zerbitzatuak izateko. Eskari horiek guz-
tiak ausaz sortzen dira eta ilada bat edo gehiago osatuko dute zerbitzariaren zain
daudelarik.

1.5. OPTIMIZAZIOAREN ERABILERA PRAKTIKOAK
xxi
Oro har, itxarote-kostuak sortzen dira, bai bezeroaren galerarako (iladan zain
egoteagatik) bai zerbitzariaren galerarako 
(iladan bezeroen eskaririk ez egotea-
gatik).
Itxarote-problemak sailkatzeko honako ezaugarriak izan behar dira kontutan:
1. Bezeroen eskariak lerrokatzeko ilada-kopurua, hau da, zerbitzari-kopurua.
2. Jarraian iristen diren bi eskariren arteko denbora.
3. Zerbitzatze-denbora.
4. Zerbitzatzeko modua: lehentasunezkoa, lehentasunik gabekoa.
5. Zerbitzariek osatutako egitura: seriean, paraleloan, nahasian.
Helburua zera izan daiteke: kostu totala (zerbitzarien eragite-kostua eta beze-
roen itxarote-kostua) minimizatuko duen zerbitzari-kopurua zehaztea. Kopuru
hori zehazteko zenbait kasutan eredu matematikoa eraikitzea posible izango zaigu,
baina beste zenbaitetan simulazioa erabiltzea komenigarria izango da.
1.5.4
Antolaketa-problemak
Burutu beharreko zenbait eginkizun eta bete beharreko zenbait murrizketa izanik,
antolaketa-problematan eginkizun horiek burutzeko ordena optimoa zehaztu behar
da. Adibidez,
n eginkizun burutzeko m makina bagenu, lortu beharreko helburua
eginkizunak makinei esleitzearena izango litzateke, neurriren bat optimizatuko
lukeelarik: makinen langabezi denbora minimo izatearena, eginkizun guztiak bu-
rutzeko beharrezko denbora minimizatzearena etab.
Bi antolaketa-problema berezi jarduera-sareen problema eta bidaiariaren prob-
lema dira.
• Jarduera-sareen problemak, proiektu bat burutzeko beharrezko denbora op-
timoa zehazten du. Honela, ordena ﬁnko batean burutu beharreko jarduera
multzoa izanik, jarduera horietariko bakoitzak iraupen denbora (zehatza
edo ausazkoa) duela jakinda eta jarduera burutzeak nolabaiteko kostua su-
posatzen duela jakinda, jarduera guzti horiek antolatu behar dira. Ohizko
helburuak honakoak izaten dira: kostu total minimoa duen soluzioa lortzea,
iraupen minimoko soluzioa lortzea, egite-probabilitate maximoa duen soluzioa
lortzea etab. Optimizazio-teorian ezagunak diren PERT eta CPM teknikak
erabiltzen dira problema hauek ebazteko.

xxii
KAPITULUA 1. OPTIMIZAZIOAREN TEORIA
• Lehen ikusi dugu, metodo heuristikoen bidezko ebazpidea aztertzerako-
an, bidaiariaren problema. Problema hori eta antolaketa-problemak alder-
atzen baditugu, bidaiariaren problema makina batean
n eginkizun burutzeko
eginkizunak zer nolako ordenatan burutu beharko liratekeen erabakitzea
dela ikusten da. Modu honetako problemak ebazteko programazio lineal
osoa erabil daiteke.
1.5.5
Baliabide-esleipenaren problema
Zenbait jarduera burutu behar denean eta jarduera bakoitza burutzeko baliabide
nahikoa ez dagoenean sortzen da baliabideak esleitzearen problema. Problema
horren helburua urriak diren baliabideak esleitzea da, esleitze horrek eraginkorta-
suna neurtzen duen funtzioa optimizatuko duelarik. Baliabide erabilgarrien kop-
urua ezaguna da, eta baita jarduera bakoitza burutzeak eskatzen duen baliabide-
kopurua eta eragindako kostua ere.
Epealdi baterako egindako baliabide-
esleipenak ez baldin badu geroagoko epealdietan
egingo
diren
baliabide-esleipenen
gain
inolako
eraginik, orduan esleipen-problema estatikoa da. Horrelako problemak ebazteko
programazio lineala erabil daiteke. Aitzitik, epealdi batean egindako baliabide-
esleipenak hurrengo epealdiko baliabide-
esleipenaren gain eragina balu, esleipen-
problema dinamikoa izango litzateke, berau ebazteko programazio dinamikoa er-
abili beharko litzatekeelarik.
Baliabide-
esleipenaren problemak asko dira praktikan, hala nola langileak makinei
esleitzearena, produktu baten garraioa iturburu-puntuetatik helburu-
puntuetara an-
tolatzearena etab.
Azaldutako erabilpenez gain bada praktikan ager daitekeen beste zenbait prob-
lema ere; hala ere, ezagunenak dira aztertuenak izan direnak eta horientzako ere-
duak eta soluzioak kalkulatzeko metodoak ezagunak dira.
Normalki, sistema errealetan ez da aurrean aztertutako problema horietariko
bat bakarra agertzen. Ekoizte-prozesu batean adibidez, baliabide-esleipenaren
problema ager daiteke, edota inbentario-problema, itxarote-
problema, antolaketa-
problema, etab. Problema guzti horiek elkarren segidan ebatz daitezke, edo prob-
lema horietariko bat baino gehiago aintzakotzat hartuko duen eredua eraikitzen
saia gaitezke.

Kapitulua 2
EREDU LINEALAK ETA
SOLUZIO GRAFIKOA
2.1
Sarrera
Laburki esanda, programazio linealak mugatuta dauden baliabideak lehian di-
harduten jardueren artean esleitzearen arazoa aztertzen du, esleipena optimoa ger-
ta dadin. Jarduera horiek burutuak izan daitezen, urriak diren baliabideak lortzeko
lehian dabiltza eta jarduera horien maila optimoa aukeratzean datza problema.
Problema orokor hau egoera desberdin askotan aurki daiteke praktikan: behar-
rei baliabideak esleitzerakoan, ekoizpenaren plangintzan, ekoiztutako produktuak
iturburuetatik helburuetara garraiatzean etab.
Programazio linealak problema deskribatzeko eredu matematikoa erabiltzen
du. Lineal adjektiboak zera adierazten du: eredu matematikoko funtzio guz-
tiak, bai murrizketak eta bai helburu-funtzioa, linealak direla. Behin problema
ebazteko eredu matematikoa eraikia izan denean soluzioa lortzeko oso eraginko-
rra den prozedura erabiliko dugu; SIMPLEX metodoa hain zuzen ere. Metodo
hau oso erabilgarria gertatzen da egoera asko planteatu daitekeelako eredu lineala
erabiliaz; optimizazioan beste zenbait arlotan ere erabil daiteke gainera.
2.2
Eredu lineala
Deﬁnizioa 2.2.1 Eredu lineala esaten zaio ondokoa optimizatzen (maximizatzen
edo minimizatzen) duenari:
z = c
T x
(2.1)
xxiii

xxiv
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
ondoko murrizketak betetzen dituelarik:
Ax
≤
> b
(2.2)
x
≥ 0
(2.3)
Optimizatu behar den funtzioak (2.1) helburu-funtzio izena du, 
(2.2) desberdintzek
murrizketa eta (2.3) ekuazioek ez-negatibotasun murrizketa.
Planteatu berri dugun ereduan agertzen diren elementuak ondokoak dira:
• x bektorearen n osagaiak erabaki-aldagaiak dira.
• cT bektorea unitateko prezio-bektorea edo kostu-bektorea da. Honek ere n
osagai du.
• Baliabide-bektorea deritzon m osagaidun b bektorea .
• Teknologi koeﬁzienteen matrizea izena duen A matrizea, m lerroz eta n
zutabez osaturik dagoena. A matrizeko
aij elementu bakoitzak (i = 1 . . . m, j =
1 . . . n) j jarduera-unitatea burutua izan dadin behar den i baliabidearen
unitate-kopurua adierazten du.
Eredu linealean, c
T eta b bektoreen eta baita A matrizearen elementuak ezagu-
nak dira. x bektorearen osagaiak, aldiz, ereduaren aldagaiak dira eta beren balioa
zehazteke dago.
2.3
Eredu lineala idazteko erak
Eredu lineala idazteko ondoko hiru idazkerak erabil daitezke.

2.3. EREDU LINEALA IDAZTEKO ERAK
xxv
1.
opt z = (c1, . . . cn)





x1
..
.
xn





ondoko murrizketen menpe








a11
a12 . . . a1n
a21
a22 . . . a2n
..
.
am1 am2 . . . amn
















x1
x2
..
.
xn








≤
=
≥








b1
b2
..
.
bm
















x1
x2
..
.
xn








≥








0
0
..
.
0








2.
opt z = c1x1 + c2x2 + · · · + cnxn
ondoko murrizketen menpe
a11x1 + a12x2 + · · · + a1nxn
≤
> b1
a21x1 + a22x2 + · · · + a2nxn
≤
> b2
..
.
am1x1 + am2x2 + · · · + amnxn
≤
> bm
x1, x2 . . . xn ≥ 0
3.
opt z =
n
j
=1
cjxj

xxvi
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
Taula 2.1: Makinen erabilgarritasunak
Ordu-kopurua
Makina mota
(Asteko makina-ordutan)
A
200
B
100
D
50
ondoko murrizketen menpe
n
j
=1
aijxj
≤
> bi
i = 1 . . . m
xj ≥ 0 , j = 1 . . . n
2.4
Ereduen eraiketa
Programazio linealaren bitartez problema bat aztertu nahi dugunean, problema
adieraziko duen eredua eraikitzea izango da lehenengo egin beharko duguna. Lehen
urrats hau ebazpen osoaren urratsik zailena izan daiteke, eta kontu handiz egin be-
harko dugu ez baitago eredua nola eraiki esango digun erregelarik; ereduak eraikiz
ikasten da ereduak eraikitzen. Azter dezagun zenbait adibide praktiko.
Adibidea. Baliabide-esleipenaren problema
Lantegi batek
P1, P2 eta P3 izendatuko ditugun produktuak ekoizterakoan,
bere ekoizpen-ahalmenari ahalik eta etekin handiena atera nahi dio. Produktu
horiek ekoizteko erabiltzen dituen A,B eta D makinen erabilgarritasuna, hots or-
du erabilgarrien kopurua, mugatuta dago. Horrek lantegiaren ekoizpena mugatu
egiten du. Makinen erabilgarritasunak 2.1 .taulan datoz adieraziak. Era berean,
produktu-unitate bakoitza ekoiztua izan dadin behar den makina bakoitzeko ordu-
kopurua 2.2 .taulan emana dator.

2.4. EREDUEN ERAIKETA
xxvii
Taula 2.2: Beharrezko makinen ordu-kopuruak
P1 P2 P3
A makina
8
2
3
B makina
4
3
-
D makina
2
-
1
Lantegiko salmenta-sailak dioenez,
P1 eta P2 produktuak saltzeko ahalmena,
ekoiztu litekeen kopuru maximoa baino handiagoa da.
P3 produktua berriz, asteko
20 unitate baino gehiago ezin daiteke sal.
Saldutako
P1, P2 eta P3 produktu-unitate bakoitzetik lortutako irabazia 20, 6
eta 8 ptakoa da, hurrenez hurren. Problemak zera eskatzen du: irabazia maximoa
izan dadin lantegiak asteko ekoiztu beharko duen produktu bakoitzeko kopurua
zehazteko eredu lineala formulatzea.
EBAZPIDEA
• Erabaki-aldagaiak. x1, x2, x3. Asteko zenbat P1, P2 eta P3 produktu-unitate
ekoiztu behar den adierazten dute.
• Helburu-funtzioa. max z = 20x1 + 6x2 + 8x3
• Murrizketak.
– Denborari dagozkionak.
8x1 +2x2 +3x3 ≤ 200
4x1 +3x2
≤ 100
2x1
+x3 ≤ 50
– Salmentari dagokiona.
x3 ≤ 20
• Ez-negatibotasun murrizketak. x1, x2, x3 ≥ 0
Ekoiztutako produktu-kopurua ez da inoiz negatiboa izango.

xxviii
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
Taula 2.3: Elikagaien bitaminak eta kostua
BITAMINAK
ELIKAGAI
ELIKAGAIA
(mg/gr)
GRAMOAREN
A
B
D
E
KOSTUA
1
2
1
0
1
14
2
1
2
1
2
9
3
1
0
2
0
13
4
1
2
1
1
16
Adibidea. Jan-neurriaren problema
Elikapen-zentro batean A, B, D eta E bitaminak kopuru egokian izango dituen
jan-neurria prestatzen ari dira. Jan-neurriak ondokoak bete beharko ditu: gutx-
ienez 25 mg A bitamina izan beharko ditu, B bitamina-kopuruak 25 mg eta 30 mg
artean egon beharko du, D bitaminak berriz 22 mg-tik gora agertu beharko du eta
gehienera jota ere 17 mg E bitamina nahi dira.
Bitamina guzti horiek 4 elikagai ezberdinen bidez lor daitezke. 2.3 . taulan
zera dator adierazia: elikagai gramoko dagoen A, B, D eta E bitaminen mg-
kopurua eta elikagai horietariko bakoitzaren gramoko kostua.
Eskatzen dena zera da: kosturik txikieneko jan-neurria aurkitu nahi da, beti
ere beharrezko A, B, D eta E bitamina-kopurua ziurtatuko duelarik.
EBAZPIDEA
• Erabaki-aldagaiak. Erabaki-aldagaiek zera adierazten dute: jan-neurriak
duen elikagai bakoitzeko gramo-kopurua.
xj : j elikagai-kopurua gramotan, j : 1 . . . 4
• Murrizketak. Hauek ondokoa adierazten dute: bitamina mota bakoitzeko
behar den unitate-kopurua.

2.4. EREDUEN ERAIKETA
xxix
2x1 + x2 + x3 + x4 ≥ 25 (A Bitamina)
25 ≤ x1 + 2x2 + 2x4 ≤ 30 (B Bitamina)
x2 + 2x3 + x4 ≥ 22 (D Bitamina)
x1 + 2x2 + x4 ≤ 17 (E Bitamina)
• Helburu-funtzioa. Problemaren helburua ahalik eta kosturik txikieneko jan-
neurria lortzea da.
min z = 14x1 + 9x2 + 13x3 + 16x4
• Ez-negatibotasun murrizketak. x1 . . . x4 ≥ 0
Honela lortu dugun eredua linealak diren funtzioz osatua dagoela ikus dezakegu.
Ondokoa beteko duten
x1, x2, x3 eta x4 aldagaien balioak zehaztea izango da ere-
du linealaren soluzioa topatzea:
min z = 14x1 + 9x2 + 13x3 + 16x4
ondoko murrizketen menpe
2x1 + x2 + x3 + x4 ≥ 25
x1 + 2x2 + 2x4 ≤ 30
x1 + 2x2 + 2x4 ≥ 25
x2 + 2x3 + x4 ≥ 22
x1 + 2x2 + x4 ≤ 17
x1 . . . x4 ≥ 0
Adibidea. Nahasketen problema
Birﬁndegi batean 2 gasolina mota (A eta B) ekoizten dituzte, horretarako 3 es-
entzia desberdin nahastuz. Erabil daitekeen esentzia-
kopurua eta mota bakoitzeko
upelaren prezioa 2.4 .taulan datoz adieraziak.
A eta B gasolinak kalitate onekoak izan daitezen, nahasketak egiterakoan on-
dokoak kontutan izan behar dira:

xxx
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
Taula 2.4:
UPELA-
UPELAKO
ESENTZIA
KOPURUA
PREZIOA
1
2.000
10
2
3.000
8
3
1.000
12
• A gasolinaren %50-a gutxienez 1. esentzia da eta ezin du 2. esentzia %30-
etik behera izan.
• B gasolinaren 3. esentzia-kopuruak %30-etik beherakoa izan behar du.
A gasolinaren salneurria 40-koa da upelako eta B-rena 35-ekoa. Demagun ekoiz-
tutako gasolina guztia saltzeko gai dela birﬁndegia.
Irabaziak ahalik eta handienak izan daitezen mota bakoitzetik zenbat gasolina
ekoiztu beharko den zehaztuko duen eredu lineala eraikiko dugu.
EBAZPIDEA
• Erabaki-aldagaiak.
xij : j gasolinak (j = A, B) duen i esentzia-kopurua (i = 1, 2, 3)
• Helburu-funtzioa.
– Ekoizpen-kostua.
EK = 10(x1A + x1B) + 8(x2A + x2B) + 12(x3A + x3B)
– Salmenta-prezioa.
SP = 40(x1A + x2A + x3A) + 35(x1B + x2B + x3B)

2.4. EREDUEN ERAIKETA
xxxi
max (irabazia) = −EK + SP =
= 30x1A + 32x2A + 28x3A + 25x1B + 27x2B + 23x3B
• Murrizketak.
– Lehengaien erabilgarritasunari buruzkoak.
x1A + x1B ≤ 2000 (1 esentzia)
x2A + x2B ≤ 3000 (2 esentzia)
x3A + x3B ≤ 1000 (3 esentzia)
– Gasolinen kalitateari buruzkoak.
x1A ≥
50
100
(x1A + x2A + x3A)
x2A ≥
30
100
(x1A + x2A + x3A)
x3B ≤
30
100
(x1B + x2B + x3B)
– Ez-negatibotasunari buruzkoak.
xij ≥ 0 ∀i = 1, 2, 3 ∀j = A, B
Adibidea. Ordutegien antolakuntza
Lantegi batean erabateko jardunaldiaz lanean arituko diren langileak behar
dituzte; langile-kopuru desberdina asteko egun bakoitzerako. 2.5 .taulan datoz,
hain zuzen ere, asteko egun bakoitzean behar direnak.
Langile bakoitzak 5 egun jarraietan lanean aritu ondoren 2 egunetako atsede-
naldia hartu behar du, legeak hala arautzen duelako.
Guztiarekin, lantegiaren beharrei aurre egiteko behar den langile-kopuru min-
imoa emango duen eredu lineala zehaztatuko dugu.
EBAZPIDEA

xxxii
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
Taula 2.5:
Eguna
Beharrezko langileak
Astelehena
20
Asteartea
15
Asteazkena
18
Osteguna
18
Ostirala
12
Larunbata
17
Igandea
10
• Erabaki-aldagaiak. xj : j egunean (j = 1 . . . 7) atsedenaldiaren ondoren
lehen aldiz lantegiratuko den langile-kopurua. Adibidez,
x1 astelehenean
lanean hasten direnak dira eta ostiral arte lanean arituko dira.
• Helburu-funtzioa. Langile-kopuru minimoa kontratatu nahi du lantegiak.
min z = x1 + x2 + . . . + x7
• Murrizketak.
x1
+x4 +x5 +x6 +x7 ≥ 20 → astelehena
x1 +x2
+x5 +x6 +x7 ≥ 15 → asteartea
x1 +x2 +x3
+x6 +x7 ≥ 18 → asteazkena
x1 +x2 +x3 +x4
+x7 ≥ 18 → osteguna
x1 +x2 +x3 +x4 +x5
≥ 12 → ostirala
x2 +x3 +x4 +x5 +x6
≥ 17 → larunbata
x3 +x4 +x5 +x6 +x7 ≥ 10 → igandea

2.4. EREDUEN ERAIKETA
xxxiii
Taula 2.6: Garraio-kostuak (pta/unit)
1
2
3
A ZENTROA
5
20
15
B ZENTROA
20
15
6
• Ez-negatibotasun murrizketak.
xj ≥ 0 j = 1 . . . 7
Adibidea. Garraio-problema
Lantegi batek bi ekoizpen-zentro du: A eta B. Bietan produktu mota bera
ekoizten da, 2.000 unitate/hilabeteko lehen zentroan eta 3.000 bigarrengoan.
Ekoizpen-zentro horietatik hiru erostetxetara saltzen dituzte ekoiztutako pro-
duktuak. Erostetxe horiek hilero 500, 3.500 eta 2.000 produktu-unitate eskatzen
dituzte.
Zentroetatik erostetxeetara produktuak garraiatzeak badu bere kostua. Ikus
2.6 .taula.
Hortaz, zein izango litzateke erostetxeen eskariei aurre egin eta burutu be-
harreko garraio guztiak kosturik txikienean egin ahal izateko lantegiak beharko
lukeen garraio-sistema?
EBAZPIDEA
• Erabaki-aldagaiak.
xij : i ekoizpen-zentrotik (i = A, B) j erostetxera garraiatzen den produk-
tuaren unitate-kopurua
(j = 1, 2, 3).
• Helburu-funtzioa. Banaketa-kostua ahalik eta txikien egitea.
min z = 5xA1 + 20xA2 + 15xA3 + 20xB1 + 15xB2 + 6xB3

xxxiv
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
• Murrizketak
– Zentroen eskaintzari buruzkoak. Zentroetan ekoitz daitekeena baino
gehiago ezin daiteke sal.
xA1 + xA2 + xA3 ≤ 2000
xB1 + xB2 + xB3 ≤ 3000
– Erostetxeen eskariei buruzkoak. Eskariak zerbitzatu egin behar dira.
xA1 + xB1 ≥ 500
xA2 + xB2 ≥ 3500
xA3 + xB3 ≥ 2000
– Ez-negatibotasunari buruzkoak.
xij ≥ 0 i = A, B j = 1, 2, 3
2.5
Programazio linealaren suposaketak
Sistema erreal batek, eredu lineal batez adieraztean, proportzionaltasuna, batuko-
rtasuna, zatigarritasuna eta ziurtasuna gordetzen dituela suposatzen da. Eredua
lineala izan dadin lehen bi suposaketak egitea beharrezkoa da.
1. Proportzionaltasuna. Ereduko
k jarduera burutzen bada, ondokoak beteko
dira:
(a)
z-ren eraginkortasun-neurria ckxk da.
(b)
i baliabide bakoitzeko kontsumoa aikxk da.
Bi neurri horiek
k jarduera mailarekiko zuzenki proportzionalak dira. Honek
esan nahi du bai helburu-funtzioan baita murrizketetan ere, jarduera hasteak
ez duela kostu gehigarririk eskatzen.
2. Batukortasuna. Jarduera desberdinen artean elkarrekintzarik ez egotea
eskatzen du batukortasunak. Horri esker, bi erabaki-aldagaik ez dute in-
oiz biderkadura bat osatuko. Honela, batukortasunak zera eskatzen du:

2.6. EBAZPEN GRAFIKOA
xxxv
(
x1 . . . xn) jardueren edozein maila emanik eraginkortasunaren neurri tota-
la eta baliabide bakoitzeko kontsumo totala, burututako jarduera bakoitzak
sortutakoaren baturaren berdina izango dela. Adibidez,
j eta k jarduerak
burutzen direnean ondoko batugaiak agertzen dira helburu-funtzioan eta
i
murrizketan:
cjxj + ckxk
aijxj + aikxk
Aurreko bi ezaugarriak beteko ez balira, eskuartean daukagun problema ez-
lineala izango litzateke. Berau ebazteko bada beste zenbait metodo zehatz.
3. Zatigarritasuna. Zenbait erabaki-aldagaik errealitatean zentzua izan dezan
balio osoa hartu beharko du. Zatigarritasunak esaten duena zera da: jar-
duera bakoitzeko unitateak zatigarriak direla, eta hau da, hain zuzen ere,
programazio linealean lortutako soluzio optimoan sarritan gertatzen dena.
Bilatzen den soluzio optimoak osoa izan behar duenean, lortutakoa biribil
daiteke edo, biribilketaren emaitza egokia ez izatekotan programazio lineal
osoaren prozedurak erabil daitezke.
4. Ziurtasuna. Ezaugarri honen arabera, ereduko
aij, bi eta cj parametroak
konstante ezagunak dira. Baina problema errealetan oso gutxitan gertatzen
da hori.
Parametro ezagunak dituen eredu batentzako soluzioa kalkulatzea posible
da. Denboran zehar parametroak aldatuko balira, orduan sentikortasun-
analisirako teknikak erabiliko genituzke. Horiei esker, aldakorrak diren
parametroak aldatzen diren heinean, une bakoitzean hartzen duen balioari
dagokion soluzio optimoa lortuko da. Parametrorik sentikorrenak zein diren
ere ezagutu ahal izango dugu, zehazkiago aztertuak izan daitezen.
2.6
Ebazpen graﬁkoa
Oro har, eta nahiz eta problema lineal guztiak graﬁkoki ebazterik ez izan, guztiek
badute interpretazio geometrikorik. Problemak 2 edo 3 aldagai duenean graﬁko-
ki ebatz daiteke. Metodo graﬁkoa interesgarria da berari esker programazio lin-
ealeko kontzeptu garrantzitsuak graﬁkoki ikus daitezkeelako. Hori ikusteko zen-
bait eredu graﬁkoki ebatziko dugu.

xxxvi
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
Adibidea. Soluzio Optimo Bakarreko eredua
Demagun ondoko problema lineala.

2.6. EBAZPEN GRAFIKOA
xxxvii
max z = 15x1 + 10x2
ondoko murrizketen menpe
2x1 + 4x2 ≤ 44
−x1 + 4x2 ≤ 20
2x1 − x2 ≤ 14
x1 − 3x2 ≤ 2
x1, x2 ≥ 0
Gure helburua zera da: helburu-funtzioa maximoa izan dadin
x1 eta x2 erabaki-
aldagaiek zein balio hartu beharko duten zehaztea.
EBAZPIDEA
Murrizketek mugatzen duten azalera marraztuko dugu koordenatu sistema batean.
Ereduaren murrizketa bakoitza erdiespazioa da. Honela, lehen murrizketak,
2x1 +
4x2 ≤ 44, mugatutako erdiespazioa marrazteko 2x1+4x2 = 44 zuzena irudikatzen
da. Zuzen honek planoa bi erdiespaziotan banatzen du eta horietariko bat izango
da murrizketak mugatzen duena (zuzena bera barne murrizketa berdintasunez ere
betetzen baita). Irudian gezien bidez bereizten da. (Ikus ??. orriko irudia).
Gainontzeko hiru murrizketentzat ere gauza bera eginez soluzioen multzoaren
adierazpen graﬁkoa lortzen da.
Puntuz bete dugun azalera soluzio-puntuen multzoa da, bertako puntuek mur-
rizketa guztiak betetzen dituztelako. 0ABDEF poligonoa multzo ganbila da. Au-
rrerago frogatuko dugunez, edozein eredu linealerako soluzio-multzoa multzo
ganbila da eta soluzio optimoa multzo ganbilaren mutur-puntua da. Aurreko
adibidean 0,A,B,D,E eta F dira soluzio-multzoaren mutur-puntuak. Puntu horiek
kalkulatzeko, zuzenen arteko ebakidura puntuak aurkitu behar dira eta
z = 15x1 +
10x2 optimo egiten duen puntua (maximo gure kasuan) izango da bilatzen dugun
soluzio optimoa.
Puntuak hauek dira:
A = (0 5) , B = (8 7) , D = (10 6)
E = (8 2) , F = (2 0) , 0 = (0 0)

xxxviii
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
z helburu-funtzioak D puntuan lortzen duela balio optimoa egiazta daiteke
(
z = 210). Graﬁkoki ere ikus daiteke 0,A,B,D,E eta F puntuen artetik zein den
soluzio optimoa, horretarako guztien balioak kalkulatu beharrik izan gabe.
z =
15x1 + 10x2 zuzena irudikatzen da z-ri balio ﬁnkoren bat emanez. Soluzioen
eskualdean zehar zuzena desplazatzen da optimizatzeak eskatzen duen norantza
jarraituz. Kasu honetan, jatorri-puntutik urrunduz
z-ren balioa handitzen da.
Soluzio optimoa:
2x1 + 4x2 = 44
2x1 − x2 = 14



→ D = (10, 6)
z
∗ = 15 · 10 + 10 · 6 = 210
Honek zera esan nahi du:
x1 eta x2 erabaki-aldagaiek x1 = 10 eta x2 = 6
balioak hartzean helburu-funtzioak balio maximoa lortuko duela. Irabazi maxi-
moa
z
∗ = 210-ekoa da.
Adibidea. Aukerazko Soluzio Optimoak edo Soluzio Optimo Anizkoitzak
dituen problema lineala.
Demagun ondoko eredu lineala eraiki dugula:
max z = 2x1 + 4x2
ondoko murrizketen menpe
2x1 + 4x2 ≤ 44
−x1 + 4x2 ≤ 20
2x1 − x2 ≤ 14
x1 − 3x2 ≤ 2
x1, x2 ≥ 0
Adibide honetako soluzio-puntuen multzoa eta aurreko adibidekoa multzo berbera
direla ikus daiteke, murrizketak berberak direlako. Baina helburu-funtzioa al-
datu egin dugu.
z-ri balio bat emanez irudikatzen da helburu-funtzioa eta opti-
mizazioak eskatzen duen norantzan zuzena desplazatuz BD segmentura iristen
da. (Ikus ??. orriko irudia).

2.6. EBAZPEN GRAFIKOA
xxxix
BD segmentua osatzen duten puntu guztiek balio optimoa ematen diote helburu-
funtzioari. Geroago frogatuko dugunez, eredu linealak mutur-puntu optimo bat
baino gehiago duenean problemak soluzio-kopuru inﬁnitua du.
z
∗ = 2 · 10 + 4 · 6 = 44,
z
∗ = 2 · 8 + 4 · 7 = 44
B eta D puntuetan
z funtzioak balio berbera hartzen du eta baita segmentuaren
puntu guztietan ere.
Adibidea. Soluziorik gabeko problema.
Demagun ondoko eredua:
max z = x1 + x2
ondoko murrizketen menpe
2x1 + x2 ≤ 5
x1 ≥ 4
x1, x2 ≥ 0
Murrizketek eta ez-negatibotasun murrizketek deﬁnitutako eskualdeen arteko
ebakidura punturik existitzen ez dela ikus daiteke. Beraz, problema honek ez
dauka soluziorik. (Ikus ??.orriko goiko irudia).
Adibidea. Bornegabeko soluzioen eskualdea.
Izan bedi honako problema:
max z = 10x1 + 12x2
ondoko murrizketen menpe
x1 + 2x2 ≥ 2
−2x1 + 3x2 ≥ 2
x1, x2 : ez-murriztuak

xl
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
Helburu-funtzioa inﬁnituraino haz daiteke. Ez dauka, beraz, soluziorik prob-
lema honek, edo esan daiteke soluzio bornegabea duela. (Ikus ??.orriko beheko
irudia).
Problema erreal batean bornegabeko soluzioa lortzea, hau da, baliabideak mu-
gatuta daudenean helburu-funtzioak inﬁniturantz jotzeak ez dirudi oso logikoa.
Horrelakoak gertatzen direnean problema ebazteko eraiki den eredua berrikusi
beharko dugu, agian murrizketak idaztean erroreak gertatu direlako edo problema
ebazteko garrantzitsua izan daitekeen beste zenbait murrizketa kontutan hartua
izan ez delako.
Bornegabeko soluzioarekin topo egiteko derrigorrezkoa da soluzioen mult-
zoa bornegabea izatea. Hala ere, beharrezko baldintza bada ere, ez da nahikoa,
honelako multzoetan soluzio bornatuak egon daitezke eta. Begira, bestela, aur-
reko problemaren helburu-funtzioa aldatu eta beste
min z = −2x1+3x2 funtzioaz
ordezkatuz gero lortzen duguna:
Adierazpen graﬁko horretan A puntuan hasten den zuzenerdiaren puntu guzti-
ak soluzio dira. Puntu horietan
z funtzioak 2 balioa hartzen du.
2.7
Ariketak
1. Ondoko problemen eredu linealak idatz itzazu:
(a) Hiritik gertu hiru lantegi aurkitzen dira: 1-lantegia, 2-lantegia eta 3-
lantegia. Lantegi hauek, eguneroko ekoizpen-prozesuaren eraginez
sortutako hondakinak bertako ibaira botatzen dituzte. Hondakinak
kutsagarriak dira, eta herriko alkateak mehatxu egin die: jaurtikitako
hondakin kutsagarriak maila onargarritik gorakoak balira, 1.000.000
ptako
izuna ordaindu beharko lukete.
Zorionez, kutsadura maila onargarrian mantentzea posible da. Horre-
tarako, sortutako hondakinek garbitze-prozesua gainditu beharko dute.
Honi esker, hondakinen bi kutsagai nagusien kopurua txikitzea lortuko
da. Garbitze-prozesuaren kostua eta prozesuaren ondorioz lortutako
kutsagai bakoitzeko beherapena 2.7 .taulan datoz adieraziak.
i. Kutsagai bakoitza 40 tona jaitsi nahi da. Horrek eskatzen duen
garbitze-prozesuaren kostua ahalik eta txikiena izan dadin eredu
lineala idatz ezazu.

2.7. ARIKETAK
xli
Taula 2.7:
HONDAKIN TONA
GARBITZEAREN
1.KUTSAG.
2.KUTSAG.
KOSTUA
BEHERAP.
BEHERAP.
1-LANT.
20.000 pta
0.5 tona
0.2 tona
2-LANT.
15.000 pta
0.1 tona
0.1 tona
3-LANT.
35.000 pta
0.3 tona
0.15 tona
Taula 2.8:
HILEKO
EROSTE
SALMENTA
BILTEG.
PROD.
BEHARRAK
PREZIOA
PREZIOA
ESPAZIOA
A
1000 unit
60 pta/unit
100 pta/unit
5
dm3/unit
B
800 unit
100 pta/unit
150 pta/unit
6
dm3/unit
D
750 unit
90 pta/unit
140 pta/unit
8
dm3/unit
E
1100 unit
200 pta/unit
280 pta/unit
3
dm3/unit
F
2000 unit
30 pta/unit
50 pta/unit
10
dm3/unit
ii. Demagun kutsadura maila jaisteko udaletxeak 5 milioi ptako dir-
ulaguntza eman duela. Kutsadura ahalik eta txikiena izan dadin
lantegi bakoitzak diru hori erabiliz garbitu beharko duen tona-
kopurua zehaztuko duen eredu lineala idatz ezazu.
(b) Denda batek bere bezeroen eskariei aurre egiteko 5 produktu erosi be-
har ditu. Hilero behar den produktu bakoitzeko kopurua, produktu-
unitate bakoitzaren kostua, produktu bakoitzaren salmenta prezioa eta
beharrezko biltegiratze-espazioa 2.8 . taulan adierazitakoak dira.
Dendak 700.000 pta inberti ditzake eta 60.000
dm3 erabil ditzake pro-
duktuak gordetzeko. Hileko beharrak betetzeko erositako produktuez

xlii
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
gain erositako produktuek % 10-eko beherapena izango dute.
Dendak hilean behin erosten ditu hileko eskariei aurre egin ahal iza-
teko beharrezko produktuak, baina ez du inoiz 2 hilabete baino gehi-
agorako erosiko.
Irabazia ahalik eta handiena izan dadin eredu lineala eraiki ezazu.
(c) Lantegi batek hurrengo lau hiruhilabeteetan eraikiko duen txalupa-
kopurua ﬁnkatu behar du, eskaria 40, 60, 75 eta 25 txalupakoa dela
jakinda. Hiruhilabetealdi bakoitzeko eskaria zerbitzatu egin behar du
lantegiak. Lehen hiruhilabetearen hasierako inbentarioa 10 txalupakoa
da eta bakoitzaren hasieran hiruhileko ekoizpena erabaki beharko da.
Gauzak erraztearren, hiruhilabeteko batean eraikitako txalupak hiruhi-
labeteko horretako eskariari aurre egiteko baliagarriak direla suposatzen
da. Hiruhilabeteko bakoitzeko ohizko ekoizpena 40 txalupakoa da, eta
kostua 40.000 pta/txalupa da. Hala ere, ekoizpen-gehigarria erabiltzea
posible da, honela lortutako txalupen kostua 45.000 ptakoa izango de-
larik.
Hiruhilabeteko bakoitzaren amaieran (ekoiztu eta hiruhilabetealdiaren
eskariak bete ondoren) biltegiratzen den txalupen biltegiratze-kostua
2.000 ptakoa da itsasuntziko.
Ekoizpena
kosturik
txikienean
antolatzeko
eredu
lineala
eraiki ezazu.
(d) Lantegi batek bi lurrin mota sortzen du: Brute lurrina eta Chanelle
lurrina. Lurrin mota bakoitza ekoizteko behar diren lehengaien kostua
60 pta/Kg-koa da. Lehengai kiloa lantzeko 2 laborategi-ordu behar da.
Lantzen den lehengai kiloko 200 gr Brute lurrin eta 250 gr Chanelle
lurrin eratortzen da; lurrinen salneurriak 25 pta/gr eta 20 pta/gr dira,
hurrenez hurren.
Behin bi lurrin mota horiek lortu dituenean, lantegiak birﬁnketa-proze-
suaren bidez luxuzko Brute lurrina (60 pta/gr salneurriduna) eta lux-
uzko Chanelle lurrina (50 pta/gr salneurriduna) lortzeko aukera du.
Birﬁnketa prozesuan birﬁntzen den Brute lurrin gramo 1-ek laborategi-
ordu 1 behar du eta 12 ptako kostua izango du; luxuzko Brute lur-
rin gramo 1 lortzen da. Birﬁndutako Chanelle lurrin gramo 1-ek 0.5
laborategi-ordu eskatzen du eta 12 ptako prozesatze-kostua sortzen du,
luxuzko Chanelle lurrin gramo 1 lortuko delarik.
Urtean 4.000 laborategi-ordu dago erabilgarri lantegian eta 2.000 Kg

2.7. ARIKETAK
xliii
lehengai eros dezake. Lantegiari irabaziak maximizatzen lagunduko
dion eredu lineala eraiki ezazu. Laborategi-orduen kostua ﬁnkotzat
har ezazu.
2. Ondoko eredu linealak graﬁkoki ebatz itzazu:
(a)
max z = x1 + 2x2
ondoko murrizketen menpe
x1 − x2 ≥ 3
x1 + 2x2 ≤ 1
x2 ≤ 5
x1, x2 ≥ 0
(b)
min z = 4x1 − x2
ondoko murrizketen menpe
x1 + x2 ≤ 4
x1 − x2 ≤ 6
x1 + x2 ≥ 1
x1, x2 ≥ 0
(c)
max z = x1 + x2
ondoko murrizketen menpe
x1 + x2 ≤ 6
x1 + 2x2 ≥ 2
3x1 − 4x2 ≥ −1
x1 − x2 ≤ 2
x1, x2 ≥ 0
(d)
max z = x1 + 3x2

xliv
KAPITULUA 2. EREDU LINEALAK ETA SOLUZIO GRAFIKOA
ondoko murrizketen menpe
x1 − 2x2 ≤ 2
x1 + 2x2 ≥ 4
x1, x2 ≥ 0
(e)
max z = x1 − 2x2
ondoko murrizketen menpe
x1 − 2x2 ≤ 2
x1 + 2x2 ≥ 4
x1, x2 ≥ 0

Kapitulua 3
ALJEBRA LINEALA ETA
MULTZO GANBILAK
Programazio linealaren garapenean aljebra linealeko eta multzo ganbiletako zen-
bait kontzeptu erabiltzen da. Hori dela eta, datozen gaiak ondo ulertzeko behar-
rezko gertatuko zaizkigun deﬁnizioak, propietateak eta teoremak aztertuko ditugu
gai honetan.
3.1
Aljebra Lineala
3.1.1
Bektoreak
Demagun
ℜ-ren gain deﬁnituriko ℜn bektore-espazioa, zeinean bektore arteko
batuketa eta bektore eta eskalare arteko biderkaketa deﬁniturik dauden.
ℜn-ko bektorea honela adierazten da:
x
=





x1
..
.
xn





3.1.2
Bektore-eragiketak
1. Batuketa. x eta y bektoreen arteko batuketa beste bektore bat da, zeinaren
osagaiek ondokoa betetzen duten:
zi = xi + yi
∀i. Eragiketa honek
trukatze-propietatea eta elkartze-propietatea betetzen ditu.
xlv

xlvi
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
Adibidea:
Izan bitez ondorengo bi bektoreak:
x
=





3
2
−1





eta
y
=





2
−4
5





x eta y bektoreen arteko batuketa:
z
= x + y =





3
2
−1





+





2
−4
5





=





5
−2
4





2
2. Bektore eta eskalare arteko biderkaketa. x bektore baten eta
λ eskalare
baten arteko biderkaketa y
= λx moduko bektorea da non yi = λxi ∀i.
Bektore baten eta eskalare baten arteko biderkaketak batuketarekiko banatze-
propietatea betetzen du.
Adibidea:
Izan bitez x bektorea eta
λ eskalarea:
x
=





−2
4
−1





λ = 2
Beraien arteko biderkaketa honela kalkulatzen da:
λx = 2 ·





−2
4
−1





=





−4
8
−2





2

3.1. ALJEBRA LINEALA
xlvii
3. Bi bektoreren arteko biderkadura eskalarra
∀x, y x
T · y = (x1 . . . xn)





y1
..
.
yn





=
n
i
=1
xiyi
Bi bektoreren arteko biderkadura eskalarra zenbaki erreala da.
Adibidea:
Har ditzagun bi bektore hauek:
x
=





3
2
−1





eta
y
=





2
−4
5





Bektoreen arteko biderkadura eskalarra
x
T · y = (3 2 − 1)





2
−4
5





= 3 · 2 + 2 · (−4) + (−1) · 5 = −7
Ikus daitekeenez, bi bektoreren arteko biderkadura eskalarra zenbaki erreala da.
2
3.1.3
Menpekotasun eta independentzia lineala. Oinarria
Deﬁnizioa 3.1.1 (Konbinazio lineala) Baldin y
∈ ℜn bektorea ondoko erara
idazterik baldin badago:
y
= α1x1 + α2x2 + · · · + αnxn
orduan y
∈ ℜn bektorea x1, x2 . . . xn ∈ ℜ
n bektoreen arteko konbinazio lineala
dela esaten da,
α1 . . . αn eskalareak izanik.

xlviii
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
Adibidea:
Izan bitez bektore hauek:
x
=


2
4


, x1 =


1
0


, x2 =


1
−1


x bektorea, x1 eta x2 bektoreen konbinazio lineal moduan idatz daiteke:
α1


1
0


+ α2


1
−1


=


2
4




1
1
0 −1




α1
α2


=


2
4




α1
α2


=


1
1
0 −1


−
1 

2
4




α1
α2


=


6
−4


2
Deﬁnizioa 3.1.2 (Menpekotasun lineala) x1, x2 . . . xn ∈ ℜ
n bektore multzoa lin-
ealki menpekoak direla esaten da baldin eta ondokoa betetzen duten
αi eskalareak
existitzen badira, guztiak batera zero ez izanik.
α1x1 + α2x2 + · · · + αnxn = 0
Adibidea:
Izan bitez ondorengo bektoreak:
x1 =


2
4


, x2 =


−1
−2



3.1. ALJEBRA LINEALA
xlix
Linealki menpekoak al dira?
α1


2
4


+ α2


−1
−2


=


0
0




2 −1
4 −2




α1
α2


=


0
0


Sistemaren bi bektoreak linealki menpekoak dira, zeren eta:
2 −1
4 −2
= 0
Horregatik, sistemak
α1 = α2 = 0 soluzioa izateaz gain beste inﬁnitu soluzio du.
2
Deﬁnizioa 3.1.3 (Independentzia lineala) x1, x2 . . . xn ∈ ℜ
n bektoreak emanik,
baldin eta
α1x1 + α2x2 + · · · + αnxn = 0
⇒
α1 = α2 = · · · = αn = 0
betetzen bada, orduan x1, x2 . . . xn bektoreak linealki independenteak dira.
Adibidea:
x1 eta x2 datozen bektoreak izanik beren arteko menpekotasun lineala azter-
tuko dugu.
x1 =


2
3


, x2 =


−1
4


Konbinazio lineala aztertu beharko dugu:
α1


2
3


+ α2


−1
4


=


0
0


⇒ α1 = α2 = 0 ?

l
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
Aska ditzagun
α1 eta α2:


2 −1
3
4




α1
α2


=


0
0




α1
α2


=


2 −1
3
4


−
1 

0
0


=
1
11


4 1
−3 2




0
0


=


0
0


Beraz, linealki independenteak dira.
Deﬁnizioa 3.1.4 (Multzo sortzailea)
{x1, x2 . . . xn} ℜ
n-ko bektore-multzoa mult-
zo sortzailea da baldin
∀y ∈ ℜn bektore {x1, x2 . . . xn} bektoreen konbinazio
lineal moduan idazterik baldin badago, hau da,
∃α1 . . . αn
y
= α1x1 + . . . + αnxn
Deﬁnizioa 3.1.5 (Oinarria)
ℜn bektore-espazio bateko oinarri bat, espazio barnekoa
den eta ondoko baldintzak betetzen dituen
{x1 . . . xn} bektore-multzoa da.
1. Linealki independenteak izatea.
2. Espazioaren multzo sortzailea izatea.
Deﬁnizioa 3.1.6 (Dimentsioa) Bektore-espazio baten dimentsioa oinarria osatzen
duten bektore-kopurua da.
Kontutan izan behar da, oinarri guztiek bektore-kopuru berbera dutela.
Teorema 3.1.1 Bektore-espazioko edozein bektore oinarriko bektoreen konbinazio
lineal moduan idatzia izan daiteke. Gainera, konbinazio lineal hori bakarra da.
Teorema 3.1.2 Demagun
ℜn-ko B oinarria daukagula. Oinarri honetatik abi-
atuz beste oinarri bat lortzea posible da. B oinarrikoa ez den eta zero ez den w
bektorea izanik, beti existitzen da B oinarrian bektoreren bat zein w bektoreaz
ordezkatua izan daitekeen, beti ere aldaketa egin ondoren lortzen den bektore-
multzoa ere oinarri izango delarik.

3.1. ALJEBRA LINEALA
li
Ez dugu teorema honen frogapena garatuko, baina garatuko bagenu, oinarriko
zein bektore ordezkatua izan daitekeen ikusiko genuke. Ikus dezagun adibide
baten bidez.
Adibidea:
Izan bedi bektore multzo hau:
B = {x1 =





1
2
0





, x2 =





0
1
0





, x3 =





1
1
2





}
(a)
ℜ3-ko oinarri dela egiaztatuko dugu:
|B| =
1 0 1
2 1 1
0 0 2
= 2 = 0
Ondorioz,
∃B−1 eta α1x1 + α2x2 + α3x3 = 0 sistemak soluzio bakarra du:
α1 = α2 = α3 = 0. Bektoreak linealki independenteak direla esan nahi
du horrek.
ℜ3-n 3 bektore linealki independente aurkitu ditugunez, oinarria
badaukagu.
(b)
B oinarriko bektoreak v bektoreaz ordezkatuz beste oinarri batzuk lortuko
ditugu:
v
=





3
1
0





B-ko bektoreen konbinazio lineal moduan idatz daiteke v bektorea.





3
1
0





= α1





1
2
0





+ α2





0
1
0





+ α3





1
1
2






lii
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK





α1
α2
α3





=





1 0 1
2 1 1
0 0 2





−
1 




3
1
0





Sistema ebatziz,
α1 = 3 , α2 = −5 , α3 = 0 lortzen da.
B oinarria izanik, eta B oinarriarekiko v bektorearen koordenatuak ezagu-
nak izanik, ondorengo bi oinarriak eraikitzea posible izango zaigu:
B
′ = {v, x2, x3} , B′′ = {x1, v, x3}
x3 bektorea ezin daiteke v bektoreaz ordezkatua izan, α3 = 0 delako.
2
3.1.4
Matrizeak
Deﬁnizioa 3.1.7 (Matrizeak) mxn ordenako A matrizea ondoko forma duen adier-
azpena da:
Amxn =








a11
a12 · · · a1n
a21
a22 · · · a2n
..
.
am1 am2 · · · amn








• Matrize-eragiketak:
1. Berdintasuna.
A = B baldin aij = bij
∀i, j
2. Batuketa.
C = A + B , cij = aij + bij
∀i, j
3. Eskalare eta matrize arteko biderkaketa.
λA = B
bij = λaij ∀i, j
4. Matrize arteko biderkaketa.
C = A · B , cij =
n
h
=1
aihbhj = ai1b1j + · · · + ainbnj

3.1. ALJEBRA LINEALA
liii
A
m x n dimentsioko matrizea bada eta B n x r dimentsiokoa, ord-
uan C
m x r dimentsiokoa izango da. Biderkaketa egin ahal izateko
beharrezkoa da A-ren zutabe-kopurua eta B-ren lerro-kopurua kopuru
berbera izatea.
Deﬁnizioa 3.1.8 (Heina) Matrize baten heina, linealki independenteak diren ma-
trizearen zutabe-kopuru edo lerro-kopuru maximoa da.
Froga daiteke matrizean linealki independente diren lerro-kopuru maximoa eta
zutabe-kopuru maximoa kopuru berbera direla.
Teorema 3.1.3 A matrizearen heina k da baldin eta soilik baldin k+1 ordenako
A matrizearen azpideterminante guztiak zero badira eta gutxienez zero ez den k
ordenako azpideterminante bat existitzen bada. Idazkera:
rg(A) = k
Adibidea:
Ondorengo matrizearen heina kalkulatuko dugu:
A =





1 2 −1
3 1
2
2 4 −2





|A| =
1 2 −1
3 1
2
2 4 −2
= 0
Heina ez da 3.
a11 a12
a21 a22
=
1 2
3 1
= 1 − 6 = −5 = 0
⇒
rg(A) = 2
2

liv
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
3.1.5
Ekuazio linealen sistemak. Soluzioak.
Demagun
Ax = b sistema lineala, A m x n matrizea izanik. Sistemak soluziorik
izan dezan beharrezkoa eta nahikoa da
rg(A) = rg(Ab) izatea.
• Baldin rg(A) = rg(Ab) = ezezagun-kopurua ⇒ Soluzio bakarra du
sistemak
• Baldin rg(A) = rg(Ab) < ezezagun-kopurua ⇒ Sistemak inﬁnitu soluzio
du
Demagun
Ax = b sistema non A m x n matrizea den m < n izanik, eta
ekuazio guztiak nagusiak diren (linealki independenteak). Esan dugunez, sistema
honek inﬁnitu soluzio du.
rg(A) = rg(Ab) = m
Baldin B
m ordenako azpideterminantea bada, zeinaren zutabe guztiak linealki
independenteak diren, sistema honela berridaztea posible da:
BxB + RxR = b
B-ko zutabeek
ℜm-ren oinarria osatzen dute, |B| = 0 delako. Beraz, xB
kalkula daiteke. Horretarako, ekuazioaren bi atalak
B−1-ez biderkatuko ditugu:
B
−
1Bx
B + B
−
1Rx
R = B
−
1b
xB = B
−
1b − B−1Rx
R
xR ∈ ℜ
n−m
⇒
inﬁnitu balio har dezake
Edozein oinarritarako inﬁnitu soluzio lortu ahal izango dugu. Baina, guri ez
zaizkigu soluzio guzti horiek interesatzen. Guk xR = 0 balioa ﬁnkatuta lortutako
xB soluzioak nahi ditugu. Nagusi ez diren ezezagunei zero balioa emanda ondoko
soluzioa lortzen da:
xB = B
−
1b − B−1Rx
R
xR = 0 eginez ⇒ xB = B
−
1b
Honela, xR-ri balio bakarra emango diogu eta xB-ri oinarriko soluzio izena
emango diogu. Oinarri bakoitzerako lor daiteke oinarriko soluzioa.

3.1. ALJEBRA LINEALA
lv
Zenbat oinarri desberdin har daiteke?
m lerrodun eta n zutabedun matrize bat-
en
m x m matrize desberdinen kopuru maximoa (m < n), hau da, A matrizearekin
osa daitezkeen
Bmxm matrizeak bezain beste:


n
m


=
n!
m!(n − m)!
Oinarri bakoitzari oinarriko soluzio bakarra dagokionez, hau oinarriko soluzio-
kopuru maximoa da baita. Maximoa da, horietako
B matrizeren baten determi-
nantea zero izatekotan
B oinarri izango ez delako. Ziurra dena zera da: oinarriko
soluzio-kopurua ﬁnitua dela.

lvi
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
Adibidea:
Honako sistemaren oinarriko soluzio bat kalkulatuko dugu.
2x1 − x2 + 3x3 = 2
x1 + x2 − x3 = 4
Matrize bat:
B =


2 −1
1
1


Matrize honen determinantea ez da zero. Beraz, oinarria da.
2x1 − x2 = 2 − 3x3
x1 + x2 = 4 + x3
x3 = 0 eginez, oinarriko soluzioa lortuko dugu.


x1
x2


=


2 −1
1
1


−
1 

2
4


=


2
2


Problema honek duen oinarriko soluzio-kopuru maximoa hau da:


3
2


=
3!
2!(3 − 2)!
= 3
Egiazta daiteke beste bi matrizeen determinantea zeroren desberdina dela, eta be-
raz, oinarriko soluzioak ematen dituztela, hau da
xB =


2
3
1 −1


−
1 

2
4


xB =


−1
3
1 −1


−
1 

2
4


2

3.2. MULTZO GANBILAK
lvii
3.2
Multzo ganbilak
3.2.1
Zuzen baten ekuazioa
x1, x2 ∈ ℜ
2 bi puntu emanik x1 = x2 izanik, bi puntuek deﬁnituriko zuzenaren
ekuazioa x
= x1 + λ(x2 − x1) ∀λ ∈ ℜ da. Ondoko eran ere idatz daiteke.
x
= λx2 + (1 − λ)x1
Beraz, x1 eta x2 puntuek deskribatutako zuzenaren ekuazioa ondoko multzoaren
bidez adieraz daiteke:
R = {x/x = λx2 + (1 − λ)x1 , x1, x2 ∈ ℜ
2 , x1 = x2, λ ∈ ℜ}
Deﬁnizio hau
ℜn-rako orokortuz zuzen baten ekuazioa lortzen da ℜn espazioan:
R = {x/x = λx2 + (1 − λ)x1 , x1, x2 ∈ ℜ
n , x1 = x2 , λ ∈ ℜ}
3.2.2
Segmentuak
ℜ2-n, x1 eta x2 bi puntu elkartzen dituen segmentua ondoko S multzoaren bidez
adieraz daiteke:
S = {x/x = λx2 + (1 − λ)x1 , x1, x2 ∈ ℜ
2 , x1 = x2 , 0 ≤ λ ≤ 1}
Deﬁnizioa
ℜn-rako orokortuz, ℜn-n bi puntu elkartzen dituen segmentua:
S = {x/x = λx2 + (1 − λ)x1 , x1, x2 ∈ ℜ
n , x1 = x2 , 0 ≤ λ ≤ 1}
3.2.3
Hiperplanoak eta erdiespazioak
• ℜ2-n → c1, c2 eta z balioak emanik c1x1 + c2x2 = z zuzen baten ekuazioa
da. 1 dimentsioko azpiespazioa da planoan; hiperplano izena hartzen du.
• ℜ3-n → c1, c2, c3 eta z emanik c1x1 + c2x2 + c3x3 = z plano baten ekuazioa
da. 2 dimentsiokoa da, 3 dimentsioko espazioan; hiperplanoa da.
• Oro har , ℜn-n → c1, c2 . . . cn eta z emanik c1x1+· · ·+cnxn = z hiperplano
baten ekuazioa da.

lviii
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
cT x
= z hiperplanoak elkarrekiko baztertzaileak diren hiru eskualdetan ba-
natzen du espazioa.
1.
{x/cT x < z} erdiespazio irekia.
2.
{x/cT x = z} hiperplano bera.
3.
{x/cT x > z} erdiespazio irekia.
Ondokoak erdiespazio itxiak dira:
{x/c
T x < z} ∪ {x/cT x = z} = {x/cT x ≤ z}
{x/c
T x = z} ∪ {x/cT x > z} = {x/cT x ≥ z}
3.2.4
Multzo ganbilak: deﬁnizioak
Deﬁnizioa 3.2.1 (Konbinazio lineal ganbila) x1, x2 ∈ ℜ
n bi puntu izan bitez.
x
= λx2 + (1 − λ)x1 , 0 ≤ λ ≤ 1
idatzi badaiteke, orduan x puntua x1 eta x2 puntuen konbinazio lineal ganbila
dela esaten da eta x1 eta x2 puntuak lotzen dituen segmentua da.
Baldin
0 < λ < 1 betetzen bada, konbinazioari konbinazio lineal ganbil
murriztua esaten zaio.
Deﬁnizioa 3.2.2 (Multzo ganbila) X multzoa multzo ganbila da baldin x1, x2 ∈
X puntu-bikote ororentzat, x1 = x2 izanik, konbinazio lineal ganbila
x
= λx2 + (1 − λ)x1 , 0 ≤ λ ≤ 1
ere multzokoa bada.
Deﬁnizioa 3.2.3 (Mutur-puntua) X multzo ganbilaren x puntua mutur-puntua
da baldin
∃
/x1, x2 ∈ X, x1 = x2 non x = λx2 + (1 − λ)x1 0 < λ < 1

3.2. MULTZO GANBILAK
lix
3.2.5
Multzo ganbilak: teoremak
Teorema 3.2.1 Hiperplanoa multzo ganbila da.
Frogapena:
Izan bedi
X = {x/c
T x = z}
∀x1, x2 ∈ X
⇒
λx2 + (1 − λ)x1 ∈ X?
Baldin x1 ∈ X
⇒
c
T x1 = z
Baldin x2 ∈ X
⇒
c
T x2 = z
c
T [λx2 + (1 − λ)x1] = λcT x2 + (1 − λ)cT x1 = λz + (1 − λ)z = z ⇒
λx2 + (1 − λ)x1 ∈ X ⇒ X ganbila da
2
Teorema 3.2.2 Erdiespazio irekiak eta itxiak multzo ganbilak dira.
Aurrekoa bezala froga daiteke.
Teorema 3.2.3 Multzo ganbilen kopuru ﬁnituen arteko ebakidura multzo ganbila
da.
X1, X2 . . . Xn ganbilak
⇒
X =
n
i
=1
Xi ganbila da
Frogapena:
x1, x2 ∈ X =
n
i
=1
Xi ⇒
⇒ x1, x2 ∈ Xi , ∀i = 1 . . . n ⇒
Xi ∀i = 1 . . . n multzo ganbila denez, ondokoa betetzen da
λx2 + (1 − λ)x1 ∈ Xi , ∀i = 1 . . . n , 0 ≤ λ ≤ 1 ⇒
⇒ λx2 + (1 − λ)x1 ∈
n
i
=1
Xi
X =
n
i
=1
Xi multzo ganbila da
2

lx
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
3.2.6
Multzo ganbil deﬁnizioaren orokorpena
Deﬁnizioa 3.2.4 
(Konbinazio lineal ganbil orokortua) Izan bitez x1 . . . xp pun-
tuak,
p ﬁnitua izanik. Konbinazio lineal ganbila beste x puntu bat da non
x
=
p
i
=1
λixi , λi ≥ 0 , ∀i eta
p
i
=1
λi = 1
Deﬁnizioa 3.2.5 (Poliedro ganbila) Puntu-kopuru ﬁnitu baten konbinazio lineal
ganbil guztien multzoa poliedro ganbila deitzen da, hau da
X = {x =
p
i
=1
λixi , λi ≥ 0 , ∀i eta
p
i
=1
λi = 1}
Konbinazio lineal ganbil horiek sortzen duten multzoa ganbila dela froga daiteke.
3.3
Programazio linealerako erabilera
Ikus dezagun adibide baten bidez aljebra linealaren eta multzo ganbilen kontzeptu
horiek zer nolako erabilera duten eredu linealen ebazpenean.
3.3.1
Adibidea
Demagun eredu lineal hau:
max z = 15x1 + 10x2
ondoko murrizketen menpe
2x1 + 4x2 ≤ 44
−x1 + 4x2 ≤ 20
2x1 − x2 ≤ 14
x1 + 3x2 ≤ 2
x1, x2 ≥ 0
Ereduaren helburu-funtzioa hiperplanoa da eta murrizketa bakoitza erdiespazio
itxia da
ℜ2 − n; guztiak dira multzo ganbil.
Soluzioen multzoa ere multzo ganbila da, multzo ganbilen arteko ebakidura
multzo delako. Graﬁka begira ezazu ??. orrialdean: O, A, B, D, E eta F dira

3.4. ARIKETAK
lxi
soluzioen multzoaren mutur-puntuak, eta horietariko bat izango da soluzio opti-
moa. Mutur-puntu horietariko bakoitza oinarriko soluzio bati dagokio, geroagoko
gai batean ikusiko dugunez.
3.3.2
Eredu linealerako ondorioak
Multzo ganbilen deﬁnizioak eta propietateak eredu lineala ebazterakoan erabiltzen
dira, eredu lineala multzo ganbilez osaturik baitago.
1. Eredu linealaren helburu-funtzioa hiperplanoa da, eta ondorioz multzo gan-
bila.
2. Eredu linealeko murrizketa bakoitza erdiespazio itxia da, eta ondorioz mult-
zo ganbila.
3. Murrizketa-kopuru ﬁnitua dago, eta ebakidura multzo ganbila da. Puntu bat
ereduaren soluzio da baldin eta multzo ganbilen ebakidura barnean, hau da,
murrizketek deﬁnituriko soluzio espazioan baldin badago.
Eredu linealaren ebazpenean sistemako murrizketak, hau da, desberdintza ekuazioak
berdintza ekuazio bihurtzen dira, horretarako behar diren aldagaiak gehituz. Hala
ere, honek ez du soluzio multzoaren ganbiltasuna aldatuko.
3.4
Ariketak
1. Zein da matrize honen heina?
A =





2 4 −2
1 2 −1
−1 1
1





2. Kalkula ezazu matrize honen alderantzizkoa:
A =





2 0 −1
3 1
4
−1 3 −2






lxii
KAPITULUA 3. ALJEBRA LINEALA ETA MULTZO GANBILAK
3. Ondorengo bektoreak
ℜ3-ko oinarri al dira?
{(1 3 0), (1 1 1), (0 − 2 3)}
4. Ondorengo sistemaren oinarriko soluzioak kalkula itzazu:
2x1 + 3x2 − x3 = 5
2x1 − x2 + 2x3 = 4
5. Izan bitez x
T
1 = (1 3 5) , x
T
2 = (−1 2 − 1) eta x
T
3 = (2 − 1 3). Hiru
bektore horien konbinazio lineal ganbil orokortuen multzoa idatz ezazu.
6. Izan bedi honako desberdintzen sistema:
2x1 + 3x2 ≥ 1
x1 + x2 ≤ 3
−x1 + 2x2 ≤ 5
(a) Graﬁkoki irudika ezazu.
(b) Mutur-puntuak kalkula itzazu.

Kapitulua 4
PROGRAMAZIO LINEALA.
SIMPLEX METODOA
Programazio linealaren garapena burutu ahal izateko eredu linealaren bi idazkera
desberdinak ezagutu beharko ditugu: idazkera kanonikoa eta idazkera estandarra.
1. Eredu lineala idazkera kanonikoan dagoela esaten da baldin eta helburua
maximizatzea bada, murrizketak
≤ modukoak badira eta aldagai guztiak
ez-negatiboak badira, hau da:
max z = c
T x
o. m. m.
Ax ≤ b
x
≥ 0
2. Simplex metodoaren teoriaren garapenean ereduaren idazkera estandarra
erabiliko da. b-ren osagaiak positiboak izanik,
max(min) z = c
T x
o. m. m.
Ax = b
x
≥ 0
Oro har, problema linealak ebazteko simplex metodoa erabiliko dugu, eta hor-
retarako eredu lineala idazkera estandarrera pasa beharko dugu derrigorrez. Eredu
lxiii

lxiv
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
gehienak ez dira hasieratik idazkera estandarrean egoten, desberdintza murrizketa
asko izaten dituztelarik. Edozein eredu lineal daukagula ere, idazkera kanonikoan
edo idazkera estandarrean jartzea posible da. Horretarako, ondorengo atalean
ikusiko ditugun baliokidetasunak erabiliko ditugu.
4.1
Helburuaren eta murrizketen aldaketa
Ebatzi behar den eredu lineala idazkera estandarrean ez baldin badago, zenbait al-
daketa egin beharko dugu, idazkera estandarra lortu ondoren simplex metodoaren
bidez ebatzi ahal izateko. Ikus dezagun zenbait baliokidetasun.
1. Helburu-funtzioa.
max z =
n
j
=1
cjxj
⇐⇒
min z
′ =
n
j
=1
−cjxj
max z = −min z
′
Adibidez,
max z = 3x1 −5x2 eta min z
′ = −3x1 +5x2 baliokideak dira.
z maximo eta z′ minimo egiten duten x1 eta x2 aldagaien balioak berberak
dira. Helburu-funtzioek aurkako zeinuko balioak hartzen dituzte (
z = −z
′ ).
2. Murrizketak.
(a) Eredu lineal baten murrizketa guztiak norantza berean idatziak izan
daitezke ondokoa betetzen delako:
n
j
=1
aijxj ≥ bi
⇐⇒
n
j
=1
−aijxj ≤ −bi
Adibidez,
2x1+3x2 ≤ −2 ekuazioa -1 balioaz biderkatuz gero, −2x1−
3x2 ≥ 2 lortzen da.
(b) Berdintza oro bi desberdintzen bidez adierazia izan daiteke:
n
j
=1
aijxj = bi
⇐⇒
n
j
=1
aijxj ≤ bi eta
n
j
=1
aijxj ≥ bi
Adibidez,
3x1 + x2 = 4 berdintza beste bi desberdintza hauen bidez
adierazia izan daiteke:
3x1 + x2 ≤ 4
3x1 + x2 ≥ 4

4.1. HELBURUAREN ETA MURRIZKETEN ALDAKETA
lxv
3. Aldagaiak.
Aldagaiek ez-negatibotasun murrizketa betetzea beharrezkoa da.
• Baldin xj ≤ 0
⇒
−xj ≥ 0
• Baldin xj aldagaiak zeinu murrizketarik ez badu, orduan:
xj = x
′
j − x
′′
j
non
x
′
j , x
′′
j ≥ 0
– Baldin
x′
j > x
′′
j
⇒
xj > 0
– Baldin
x′
j < x
′′
j
⇒
xj < 0
– Baldin
x′
j = x
′′
j
⇒
xj = 0
Adibidea:
Aurreko baliokidetasunak erabiliz ondoko eredua idazkera kanonikoan jarriko
dugu.
min z = 5x1 − 3x2 + x3
ondoko murrizketen menpe
4x1 − x2 + 2x3 ≥ 2
x1 + x2 − x3 ≤ 3
x1 ≥ 0
x2 ≤ 0
x3 : ez-murriztua
Eredua idazkera kanonikoan egon dadin helburu-funtzioa maximizatze eran idatzi
behar da, hau da:
max (−z) = −5x1 + 3x2 − x3
Murrizketek
≤ modukoak izan behar dutenez, ondoko eran idatziak izango dira:
−4x1 + x2 − 2x3 ≤ −2
x1 + x2 − x3 ≤ 3
Aldagai guztiek ez-negatibo izan behar dute:
• x1 ≥ 0

lxvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
• x2 ≤ 0 ⇒ −x2 ≥ 0
• x3: ez murriztua,
x3 = x
′
3 − x
′′
3
non
x
′
3 ≥ 0
eta
x
′′
3 ≥ 0
Guztiarekin, ereduaren idazkera kanonikoa:
max (−z) = −5x1 − 3x2 − x
′
3 + x
′′
3
ondoko murrizketen menpe
−4x1 − x2 − 2x
′
3 + 2x
′′
3 ≤ −2
x1 − x2 − x
′
3 + x
′′
3 ≤ 3
x1, x2, x
′
3, x
′′
3 ≥ 0
2
4.2
Idazkera estandarrerako bihurketa
Eredu lineal bat idazkera estandarrean jarri ahal izateko, aurrean aztertutako al-
daketez gain nasaitze-aldagaien beharra somatuko dugu. Aldagai horiei esker
desberdintza murrizketak berdintza murrizketa bihurtuko ditugu.
n
j
=1
aijxj ≤ bi
⇐⇒
n
j
=1
aijxj + y = bi
Desberdintza beste norantzan emana badator,
y > 0 nasaitze-aldagaia kendu
egingo diogu:
n
j
=1
aijxj ≥ bi
⇐⇒
n
j
=1
aijxj − y = bi
Nasaitze-aldagaiak gehitzeak edo kentzeak ez du helburu-funtzioan inolaz ere
eragiten. Hori dela eta, beren koeﬁzienteak cT bektorean zero dira.
Adibidea:

4.2. IDAZKERA ESTANDARRERAKO BIHURKETA
lxvii
Ondoko eredua idazkera estandarrean jarriko dugu:
max z = x1 + 2x2 + x3
ondoko murrizketen menpe
x1 + x2 − x3 ≥ 2
x1 − 2x2 + 5x3 ≤ −1
x1 + x2 + x3 = 4
x1 ≥ 0 , x2, x3 ≤ 0
Murrizketa guztiak ez daude era egokian idatziak; desberdintzak berdintza bihurtu
beharko ditugu horretarako. Lehenengo murrizketan nasaitze-aldagai bat kenduz
gero murrizketa idazkera estandarrean gelditzen da.
x1 + x2 − x3 − x4 = 2
Bigarren murrizketan beste nasaitze-aldagai bat gehituz gero zera lortzen da:
x1 − 2x2 + 5x3 + x5 = −1
Hirugarren murrizketa idazkera estandarrean emana dator:
x1 + x2 + x3 = 4
Eredu linealaren aldagaiei dagokionez,
x1 ≥ 0 denez, ez-negatibotasun murrizke-
ta betetzen du.
x2 eta x3 aldagaiek, aldiz, ez dute ez-negatibotasun murrizketa
betetzen. Bete dezaten,
x2 aldagaia −x2 aldagaiaz eta x3 aldagaia −x3 aldagaiaz
ordezkatuko ditugu. Eredu lineala:
max z = x1 − 2x2 − x3 + 0x4 + 0x5
ondoko murrizketen menpe
x1 − x2 + x3 − x4 = 2
x1 + 2x2 − 5x3 + x5 = −1
x1 − x2 − x3 = 4
x1, x2 . . . x5 ≥ 0
Baliabide-bektorea b
≥ 0 egitea besterik ez zaigu falta. Bigarren murrizketa
eraldatuz (murrizketa -
1 balioaz biderkatuz) eredu linealaren idazkera estandarra
ondokoa dugu:
max z = x1 − 2x2 − x3 + 0x4 + 0x5
ondoko murrizketen menpe

lxviii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
x1 − x2 + x3 −x4
= 2
−x1 − 2x2 + 5x3
−x5 = 1
x1 − x2 − x3
= 4
x1 . . . x5 ≥ 0
2
4.3
Soluzioak. Oinarrizko deﬁnizioak
Idazkera estandarrean dagoen ondoko eredu lineala emanik:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
Ikus dezagun orain simplex metodoaren garapenean erabiltzen den zenbait termi-
noren deﬁnizioa:
1. Deﬁnizioa:
Ax = b murrizketak betetzen dituen x bektorea eredurako
soluzioa dela esaten da.
2. Deﬁnizioa: Problemarako soluzio den x bektorea, hau da,
Ax = b betetzen
duena, bideragarria dela esaten da baldin eta x
≥ 0 bada.
3. Deﬁnizioa: xB oinarriko soluzioa (O.S.) dela esaten da baldin eta B oinarria
izanik (A matrizearekiko
m zutabe linealki independente, m A matrizearen
lerro-kopurua izanik) xB = B
−
1b betetzen badu.
4. Deﬁnizioa: Oinarriko soluzio bideragarria (O.S.B.) gehienera zero baino
handiagoak diren
m osagai dituena da. B oinarria erabiliz kalkulatzen da,
hau da, xB = B
−
1b
5. Deﬁnizioa: Oinarriko soluzio bideragarri endekatua, zero baino handi-
agoak diren
m osagai baino gutxiago dituen oinarriko soluzio bideragarria
da.

4.3. SOLUZIOAK. OINARRIZKO DEFINIZIOAK
lxix
6. Deﬁnizioa: Oinarriko soluzio bideragarriak zero baino handiagoak diren
m
osagai baditu, ez-endekatua esaten zaio.
7. Deﬁnizioa: Soluzio bideragarri guztien multzoari bideragarritasun-eskualdea
edo soluzio bideragarrien multzo ganbila esaten zaio eta F hizkiaren bidez
adierazten da.
8. Deﬁnizioa: Problemarako soluzio optimoa x
∗ bada, z∗ = cT x∗ eredu lin-
ealerako balio optimoa deitzen da.
9. Deﬁnizioa: Problema lineala bornegabea dela esaten da balio optimo ﬁni-
turik ez duenean, hau da:
z∗ → +∞ edo z∗ → −∞
10. Deﬁnizioa: Problema lineal batek soluzio optimo bat baino gehiago due-
nean
aukerazko
soluzio
optimoak
edo
soluzio
optimo
anizkoitzak dituela esaten da.
Deﬁnizio hauek guztiak eredu linealaren soluzio graﬁkoa aztertzean ikusi gen-
ituen. Ondorengo adibidean deﬁnizio hauetariko batzuk ikusiko ditugu.
Adibidea:
Izan bedi ondoko eredu lineala:
max z = 3x1 + 6x2 + 5x3 + 4x4
ondoko murrizketen menpe
2x1 + 8x2 + x3 + x4 ≤ 6
x1 + x2 + 2x3 + x4 ≤ 4
x1, x2, x3, x4 ≥ 0
Soluzioak algebraikoki kalkulatzeko eredua idazkera estandarrean jarri behar da.
x5 eta x6 nasaitze-
aldagaiak gehituz eredu linealaren idazkera estandarra lortuko
dugu. Matrize idazkeran ereduaren osagaiak ondokoak dira:
c
T = (3 6 5 4)
x
T = (x1 x2 x3 x4 x5 x6)
A =


2 8 1 1 1 0
1 1 2 1 0 1



lxx
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
b
=


6
4


• Eredu honen soluzio bideragarri bat (1 0 0 2 2 1) bektorea da, adibidez.
Bektore hau soluzioa da murrizketak betetzen dituelako eta bideragarria
da bere osagai guztiak ez-negatiboak direlako. Hala ere, ez da oinarriko
soluzioa, A matrizearen heina 2 izanik zero baino handiagoak diren bi os-
agai baino gehiago dituelako.
• Oinarriko soluzio bat kalkulatu ahal izateko oinarri bat aukeratu behar dugu
A matrizean; lehenengo bi zutabeek osatutakoa adibidez:
B =


2 8
1 1


|B| = 0 denez, hau da, lerroak linealki independenteak direnez, aukeratu-
takoa oinarria da, eta ondorioz, oinarriko soluzioa kalkula daiteke:
xB = B
−
1b =


2 8
1 1


−
1 

6
4


=


−1
6
4
3
1
6
−1
3




6
4


=
=


13
3
−1
3


=


x1
x2


Baina soluzio hau ez da bideragarria,
x2 aldagaiak hartutako balioa negati-
boa delako.
• Oinarriko soluzio bideragarri bat kalkulatu ahal izateko, A matrizean oinar-
ri bat aukeratu beharko dugu, aurreko pausoan egin bezala. Oinarriko soluzioaren
aldagai guztiek balio ez-negatiboak izatekotan, lortutako soluzioa bidera-
garria izango da. Hau honela ez balitz, aurreko kasuan geundeke. A ma-
trizeko a1 eta a4 bektoreek osatutako oinarria hartuz gero:
B =


2 1
1 1



4.4. OINARRIZKO TEOREMAK
lxxi
xB =


2 1
1 1


−
1 

6
4


=


2
2


=


x1
x4


Oraingoan bai lortutako oinarriko soluzioa (xB) bideragarria dela. Dagokion
helburu-funtzioaren balioa ondokoa da:
z = c
T x = (3 4)


2
2


= 14
Soluzio hau bideragarria izateaz gain ez-endekatua da, soluzioaren bi os-
agaiak zero baino handiagoak direlako.
2
4.4
Oinarrizko teoremak
Ebazpen graﬁkoan ikusi dugunez, 2 edo 3 aldagai dituzten problemen soluzio op-
timoa soluzio bideragarrien multzo ganbileko mutur-puntuen artean egon daiteke
soilik.
3 aldagai baino gehiago dituzten ereduen soluzioa algebraikoki bilatu behar
da, eta hauetan ere, soluzio optimoak mutur-
puntuetan aurkitzen direla frogatuko
duten teoremak ikusiko ditugu. Multzo ganbilen teoriaren ondorengo emaitzak
erabiltzen dira frogapen horietan:
1. Eredu lineal estandarraren soluzio bideragarrien F multzoa multzo ganbil
eta itxia da.
2. F multzo ganbileko x puntua mutur-puntua dela esaten da baldin eta x
=
λx1+(1−λ)x2 λ ∈ (0, 1) betetzen duten F-ko bi puntu x1 eta x2 existitzen
ez badira.
3. Multzo ganbil itxi eta bornatu bateko edozein x puntu mutur-puntuen kon-
binazio lineal ganbil orokortu moduan idatz daiteke, hau da,
x
=
q
i
=1
λixi , 0 ≤ λi ≤ 1 ,
q
i
=1
λi = 1

lxxii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Ondoko teoremak mutur-puntuak, hau da, oinarriko soluzio bideragarriak zein
diren zehazten digu, horien kalkuluan oinarritzen baita geroago eraikiko dugun
simplex metodoa.
Teorema 4.4.1 Izan bedi idazkera estandarrean emandako eredu lineala:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
x bektorea oinarriko soluzio bideragarria da
⇐⇒ mutur-puntua bada.
Frogapena:
⇒
x oinarriko soluzio bideragarria bada, gehienera jota ere zero baino handi-
agoak diren
m osagai ditu. Demagun lehenengo m osagaiak direla. Orduan:
x
=





xB
−
0





Absurdura eramanez, x ez bada mutur-puntua,
∃x1, x2 ∈ F non:
x
= λx1 + (1 − λ)x2 , 0 < λ < 1 , x1 = x2
Izan bitez x1 =





y1
−
z1





eta x2 =





y2
−
z2





• yi → m x 1 dimentsiokoa, i = 1, 2
• zi → (n − m) x 1 dimentsiokoa, i = 1, 2

4.4. OINARRIZKO TEOREMAK
lxxiii





xB
−
0





= λ





y1
−
z1





+ (1 − λ)





y2
−
z2





λ, (1 − λ) > 0 eta z1, z2 ≥ 0
0
= λz1 + (1 − λ)z2
⇒
z1 = z2 = 0
Beraz, xB konbinazio lineal ganbil murriztu moduan idatz lezaketen bideragarritasun-
eskualdeko puntuek gehienera jota ere
m osagai positibo dituzte (y1 eta y2 bek-
toreei dagozkienak, alegia). x
, x1 eta x2 soluzio direnez, ereduaren murrizketak
betetzen dituzte:
xB S.B. ⇒ xB1a1 + xB2a2 + · · · + xBmam = b
(4.1)
x1 S.B. ⇒
y1
1 a1 + y
2
1 a2 + · · · + y
m
1 am = b
(4.2)
x2 S.B. ⇒
y1
2 a1 + y
2
2 a2 + · · · + y
m
2 am = b
(4.3)
(4.1)-(4.2) eta (4.1)-(4.3) eragiketak eginez honako berdintzak lortzen dira:
(xB1 − y
1
1 )a1 + (xB2 − y
2
1 )a2 + · · · + (xBm − y
m
1 )am = 0
(xB1 − y
1
2 )a1 + (xB2 − y
2
2 )a2 + · · · + (xBm − y
m
2 )am = 0
{a1 . . . am} linealki independenteak direnez, aurreko bi konbinazio linealen es-
kalar guztiek zero izan behar dute, hau da,
xBi − yi1 = 0 ∀i = 1 . . . m
xBi − yi2 = 0 ∀i = 1 . . . m
⇒
x
= x1 = x2
Beraz, x konbinazio lineal ganbil murriztu moduan idaztea posible egingo
duten bideragarritasun-eskualdeko x1 eta x2 2 puntu desberdinik ez dago ⇒ xB
puntuak mutur-puntu izan beharko du.
⇐
x mutur-puntua bada, orduan oinarriko soluzio bideragarria da.

lxxiv
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Demagun x bektoreak zero baino handiagoak diren
k osagai dituela eta gain-
ontzekoak 0 direla.
k
i
=1
xiai = b
x oinarriko soluzio bideragarria dela ikusteko, nahikoa da ai
i = 1 . . . k lin-
ealki independenteak direla frogatzea. Absurdura eramango dugu eta
{a1 . . . ak}
linealki menpekoak direla suposatuko dugu. Horrela, x mutur-puntu ezin daite-
keela izan lortuko dugu, hipotesiaren aurkakoa edukiz. Demagun, ba,
{a1 . . . ak}
linealki menpekoak direla. Hau hala izanik,
∃α = 0
non
k
i
=1
αiai = 0
Gutxienez
αi = 0 bat baduen α bektorea eta ǫ egoki bat aukeratuz gero, bi puntu
desberdin deﬁnituko ditugu:
x1 = x + ǫα
x2 = x − ǫα
ǫ balioaren beharra dago x1 eta x2 bektoreak bideragarriak (x1 ≥ 0 eta x2 ≥ 0)
izango direla ziurtatzeko.
ǫ hau nahi adina handia edo txikia aukeratuko dugu, α-
ren arabera.
α = 0 izateagatik ⇒ x1 = x2. Gure x oinarriko soluzioa beste bi
x1 eta x2 bektore horien konbinazio lineal moduan idaztea posible da. Begira,
bestela:
x
=
1
2
x1 +
1
2
x2 =
1
2
(x + ǫα) +
1
2
(x − ǫα) = x
Honek zera esan nahi du: x ez dela inolaz ere mutur-
puntu izango. Eta, hori gure
hipotesiaren aurka doa. Beraz,
{a1 . . . ak} bektoreek linealki independenteak izan
behar dute eta teorema frogaturik gelditzen da.
2
Eredu lineal baten soluzio optimoak bideragarritasun-eskualdearen mutur-puntu
izan behar duela frogatzen du honako teorema honek:
Teorema 4.4.2 Izan bedi ondoko problema lineal estandarra (bideragarria eta
bornatua):
max z = c
T x
o. m. m.
Ax = b
x
≥ 0

4.4. OINARRIZKO TEOREMAK
lxxv
Helburu-funtzioaren soluzio optimoa F eskualdearen mutur-puntu batean aurk-
itzen da.
Frogapena:
Absurdura eramanez frogatuko dugu
Demagun mutur-puntu ez den x
∗ soluzio optimoa daukagula eta z∗ = cT x∗
problemaren balio optimoa dela. Orduan zera betetzen da:
∀x ∈ F
z = c
T x ≤ cT x∗ = z∗
Izan bedi
{x1 . . . xq} F-ren mutur-puntuen multzoa. Bideragarritasun-eskual-
deko puntu oro mutur-puntuen konbinazio lineal ganbil moduan idaztea posible
da. Honela,
x
∗ =
q
i
=1
λixi , λi ≥ 0
q
i
=1
λi = 1
Helburu-funtzioaren balioa x
∗ puntuan ondokoa da:
z
∗ = cT x∗ = cT
q
i
=1
λixi =
q
i
=1
λic
T x
i
max (cT xi) ≥ cT xi ∀i = 1 . . . q betetzen denez,
z
∗ =
q
i
=1
λic
T x
i ≤
q
i
=1
λi max (c
T x
i) = max (c
T x
i)
q
i
=1
λi = max (c
T x
i)
eta horrenbestez, mutur-puntu ez den puntu batean
(x∗) helburu-funtzioak lortu-
tako balioa (
z∗), mutur-puntu optimoan lortutako balioa baino txikiagoa da. Be-
raz, optimoa mutur-puntu batean aurkitzen da.
2
4.4.1 . teoremari esker zera dakigu:
 oinarriko soluzio bideragarri orori bideragarritasun-
eskualdeko mutur-puntu bat dagokiola eta alderantziz.
4.4.2 . teoreman frogaturik gelditu da ereduaren soluzio optimoa mutur-puntua
dela (oinarriko soluzio bideragarria). Mutur-puntuen kopuru ﬁnitua dagoenez,
soluzioa lortzeko metodo iteratiboa eraikitzea posible da. Bideragarritasun-
eskualdean
inﬁnitu puntu badago ere, oinarriko soluzio bideragarrien kopurua ﬁnitua da; gehienera
jota ere
n zutaberekin egin daitezkeen konbinazio guztiak ondokoak dira.


n
m


=
n!
m! (n − m)!

lxxvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Adibidea:
Izan bedi ondoko problema lineala:
max z = x1 + 2x2
ondoko murrizketen menpe
−x1 + 4x2 ≤ 4
x1 − x2 ≤ 3
x1, x2 ≥ 0
Mutur-puntuak graﬁkoki kalkulatuko ditugu:
Mutur-puntuak:
O = (0 0) , D = (3 0) , A = (0 1) , B = (
16
3
7
3
)
Oinarriko soluzioak algebraikoki kalkulatzeko nasaitze-aldagaiak (
x3 eta x4)
gehitu behar dira hasierako eredu linealean.

4.4. OINARRIZKO TEOREMAK
lxxvii
max z = x1 + 2x2
ondoko murrizketen menpe
−x1 + 4x2 +x3
= 4
x1 − x2
+x4 = 3
x1 . . . x4 ≥ 0
Oinarriko soluzio bideragarrien kopuru maximoa:


4
2


= 6
Horiek guztiak ez dira mutur-
puntu izango, ez direlako guztiak bideragarri izango.
Aurreko soluzio graﬁkoan ikus daiteke 4 mutur-puntu besterik ez dagoela.
Kalkula ditzagun oinarriko soluzio guztiak:









B = {a1, a2} oinarria bada, soluzioa B puntuari dagokio:
xB = B
−
1b =


−1
4
1 −1


−
1 

4
3


=


16
3
7
3











B = {a1, a3} oinarria aukeratuz soluzioa D puntuari dagokio:
xB = B
−
1b =


−1 1
1 0


−
1 

4
3


=


3
7











B = {a1, a4} oinarria izanik soluzioa ez da bideragarria:
xB = B
−
1b =


−1 0
1 1


−
1 

4
3


=


−4
7











B = {a2, a3} denean bideragarria ez den soluzioa lortzen da:
xB = B
−
1b =


4 1
−1 0


−
1 

4
3


=


−3
16



lxxviii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA









B = {a2, a4} izanik soluzioa A-ri dagokio:
xB = B
−
1b =


4 0
−1 1


−
1 

4
3


=


1
4











B = {a3, a4} denean soluzioa 0 puntua da:
xB = B
−
1b =


1 0
0 1


−
1 

4
3


=


4
3


2
Eredu lineal baten soluzioa aurkitzeko mutur-puntuak edo oinarriko soluzio
bideragarriak besterik ez ditugu kontutan izango, puntu horien artean baitago
problemaren soluzio optimoa.
4.5
Simplex metodoa
Soluzio graﬁkoa aztertzean ikusi dugu problemak zein motatako soluzioa izan
dezakeen 
(soluzio bakarra, anizkoitzak, bornegabea), soluziorik izatekotan, noski.
2 aldagai baino gehiago dituzten problemak ebatzi ahal izateko simplex metodoa
erabili beharko dugu. Metodoak soluzioa emateaz gain soluzio hori zer nolakoa
den ere esango digu.
Har dezagun idazkera estandarrean dagoen problema lineala:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0

4.5. SIMPLEX METODOA
lxxix
non
• A → m x n matrizea den.
• cT eta x → n osagaiko lerro-bektorea eta zutabe-bektorea diren.
• b
→ m osagaiko zutabe-bektorea den.
Gogora, eredua idazkera estandarrean ez badago, dagokion idazkera estandarra
lortzea beti dela posible. Horretarako, dagoeneko ikusitako aldaketak eta nasaitze-
aldagaiak erabiliko ditugu.
Idazkera estandarra maximizatze eran dagoen kasurako aztertuko dugu sim-
plex metodoa. Minimizatze kasurako ere eraiki liteke, egokitzapen batzuk besterik
beharko ez liratekeelarik.
Har dezagun 2 azpimatrizetan banatutako A matrizea:
Amxn = (Bmxm/Nmx(n−m))
• B → linealki independenteak diren m bektorez osatua, hau da, oinarria.
• N → B-ko bektoreen menpeko diren gainontzeko n − m bektorez osatua.
4.5.1
Deﬁnizioak, idazkerak eta teoremak
Izan bedi aj ∈ A , aj ∈ B. aj bektorea B oinarriko bektoreen konbinazio lineal
moduan idazteko ondoko idazkera erabiliko dugu:
aj = y1ja1 + y2ja2 + · · · + ymjam =
m
i
=1
yijai
ai ∈ B , i = 1 . . . m izanik.
yj =








y1j
y2j
..
.
ymj








aj-ren koordenatuak B-ren funtzioan sistema hau ebatziz lortzen dira:
aj = Byj , ∃B
−
1 ⇒ y
j = B
−
1a
j

lxxx
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Adibidea:
Demagun idazkera estandarrean dagoen eredu lineal hau daukagula:
max z = 3x1 + 6x2 + 5x3 + 4x4
ondoko murrizketen menpe
2x1 + 8x2 + x3 + x4 +x5
= 6
x1 + x2 + 2x3 + x4
+x6 = 4
x1 . . . x6 ≥ 0
Har dezagun oinarri bat:
B = {a1, a4}
Oinarrikoak ez diren bektoreak, a2, a3, a5, a6 alegia, oinarriko aldagaien kon-
binazio lineal gisa idaztea posible da. a2 adibidez, honela adieraz daiteke:


8
1


= y12


2
1


+ y22


1
1


=


2 1
1 1




y12
y22


y2 =


y12
y22


=


2 1
1 1


−
1 

8
1


=


7
−6


2
• Problemaren hasierako murrizketak eta oinarriko soluzio bideragarriaren
deﬁnizioa erabiliz, ondokoa daukagu:
* Oinarriko soluzioa:
Ax = b
(B/N)





xB
−
xN





= b

4.5. SIMPLEX METODOA
lxxxi
A = (B/N) =








a11 . . . a1m|a1m+1 . . . a1n
a21 . . . a2m|a2m+1 . . . a2n
..
.
am1 . . . amm|amm+1 . . . amn








x
=





xB
−
xN





=














x1
..
.
xm
xm+1
..
.
xn














xB ≥ 0 , xN = 0 ⇒ BxB + N xN = b →
BxB = b → xB = B
−
1b
* Helburu-funtzioaren balioa:
Kostuen edo unitateko prezioen bektorea era berean bana daiteke:
c
T = (cT
B |c
T
N ) = (cB1cB2 . . . cBm|cBm+1 . . . cBn)
Hortaz, eta xN = 0 denez,
z = c
T x = (cT
B |c
T
N )





xB
−
xN





= c
T
B xB
⇒
z = c
T
B xB
• ∀aj ∈ A bektorerako zj = cT
B yj eskalarea deﬁnitzen da, yj horiek B-ren
funtzioan idatzitako aj-ren koordenatuak izanik.
zj =
m
i
=1
c
T
Biyij = cB1y1j + cB2y2j + · · · + cBmymj
zj eskalarea deﬁnitzen da oinarrian ez dauden aj ∈ A bektoreentzat zj − cj
balioak kalkulatu beharko direlako.

lxxxii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Adibidea:
lxxx. orriko adibidearekin jarraituz,
B = {a1, a4} denez aukeratutako oinar-
ria, teknologi koeﬁzienteen matrizea, erabaki-aldagaien bektorea eta helburu-
funtzioaren
kostu-bektorea honela idatz daitezke:
• Teknologi koeﬁzienteen matrizea:
(B|N) =


2 1 8 1 1 0
1 1 1 2 0 1


• Erabaki-aldagaien bektorea:
x
=





xB
−
xN





=

















x1
x4
−
x2
x3
x5
x6

















• Kostu-bektorea:
c
= (cB|cN ) = (3 4|6 5 0 0)
Oinarriko soluzioa (
B = {a1, a4} oinarriarekikoa, alegia) honela kalkulatzen
da:
xB = B
−
1b =


2 1
1 1


−
1 

6
4


=


2
2


=


x1
x4


Gainontzeko aldagaiek (
x2, x3, x5, x6) zero balioa hartzen dute. Helburu-funtzioaren
balioa:
z = c
T
B xB = (3 4)


2
2


= 14

4.5. SIMPLEX METODOA
lxxxiii
a2 bektoreari dagokion z2 eskalarea hauxe da:
z2 = c
T
B y2 = (3 4)


7
−6


= −3
2
Ondorengo teoremari esker, oinarriko soluzio bideragarri bat izanik soluzio
hori hobetzea posible den ala ez jakingo dugu. Eredu linealak ebazteko erabiliko
dugun simplex metodoa teorema honetan oinarritzen da. Soluzioz soluzio (mutur-
puntuz mutur-puntu) mugituko da soluzio optimoa lortu arte.
Teorema 4.5.1 (O.S.B. baten hobekuntza) Izan bedi
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
eredu lineala idazkera estandarrean, xB = B
−
1b bere oinarriko soluzio bidera-
garri bat (O.S.B.) eta
z = cT
B xB helburu-funtzioaren balioa.
Baldin
∃aj ∈ A, aj ∈ B, zj − cj < 0 izanik eta j horrentzat ∃yij > 0, i =
1 . . . m ⇒ ∃
∧
xB beste oinarriko soluzio bideragarri bat zeinak helburu-funtzioari
balio hobea emango dion, hau da,
∧
z≥ z.
Frogapena:
Frogapenaren garapenean ikusiko dugu noiz eta nola hobe daitekeen oinarriko
soluzio bideragarri bat.
Izan bedi xB oinarriko soluzio bideragarri bat. Soluzio izateagatik ereduaren
murrizketak betetzen ditu:
xB1a1 + xB2a2 + · · · + xBmam = b =
m
i
=1
xBiai
(4.4)
Dakigunez,
∀aj ∈ A , aj ∈ B izanik, oinarriko bektoreen konbinazio lineal
moduan idaztea posible da (ikus lxxix.orria):
aj =
m
i
=1
yijai , j = m + 1 . . . n

lxxxiv
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
aj = 0 denez ∃yij = 0 i = 1 . . . m. Izan bedi yrj = 0
aj =
m
i=1
i=r
yijai + yrjar
(4.5)
yrj = 0 denez, ar bektorea 
{a1 . . . aj . . . am} bektoreen funtzioan idatz daiteke.
l.orriko 3.1.2 teoreman ikusi dugunez, oinarriko ar bektorearen ordez aj jarriz
gero lortzen den
∧
B= {a1 . . . aj . . . am}
multzoa ere oinarria da. Ikus dezagun aurreko B oinarriarekiko kalkulatuta dauka-
gun xB soluzioa erabiliz nola kalkula daitekeen oraingo oinarriarekiko
∧
xB soluzioa.
Behin soluzio hori eskuartean izanik helburu-funtzioak hartuko duen
∧
z balioa
kalkulatu ahal izango dugu, eta aurreko
z-rekin konparatuz hobea dela egiaztatu
ahal izango dugu. (4.5) adierazpenean ar askatuz:
ar =
1
yrj
aj −
m
i=1
i=r
yij
yrj
ai
(4.4) adierazpenean, ar bektorea {a1 . . . aj . . . am}-
ren funtzioan idatzitako
adierazpenaz ordezkatua izan daiteke:
m
i=1
i=r
xBiai + xBrar = b
m
i=1
i=r
xBiai + xBr[
1
yrj
aj −
m
i=1
i=r
yij
yrj
ai] = b
Batugaiak bilduz ondokoa lortzen da:
m
i=1
i=r
(xBi −
yij
yrj
xBr)ai +
xBr
yrj
aj = b
∧
B oinarriaren funtzioan dauden m osagai lortu ditugu, eta
∧
xB oinarriko soluzioa
honakoa da:
∧
xB=





xBi −
xBr
yrj
yij
xBr
yrj
i = r
i = r
(4.6)

4.5. SIMPLEX METODOA
lxxxv
∧
xB soluzioak osagai negatiborik badu ez da bideragarria izango. Bideragarria izan
dadin honako bi desberdintzak bete behar dira:
1.
∧
xBi= xBi −
xBr
yrj yij ≥ 0 , i = r , i = 1 . . . m
2.
∧
xBr=
xBr
yrj ≥ 0
Bigarren desberdintza bete dadin,
yrj = 0 eta xBr ≥ 0 direnez, yrj > 0 izan
behar du.
Lehen desberdintza bete dadin honako kasuak izango ditugu:
• Baldin yij < 0 bada orduan xBi, xBr, yrj positiboak direnez soluzioa bider-
agarria izango da:
∧
xBi= xBi − xBr
yij
yrj
≥ 0
• Baldin yij = 0 bada orduan xBi positiboa denez
∧
xBi ere bideragarria izango
da:
∧
xBi= xBi − xBr
yij
yrj
= xBi ≥ 0
• Baldin yij > 0 bada orduan
∧
xBi= xBi − xBr
yij
yrj
≥ 0 ⇐⇒
xBi
yij
−
xBr
yrj
≥ 0 ⇐⇒
xBi
yij
≥
xBr
yrj
Laburbilduz, oinarria utziko duen ar bektoreak honako irizpidea bete behar
du, lortuko dugun oinarriko soluzioa bideragarria izan dadin:
ar/
xBr
yrj
= Min{
xBi
yij
/yij > 0}
(4.7)
Aldaketa honen ondorioz beste oinarri bat eraiki dugu:
∧
B. Oinarri hau eta
hasierako B oinarria bektore bakar batean desberdintzen dira. Oinarriko soluzio
bideragarri bakoitza bideragarritasun-eskualdeko mutur-
puntu bati egokitzen zaionez,
oinarri aldaketaren ondorioz prozesua beste mutur-puntu auzokide batera mugi-
tuko da.
∧
xB mutur-puntu auzokide horretan lortzen den soluzioa eta helburu-
funtzioak bertan lortzen duen balioa ondokoak dira.
∧
xB=
∧
B
−
1
b

lxxxvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
∧
z=
∧
c
T
B
∧
xB
Dagoeneko frogatuta gelditu da (4.7) irizpidea betetzen duen ar bektorea oinar-
ritik atera eta beste oinarri bat eraikiz gero, lor daitekeela beste oinarriko soluzio
bideragarri bat.
Baina, oraindik frogatu ez dena zera da: kalkulatu berri dugun
∧
xB soluzioa xB
baino hobea dela. Ikus dezagun hori gertatzeko oinarriratuko den aj bektoreak
bete beharko duen baldintza zein den.
∧
z=
m
i
=1
∧
cBi
∧
xBi=
m
i=1
i=r
∧
cBi
∧
xBi +
∧
cBr
∧
xBr=
Lortu ditugun
∧
xBi soluzioaren osagaiak ordezkatuz,
∧
z=
m
i=1
i=r
cBi(xBi − xBr
yij
yrj
) + cj
xBr
yrj
= (∗)
Baldin i=r orduan
cBr(xBr − xBr
yrj
yrj
) = 0
Batugaian
i = r baldintza ken daiteke eta honakoa daukagu:
(∗) =
m
i
=1
cBi(xBi − xBr
yij
yrj
) + cj
xBr
yrj
=
Kalkuluak eginez:
∧
z=
m
i
=1
cBixBi −
xBr
yrj
m
i
=1
cBiyij + cj
xBr
yrj
= z −
xBr
yrj
(zj − cj)
Hortaz,
z eta
∧
z-ren arteko aldea hau da:
∧
z= z −
xBr
yrj
(zj − cj)
(4.8)
∧
z> z ⇐⇒ −
xBr
yrj
(zj − cj) > 0 ⇐⇒
xBr
yrj
(zj − cj) < 0
xBr ≥ 0 eta yrj > 0 direnez, helburu-funtzioaren balioa hazi egiten da (
∧
z>
z)
⇐⇒
zj − cj < 0

4.5. SIMPLEX METODOA
lxxxvii
Beraz,
zj −cj < 0 izanik, zenbat eta zj −cj txikiagoa izan, helburu-funtzioaren
balioa orduan eta gehiago handiagotuko da.
Oinarrian sartuko da ak bektorea, zeinak ondoko baldintza beteko duen:
ak ∈ N/zk − ck = Min {zj − cj/zj − cj < 0}
ak oinarrian sartzen bada, ar aterako da:
ar/
xBr
yrk
= Min {
xBi
yik
/yik > 0}
ak bada oinarrian sartzen den bektorea, 4.6 eta 4.8 formuletan j ordez k jarri
beharko dugu aldaketari egokitzeko. 2

lxxxviii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Adibidea:
Aurreko teorema erabiliko dugu ondoko problema ebazteko:
max z = 4x1 + 5x2 + x3
ondoko murrizketen menpe
x1 + x2 + x3 ≤ 8
−x1 − 2x2 + x3 ≤ −2
x1, x2, x3 ≥ 0
Nasaitze-aldagaiak gehituz eta b
≥ 0 eginez idazkera estandarra lortuko dugu:
max z = 4x1 + 5x2 + x3
ondoko murrizketen menpe
x1 + x2 + x3 +x4
= 8
x1 + 2x2 − x3
−x5 = 2
x1 . . . x5 ≥ 0
B = 
{a1, a4} oinarria aukeratzen badugu, adibidez, lortzen dugun soluzioa bider-
agarria da:
xB = B
−
1b =


1 1
1 0


−
1 

8
2


=


0
1
1 −1




8
2


=


2
6


z = c
T
B xB = (4 0)


2
6


= 8
Soluzio bideragarri hau optimoa den ala ez ikusi behar da. Horretarako
∀aj ∈ B
bektoreen
zj − cj balioak kalkulatu behar dira. Zero baino txikiagorik existitzen
bada, soluzioa hobetzea posible dela dio teoremak. Oinarrian ez dauden aj bek-
toreen
zj − cj balioak:

4.5. SIMPLEX METODOA
lxxxix















a2 =


1
2


; y2 = B
−
1a2 =


0
1
1 −1




1
2


=


2
−1


z2 − c2 = c
T
B y2 − c2 = (4 0)


2
−1


− 5 = 3 > 0















a3 =


1
−1


; y3 =


0
1
1 −1




1
−1


=


−1
2


z3 − c3 = (4 0)


−1
2


− 1 = -5 < 0 → Soluzioa hobe daiteke















a5 =


0
−1


; y5 =


0
1
1 −1




0
−1


=


−1
1


z5 − c5 = (4 0)


−1
1


− 0 = -4 < 0 → Soluzioa hobe daiteke
Soluzioa hobetzeko bi aukera ditugu. Zein da oinarriratuko den bektorea?
ak / zk − ck = min {zj − cj / zj − cj < 0} =
= min {z3 − c3 = −5 , z5 − c5 = −4} = −5
a3 oinarriratzen da.
y3 =


y13
y23


=


−1
2


Oinarritik irtengo den bektorea zehazteko, y3 bektorea eta xB osagaiak kontutan
izango ditugu. Oinarritik irtengo da:
ar /
xBr
yr3
= min {
xBi
yi3
/ yi3 > 0} = min {
6
2
} = 3
a4 oinarritik irtengo da. Oinarria aldatuko da, eta berarekin batera oinarriko
soluzioa eta helburu-funtzioaren balioa:
∧
B= {a1, a3}

xc
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
∧
xB=
∧
B
−
1
b
=


1
2
1
2
1
2
−1
2




8
2


=


5
3


∧
z=
∧
c
T
B
∧
xB= (4 1)


5
3


= 23 > 8
Soluzioa hobetu dela dakusagu,ba.
Soluzio berria kalkulatzeko ez da beharrezkoa
∧
B
−
1
kalkulatzea, oraingoan
horrela egin badugu ere. Aurreko soluzioan oinarrituz aurreko teoremak emat-
en digun formularen bidez kalkula daiteke.
2
Adibidean ikusten da, oinarria aldatzearen ondorioz lortutako
∧
xB soluzioa
bideragarria dela eta puntu horretan helburu-
funtzioak aurreko puntuan baino balio
hobea lortzen duela. Oinarriko ez diren bektoreei dagozkien
zj − cj balioen artean
negatiborik dagoen bitartean, teorema erabiltzen jarrai dezakegu.
Halakoren batean, oinarriko ez diren bektoreen
zj − cj balioak zero baino
handiago edo berdinak izango dira, eta orduan izango dugu ereduaren soluzio
bideragarri optimoa. Honako teoremari esker dakigu hori.
Teorema 4.5.2 Izan bitez
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
problema lineala, xB = B
−
1b bere O.S.B. bat eta z = cT
B xB helburu-funtzioaren
balioa.
Baldin
∀aj ∈ A, zj − cj ≥ 0 ⇒ xB O.S.B.Optimoa da.
Teorema hau ez dugu frogatuko.
∀aj ∈ A-rako zj − cj ≥ 0 betetzen denetan
helburu-funtzioaren balioa ezin izango dugula hobetu jakitearekin nahikoa dugu.
Hau hala gertatzen dela dakigu, soluzio bideragarri baten hobekuntzaren teoreman
z eta
∧
z arteko erlazioa honakoa dela ikusi baitugu:
∧
z= z −
xBr
yrk
(zk − ck)
ak bektorea oinarriratzen bada, zk − ck balio negatiboen eraginez z handitzea
lortuko da.

4.5. SIMPLEX METODOA
xci
4.5.2
Soluzio optimo bornegabeak
Problema linealen soluzio graﬁkoa ikustean esan dugunez, zenbait problema lin-
ealen soluzio optimoa ez da ﬁnitua. Horietan, helburu-funtzioak hartzen duen
balioa amaierarik gabe haz daiteke.
Egoera horretan egoteko bete behar diren baldintzak ondoko teoremak azaltzen
ditu.
Teorema 4.5.3 Demagun idazkera estandarrean dagoen problema lineala:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
Eman dezagun simplex metodoaren edozein iteraziotan
zk − ck < 0 duen ak bek-
torea existitzen dela. Problema linealaren soluzioa bornegabea da baldin
k hor-
rentzat
yik ≤ 0 bada ∀i = 1 . . . m.
Frogapena:
Izan bedi xB oinarriko soluzio bideragarri bat. Soluzio izateagatik, ereduaren
murrizketak betetzen ditu:
xB1a1 + xB2a2 + · · · + xBmam = b
ak bektoreak sartu behar badu oinarrian eta yk bektorearen osagai guztiak negat-
iboak badira ezin izango da oinarritik bektorerik atera, oinarriko soluzio bider-
agarri baten hobekuntzaren teoreman ikusi baitugu irten behar duen bektoreak
baldintza hori bete behar duela derrigorrez.
Aurreko adierazpenari
θak gehitzen eta kentzen badiogu (θ > 0), adierazpena
ez da aldatzen.
xB1a1 + xB2a2 + · · · + xBmam − θak + θak = b
m
i
=1
xBiai − θak + θak = b
(4.9)
ak ez dago oinarrian, baina oinarriaren funtzioan idatz daiteke.
ak =
m
i
=1
yikai

xcii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
ak bektorearen adierazpen hori (4.9) ekuazioan ordezkatuz gero ondokoa lortuko
dugu:
m
i
=1
xBiai − θ
m
i
=1
yikai + θak = b
m
i
=1
(xBi − θyik)ai + θak = b
Honela ba, zero baino handiagoak diren
m osagai baino gehiago (ondorioz, ez
oinarrikoa) izan ditzakeen soluzioa daukagu:























xB1 − θy1k
xB2 − θy2k
..
.
xBm − θymk
0
..
.
+θ
..
.
0























Soluzio hori bideragarria dela froga daiteke,
xBi eta θ positiboak eta yik negatiboa
direlako:
xBi − θyik ≥ 0 ∀i = 1 . . . m
θ > 0
Beraz, F multzokoa da.
Puntu horretan helburu-funtzioaren balioa kalkula daiteke:
∧
z=
m
i
=1
cBi(xBi − θyik) + ckθ =
m
i
=1
cBixBi − θ
m
i
=1
cBiyik + ckθ =
= z − θzk + θck = z − θ(zk − ck)
zk − ck < 0 denez,
∧
z ∞-raino haz daiteke θ ∞-raino doan ahala. Problemak ez
dauka soluzio bornaturik.

4.5. SIMPLEX METODOA
xciii
2
Adibidea:
Ondoko eredu linealaren soluzio optimoa kalkulatuko dugu:
max z = −3x1 + 2x2
ondoko murrizketen menpe
x1 − x2 ≤ 5
2x1 − 3x2 ≤ 10
x1, x2 ≥ 0
Dagokion idazkera estandarra:
max z = −3x1 + 2x2
ondoko murrizketen menpe
x1
−x2 +x3
= 5
2x1 −3x2
+x4 = 10
x1 . . . x4 ≥ 0
Oinarri bat aukeratuko dugu:
B = {a3, a4} = I
B
−
1 = I
xB = B
−
1b =


5
10


oinarriko soluzio bideragarria da
Hobekuntzaren teorema erabiliko dugu.
zj − cj balioak kalkulatuko ditugu, oinar-
rira daitekeen bektorerik ba al den ikusteko.
• a1 → y1 = B
−
1a1 =


1
2


, z1 = c
T
B y1 = (0 0)


1
2


= 0
z1 − c1 = 3

xciv
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
• a2 → y2 = B
−
1a2 =


−1
−3


, z2 = c
T
B y2 = (0 0)


−1
−3


= 0
z2 − c2 = −2
Egiazta daiteke oinarriko diren bektoreen
zj − cj balioak zero direla.
• a3 → y3 = B
−
1a3 =


1
0


, z3 = c
T
B y3 = 0
z3 − c3 = 0
• a4 → y4 = B
−
1a4 =


0
1


, z4 = c
T
B y4 = 0
z4 − c4 = 0
∃zj − cj < 0 , min {zj − cj/zj − cj < 0} = −2 = z2 − c2
Hortaz, a2 oinarrira sartuko da.
a2 bektorearen koordenatu guztiak negatiboak dira. Ezin izango dugu, ba,
oinarritik bektorerik atera. Lortutako soluzioa bornegabea da. Aurreko teoremako
baldintzak betetzen direla ikusten da. Ikus dezagun soluzio graﬁkoa:
2
4.5.3
Soluzio optimo anizkoitzak
Helburu-funtzioari balio optimoa ematen dion aldagai multzoa bakarra ez bada
aukerazko soluzio optimoak edo soluzio optimo anizkoitzak daudela esaten da.
Soluzio anizkoitz hauek, edozein soluzio bezala, eskualde bornatu edo borne-
gabean aurki daitezke ondoko teoremek erakusten dutenez.

4.5. SIMPLEX METODOA
xcv
Teorema 4.5.4 Demagun idazkera estandarrean dagoen problema lineala:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
Izan bedi
zj − cj ≥ 0 ∀aj ∈ A. Baldin ∃ak ∈ A, ak ∈ B, zk − ck = 0 eta
k horrentzat ∃yik > 0 i = 1 . . . m
⇒
problema linealak soluzio optimo
anizkoitzak ditu eta une horretako oinarria optimoa da.
Frogapena:
Izan bedi xB oinarriko soluzio bideragarria.
∀aj ∈ A , aj ∈ B , zj − cj ≥ 0 orduan xB optimoa da.
∃zk − ck = 0 → ak oinarrian sar daiteke. Oinarritik ar aterako dugu:
ar/
xBr
yrk
= min {
xBi
yik
/yik > 0}
B oinarritik ar atera eta ak sartuz beste
∧
B oinarri bat eta dagokion
∧
xB O.S.B.
lortzen ditugu. Helburu-funtzioaren balioa orain ondokoa da:
∧
z= z −
xBr
yrk
(zk − ck) = z − 0 = z
Beraz,
∧
xB ere optimoa da, helburu-funtzioak aurreko xB soluzio optimoarekin
lortutako balio optimo berbera lortzen duelako.
2
Froga daiteke xB eta
∧
xB soluzioen konbinazio ganbil guztiak soluzio bidera-
garri optimo direla 
(ez oinarrikoak). Hori frogatzen du hurrengo teoremak soluzio-
kopuru ﬁniturako.
Teorema 4.5.5 Izan bitez x1 . . . xp O.S.B.Optimoak ⇒ x1 . . . xp-
ren konbinazio
lineal ganbil orokortu guztiak S.B.O.(ez oinarriko) dira.
Frogapena:
Izan bedi x
=
p
i
=1
µixi , µi ≥ 0 , ∀i ,
p
i
=1
µi = 1
x soluzioa, bideragarria eta optimoa dela frogatu behar da.

xcvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
1. x soluzioa da.
∀i = 1 . . . p
xi soluzio dira, beraz Axi = b, hau da,
murrizketak betetzen dituzte.
Ax = A(
p
i
=1
µixi) =
p
i
=1
µiAxi = b
p
i
=1
µi = b → soluzioa da.
2. x bideragarria da.
∀i = 1 . . . p xi ≥ 0, bideragarriak dira.
x
=
p
i
=1
µixi, µi ≥ 0 ∀i = 1 . . . m izanik ⇒ x ≥ 0 → x bideragarria
da.
3. x optimoa da. xi O.S.B.O. direnez, z
∗ = cT
i xi ∀i = 1 . . . p
c
T x = cT
p
i
=1
µixi =
p
i
=1
µic
T x
i = z
∗
p
i
=1
µi = z
∗ → optimoa da.
2
Aurreko bi teoremen baldintzetan (4.5.4 eta 4.5.5 teoremetan) lortzen diren
soluzioetako aldagaiak bornatuak dira baina bornegabeko aldagaidun soluzio op-
timoak ere egon daitezke. Horretarako bete behar diren baldintzak ondoko teore-
man aipatzen dira.
Teorema 4.5.6 Izan bitez
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
problema lineala, xB = B
−
1b O.S.B.O. bat, z = cT
B xB helburu-funtziorako
balio optimoa, hau da,
zj − cj ≥ 0 , ∀aj ∈ A , aj ∈ B.
Baldin
∃ak ∈ A , ak ∈ B zk − ck = 0 eta yik ≤ 0 ∀i = 1 . . . m ⇒ aldagai
bornegabeko soluzio optimo anizkoitzak daude.
Frogapena:

4.5. SIMPLEX METODOA
xcvii
ak bektorearen yik osagaien artean positiborik ez dagoenez, m + 1 osagai ez-
negatiboz osatutako honelako soluzioa eraiki daiteke:
∧
x
=























xB1 − θy1k
xB2 − θy2k
..
.
xBm − θymk
0
..
.
θ
..
.
0























=

















xB1
xB2
..
.
xBm
0
..
.
0

















+ θ























−y1k
−y2k
..
.
−ymk
0
..
.
1
..
.
0























θ > 0 da eta edozein balio har dezake. Helburu-funtzioaren balioa ondokoa da:
∧
z= z − θ(zk − ck) = z
zk − ck = 0 denez,
∧
z= z. Beraz,
∧
x puntuak
θ-ren bidez adierazten dituen soluzio
guztiak optimoak dira. Soluzio hauek 4.5.3 teoremakoen modura eraikitzen dira,
kasu honetan
zk − ck = 0 izanik.
2
4.5.4
Hasierako oinarria
Idazkera estandarrean daukagun eredu lineal baten soluzio optimoa lortzeko oinar-
riko soluzio bideragarri batetik abiatuko gara. Lehen soluzio hori kalkulatzea oso
erraza da lehen oinarritzat oinarri kanonikoa hartzen bada. Geroago ikusiko dugu,
kalkulu horiek egin daitezkeela
B
−
1 kalkulatu gabe. Behin hasierako soluzio bat
lortu dugula, hobekuntzaren teorema erabiliko dugu eta hasierako soluzio hori
hobetu egingo dugu, optimaltasun baldintzak beteko diren arte.
Lehen oinarri kanonikoa eraikitzerakoan honako bi kasuekin egin dezakegu
topo:
1. NASAITZE-ALDAGAIEZ OSATURIKO LEHEN OINARRIA.

xcviii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Hasierako problema idazkera kanonikoan badago, eta b
≥ 0 bada, zera
daukagu:
max z = c
T x
o. m. m.
Ax ≤ b
x
≥ 0
Idazkera estandarrean jartzeko y nasaitze-aldagaien bektorea gehituko diegu
murrizketei:
max z = c
T x
Ax + y = b
x
, y ≥ 0
Nasaitze-aldagaien y bektoreari oinarri kanonikoa dagokio. Lehen oinar-
ritzat B=I hartuz gero,
B−1 = I, ondoko kalkuluak egin daitezke:
xB = B
−
1b = Ib = b ≥ 0
Beraz, soluzioa bideragarria da.
• ∀aj ∈ A B
−
1a
j = yj
⇒ yj = aj
• B oinarria nasaitze-bektorez osaturik egoteagatik cT
B = 0 eta zj =
cT
B yj = 0 betetzen dira. Hortaz, zj − cj = −cj
da
∀aj ∈ A
• z = cT
B xB = 0xB = 0
Ikusten denez,
B−1 kalkulatzeko beharrik ez dugu izango, eta hasierako
oinarriari dagozkion kalkuluak ereduaren parametro dira.

4.5. SIMPLEX METODOA
xcix
Adibidea:
Har dezagun honako eredu lineala:
max z = 2x1 + 3x2
ondoko murrizketen menpe
3x1 + x2 ≤ 2
x1 − x2 ≤ 3
x1, x2 ≥ 0
Nasaitze-aldagaiak gehitu ondoren, eredua idazkera estandarrean honakoa
da:
max z = 2x1 + 3x2
ondoko murrizketen menpe
3x1 + x2 +x3
= 2
x1 − x2
+x4 = 3
x1 . . . x4 ≥ 0
Lehen oinarri gisa
B = I = {a3, a4} hartuta zera lortzen da:
• xB = B
−
1


2
3


= I


2
3


=


2
3


• ∀aj ∈ A, zera lortzen da:
* a1 =


3
1


→ y1 = B
−
1


3
1


=


3
1


* a2 =


1
−1


→ y2 = B
−
1


1
−1


=


1
−1



c
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
* a3 =


1
0


→ y3 = B
−
1


1
0


=


1
0


* a4 =


0
1


→ y4 = B
−
1


0
1


=


0
1


• cT
B = 0
T izanik zera lortzen da:
* a1 → z1 − c1 = c
T
B y1 − c1 = 0
T


3
1


− 2 = −2
* a2 → z2 − c2 = c
T
B y2 − c2 = 0
T


1
−1


− 3 = −3
* a3 → z3 − c3 = c
T
B y3 − c3 = 0
T


1
0


− 0 = 0
* a4 → z4 − c4 = c
T
B y4 − c4 = 0
T


0
1


− 0 = 0
• z = cT
B xB = 0
T


2
3


= 0
Argi gelditzen da problemak ematen dizkigun datuekin hobekuntzaren teo-
rema erabiltzen has gaitezkeela
B−1 kalkulatzeko beharrik izan gabe.
2. ALDAGAI ARTIFIZIALAK LEHEN OINARRIAN
Ereduaren murrizketen artean
= edo ≥ erako murrizketarik baldin bada-
go, nasaitze-aldagaiez osatutako oinarri kanonikorik ezin izango da lortu.
Hori konpontzeko aldagai artiﬁzial izena hartzen duten aldagaiak erabiltzen
dira.

4.5. SIMPLEX METODOA
ci
Adibidea:
Demagun ondorengo eredu lineala:
max z = 3x1 + x2
ondoko murrizketen menpe
x1 + x2 ≤ 3
x1 + 2x2 ≥ 2
x1, x2 ≥ 0
Idazkera estandarrean jartzeko nasaitze-aldagai bana gehitu eta kenduko
diegu murrizketen ezker aldeei, hurrenez hurren.
max z = 3x1 + x2
ondoko murrizketen menpe
x1 + x2
+x3
= 3
x1 + 2x2
−x4 = 2
x1 . . . x4 ≥ 0
Lehen oinarritzat
B = {a3, a4} aukeratuko bagenu, hasierako kalkuluak:
• Oinarriko soluzioa:
B = B
−
1 =


1
0
0 −1


xB =


1
0
0 −1




3
2


=


3
−2


Bideragarria ez den hasierako soluzioa lortuko genukeela dakusagu.
Bigarren murrizketan aldagai artiﬁzial bat gehituko dugu. Honela geldituko
zaizkigu murrizketak:

cii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
x1 + x2
+x3
= 3
x1 + 2x2
−x4 + w1 = 2
w1 ≥ 0 aldagai artiﬁzialari esker, lehen oinarria B = {a3, aw1} oinarri
kanonikoa da eta lortuko dugun lehen soluzioa oinarriko soluzio bider-
agarria (O.S.B.) da:
xB = B
−
1b =


3
2


=


x3
w1


Hori soluzioa bada, baina ez hasierako problemarena, aldagai arti-
ﬁziala
w1 = 2 > 0 delako. Aldagai artiﬁziala positiboa (eta ez zero)
izateak, hasierako
x1 + 2x2 − x4 = 2 murrizketa ez betetzea eragiten
du.
Guri, noski, hasierako problemaren (aldagai artiﬁzialak sartu aurretik
geneukan problemaren) soluzioak interesatzen zaizkigu. Horretarako,
w1 = 0 izango duten soluzioak lortu nahi ditugu. Horietara iristeko
helburu-funtzioa zenbaki handi batez zigortuko dugu. Kalkuluak es-
kuz egiteko nahikoa da ﬁnkatu gabeko
−M zenbaki negatibo handi
batez zigortzea. Balio negatibo handi horri esker, aldagai artiﬁziala
oinarrian mantentzea kostu handikoa izango da, eta berehala aldagai
artiﬁziala oinarritik irtengo dela ikusiko dugu. Behin aldagai arti-
ﬁziala oinarriko ez denean, dauzkagun soluzioak hasierako proble-
maren soluzio ere izango dira beti; bestela, hasierako problemak ez
du soluziorik izango.
max z = 3x1 + x2 − Mw1
ondoko murrizketen menpe
x1 + x2
+x3
= 3
x1 + 2x2
−x4 + w1 = 2
x1 . . . x4, w1 ≥ 0
• ∀aj ∈ A , yj = B
−
1a
j
⇒ yj = aj.

4.5. SIMPLEX METODOA
ciii
• zj − cj kalkulatzeko cT
B = (0 − M ) dela kontutan izan beharko dugu.
*
z1 − c1 = (0 − M)


1
1


− 3 = −M − 3
*
z2 − c2 = (0 − M)


1
2


− 1 = −2M − 1
*
z3 − c3 = (0 − M)


1
0


= 0
*
z4 − c4 = (0 − M)


0
−1


= M
*
zw1 − cw2 = (0 − M)


0
1


+ M = 0
• z = (0 − M)


3
2


= −2M
Aldagai artiﬁzialek oinarria uzten dutenean ez dira berriz oinarriratuko, helburu-
funtzioa zigortuta dagoelako. Une horretatik aurrera lortzen diren soluzioak hasier-
ako problemaren soluzio ere badira.
4.5.5
Simplex metodoaren taula
Demagun idazkera kanonikoan dagoen eredu lineal baten A matrizea
m x n neur-
rikoa dela, eta idazkera estandarra izateko
m nasaitze-aldagai sartzen direla.
Simplex metodoaren edozein iteraziotako informazioa era honetako taula batean
jasotzen da:
HASIERAKO ALDAGAIAK
ALDAGAI LAGUNTZAILEAK
x1
. . .
xn
xn+1
. . .
xn+m
O.B.
z1 − c1
. . .
zn − cn
zn+1 − cn+1
. . .
zn+m − cn+m
z
cB1
aB1
y11
. . .
y1n
y1,n+1
. . .
y1,n+m
xB1
.
.
.
.
.
.
.
.
.
.
.
.
cBm
aBm
ym1
. . .
ymn
ym,n+1
. . .
ym,n+m
xBm

civ
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
• Taulatik kanpo x1 . . . xn+m eredu linealeko aldagai guztiak dauzkagu, nasaitze-
aldagaiak eta aldagai artiﬁzialak barne (baldin badaude, noski).
x1 . . . xn
hasierako aldagaiak dira eta
xn+1 . . . xn+m gehitu ditugunak.
• Taulatik kanpo baita, zutabe bat osatuz, cT bektorearen oinarriko osagaiak
daude:
cB1 . . . cBm.
• Taulako azken zutabean une horretako oinarriko soluzio bideragarriaren os-
agaiak daude:
xB1 . . . xBm
• Lehen lerroan zj − cj balioak idazten dira. Balio adierazle izena hartzen
dute, eta lerroa lerro adierazlea da. Lerro horretako azken balioa,
z, helburu-
funtzioaren balioa da.
• Lehen zutabean une horretan oinarria osatzen duten bektoreak daude (O.B.):
aB1 . . . aBm.
• Gainontzeko zutabeetan eredu linealeko bektore guztien koordenatuak ja-
sotzen dira, uneko oinarriaren funtzioan.
Adibidea:
xcix. orriko adibideko ereduari dagokion simplex metodoaren lehen taula
eraikiko dugu. Dagoeneko badaukagu ereduaren idazkera estandarra, eta
B =
{a3, a4} = I oinarriari dagozkion kalkuluak ere baditugu.
Guztiarekin, simplex metodoaren lehen taula hauxe da:
x1 x2 x3 x4
-2
-3
0
0
0
0
a3
3
1
1
0
2
0
a4
1
-1
0
1
3
2
Oro har, simplex metodoaren taula honela idatz daiteke:

4.6. SIMPLEX ALGORITMOA
cv
x1 x2 . . . xn
xn+1 xn+2 . . . xn+m
cT
B B
−
1A − cT
cT
B B
−
1
cT
B xB
cB1
aB1
cB2
aB2
B−1A
B−1
xB
..
.
cBm
aBm
Lehenengo taulan identitate matrizea zegoen zutabeetan aurkitzen da
B−1,
simplex metodoaren edozein iteraziotan gaudela ere. Lehen oinarria nasaitze-
aldagaiez osaturik bazegoen, orduan goiko taulan adierazitako lekuan agertuko
da. Bestela, zutabeen kokapena identiﬁkatu egin beharko da.
Ondoko adibidean ikusiko dugunez, aldagai artiﬁzialak behar izatekotan taula
berdin osatzen da.
Adibidea:
Har dezagun ci. orriko adibidea eta begira dagokion simplex taula:
x1
x2
x3 x4 w1
-M-3
-2M-1
0
M
0
-2M
0
a3
1
1
1
0
0
3
-M
aw1
1
2
0
-1
1
2
Identitate-matrizea x3 eta w1 bektoreei dagozkien zutabeek osatzen dute orain-
goan. Zutabe horietan egongo da
B−1 iterazio guztietan.
2
4.6
Simplex algoritmoa
Demagun idazkera estandarrean dagoen eredu lineala daukagula, eta beharrezko
aldagaiak gehitu dizkiogula lehen oinarria
B = I identitatea izateko. Honakoak
dira simplex metodoan jarraitu beharreko urratsak:

cvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
1. urratsa: Hasierako taula eraiki.
2. urratsa:
• Baldin ∀aj ∈ A , aj ∈ B zj − cj ≥ 0 → 3. urratsera joan.
• Baldin ∃zj − cj < 0 ⇒ Soluzioa hobe daiteke. 4. urratsera joan.
3. urratsa:
• Baldin oinarrian aldagai artiﬁzialik ez badago, orduan daukagun soluzioa
optimoa da.
* Baldin
∃ak ∈ A , ak ∈ B zeinarentzat zk − ck = 0 den, eta k
horrentzat
∃yik > 0
i = 1 . . . m, orduan problemak soluzio
optimo anizkoitzak ditu. Joan 5. urratsera.
* Baldin
∃ak ∈ A, ak ∈ B zeinarentzat zk − ck = 0 eta k hor-
rentzat
yik ≤ 0 ∀i = 1 . . . m orduan problemak soluzio opti-
mo anizkoitzak ditu. Soluzioaren aldagairen bat bornegabea da.
Amaitu.
* Bestela xB da soluzio optimo bakarra. Amaitu.
• Bestela, problemak ez dauka soluziorik. Amaitu.
4. urratsa:
• Baldin zj −cj < 0 balioren batetarako, bere yj bektorearen osagai guz-
tiak zero baino txikiago edo berdinak badira, orduan soluzioa borne-
gabea da. Amaitu.
• Bestela, 5. urratsera joan.
5. urratsa:
 Oinarrira sartuko den ak bektorea eta oinarritik irtengo den ar bek-
torea aukeratuko ditugu.
• Oinarrira sartuko den ak bektorea:
zk − ck = Min {zj − cj/zj − cj ≤ 0}
Oinarrira sartzen den ak bektorearen koordenatuak yk bektorekoak di-
ra. Zutabe hau pibot-zutabea da.

4.6. SIMPLEX ALGORITMOA
cvii
• Oinarritik irtengo den ar bektoreak hau beteko du:
xBr
yrk
= Min {
xBi
yik
/yik > 0}
Oinarriratzen den ak bektoreak eta oinarritik irtetzen den ar bektoreak yrk
elementua ﬁnkatzen dute. Hau pibot-a da eta lerroa pibot-lerroa da. Joan 6.
urratsera.
6. urratsa: Hurrengo taula kalkulatu:
• Lehen zutabean oinarri eguneratua osatzen duten bektoreak idatzi.
• Taulako r lerroa kalkulatzeko aurreko taulako r lerroa (pibot-lerroa)
pibot-az zatituko dugu.
• Gainontzeko i lerroak (i = r) lortzeko zenbait biderkatzaile erabiliko
dugu. Biderkatzaile hauek soluzioaren hobekuntzaren teorematik era-
tortzen dira, frogapenik ikusiko ez badugu ere. Lerro bakoitzarentzat
biderkatzaile bat kalkulatuko dugu.
* 1. lerrorako biderkatzailea
→
y1k
yrk
* 2. lerrorako biderkatzailea
→
y2k
yrk
..
.
*
m. lerrorako biderkatzailea →
ymk
yrk
Biderkatzaile horiek lortzeko pibot-zutabeko
yik balioak erabiltzen di-
ra.
i lerro berri bakoitza kalkulatzeko, aurreko taulako i lerroari zera
kendu behar zaio: pibot-lerroa, lerroari dagokion biderkatzaileaz biderkatu-
ta. Lerro adierazlea ere berdin kalkulatzen da. 2. urratsera joan
Taula eguneratuaren zutabeak lortzeko egiten diren kalkulu guzti hauek hobekuntzaren
teoreman frogatutakoak dira. Ikus dezagun, adibide baten bidez, simplex algorit-
moa nola erabiltzen den.
Adibidea:

cviii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Programazio linealeko ondoko problema ebatziko dugu simplex metodoa er-
abiliz:
max z = 7x1 + 4x2 + 6x3 + 5x4
ondoko murrizketen menpe
2x1 + x2 + 2x3 + x4 ≤ 10
2x1 − x2 + 4x3 + 2x4 ≤ 26
3x1 + x2 − 2x3 + 3x4 ≤ 45
x1, x2, x3, x4 ≥ 0
Idazkera estandarrean:
max z = 7x1 + 4x2 + 6x3 + 5x4
ondoko murrizketen menpe
2x1 + x2 + 2x3 + x4 +x5
= 10
2x1 − x2 + 4x3 + 2x4
+x6
= 26
3x1 + x2 − 2x3 + 3x4
+x7 = 45
x1 . . . x7 ≥ 0
Hona hemen simplex metodoa erabiliz lortutako kalkulu guztiak. Oinarri-
ratzen den bektorea eta oinarritik irtetzen dena gezi baten bidez adieraziak daude,
eta pibot balioa lauki batez inguratua dator, metodoaren urratsen jarraipena er-
razagoa izan dadin. Gainera, eskubialdean lerroen biderkatzaileak idatzi ditugu.
Jarraitutako pauso guztiak taulen ondoren zehaztuak datoz pausoz-pauso.

4.6. SIMPLEX ALGORITMOA
cix
x1
x2
x3
x4
x5
x6 x7
Biderk.
-7
↓
-4
-6
-5
0
0
0
0
−7
2
a5
2
1
2
1
1
0
0
10
←
a6
2
-1
4
2
0
1
0
26
1
a7
3
1
-2
3
0
0
1
45
3
2
0
−1
2
1
−3
2 ↓
7
2
0
0
35
-3
a1
1
1
2
1
1
2
1
2
0
0
5
←
a6
0
-2
2
1
-1
1
0
16
2
a7
0
−1
2
-5
3
2
−3
2
0
1
30
3
3
1
4
0
5
0
0
50
a4
2
1
2
1
1
0
0
10
a6
-2
-3
0
0
-2
1
0
6
a7
-3
-2
-8
0
-3
0
1
15
1. iterazioa
Taula hasieratu. Ondoren, oinarritik irtengo den eta oinarriratuko den bektore-
ak ﬁnkatuko ditugu:
• Oinarriratu? Min {-7,-4,-6,-5}=-7 → a1 bektorea sartuko da
• Irten? Min { 10
2 ,
26
2 ,
45
3 }=Min {5,13,15}=5 → a5 bektorea irtengo da
• Pibot balioa 2 da
• Pibot-lerroren eguneraketa: Lerro bera pibot balioaz zatitu besterik ez da
egin behar. Honela,
2
2 ,
1
2 ,
2
2 ,
1
2 ,
1
2 ,
0
2 ,
0
2 ,
10
2 balioak lortzen dira.
• Gainontzeko lerroen eguneraketa:
* Lerro adierazlea. Biderkatzailea:
−7
2
(−7 , −4 , −6 , −5 , 0 , 0 , 0 , 0) − (−
7
2
)(2 , 1 , 2 , 1 , 1 , 0 , 0 , 10) =

cx
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
= (0 , −
1
2
, 1 , −
3
2
,
7
2
, 0 , 0 , 35)
* 2. lerroa. Biderkatzailea: 1
(2 , −1 , 4 , 2 , 0 , 1 , 0 , 26) − 1(2 , 1 , 2 , 1 , 1 , 0 , 0 , 10) =
= (0 , −2 , 2 , 1 , −1 , 1 , 0 , 16)
* 3. lerroa. Biderkatzailea: 3
2
(3 , 1 , −2 , 3 , 0 , 0 , 1 , 45) −
3
2
(2 , 1 , 2 , 1 , 1 , 0 , 0 , 10) =
= (0 , −
1
2
, −5 ,
3
2
, −
3
2
, 0 , 1 , 30)
2. iterazioa
Bigarren taula:
∃zj − cj < 0 ; z2 − c2 , z4 − c4 ⇒ soluzioa ez da optimoa.
• Oinarriratu? Min {−1
2 , −
3
2 } = −
3
2
→ a4 bektorea
• Irten? Min { 5
1
2
, 16
1 ,
30
3
2
} = Min {10, 16, 20} = 10 → a1 bektorea
• Pibot balioa: 1
2
• Pibot-lerroaren kalkuluak:
2 (1 ,
1
2
, 1 ,
1
2
,
1
2
, 0 , 0 , 5) = (2 , 1 , 2 , 1 , 1 , 0 , 0 , 10)
• Gainontzeko lerroenak:
* Lerro adierazlea. Biderkatzailea:
−3
(0 , −
1
2
, 1 , −
3
2
,
7
2
, 0 , 0 , 35) + 3 (1 ,
1
2
, 1 ,
1
2
,
1
2
, 0 , 0 , 5) =
= (3 , 1 , 4 , 0 , 5 , 0 , 0 , 50)
* 2. lerroa. Biderkatzailea: 2
(0 , −2 , 2 , 1 , −1 , 1 , 0 , 16) − 2(1 ,
1
2
, 1 ,
1
2
,
1
2
, 0 , 0 , 5) =
= (−2 , −3 , 0 , 0 , −2 , 1 , 0 , 6)

4.7. ZIGORTZE-METODOA
cxi
* 3. lerroa. Biderkatzailea: 3
(0 , −
1
2
, −5 ,
3
2
, −
3
2
, 0 , 1 , 30) − 3(1 ,
1
2
, 1 ,
1
2
,
1
2
, 0 , 0 , 5) =
= (−3 , −2 , −8 , 0 , −3 , 0 , 1 , 15)
Une honetan
zj − cj balio guztiak positiboak dira. Simplex metodoa amaitu da.
Lortu dugun soluzioa optimoa da,
x1 = x2 = x3 = 0 eta x4 = 10 alegia, eta
helburu-funtzioak lortuko duen balioa maximoa da (
z = 50). O.S.B.O. bakarra
da,
zj − cj > 0 ∀aj ∈ B delako.
2
Lehenengo
B = I oinarria sortzeko nasaitze-aldagaiak erabili ditugu. Hor-
rekin nahikoa ez balitz, aldagai artiﬁzialak erabiliko genituzke, eta soluzio opti-
moa ondoko bi metodoetariko baten bidez kalkulatuko genuke: zigortze-metodoa
edo bi faseetako metodoa.
4.7
Zigortze-metodoa
Hasierako oinarri kanonikoa eraikitzeko, nasaitze-
aldagaiak gehitzeaz gain alda-
gai artiﬁzialak gehitzeko beharra somatzen dugunean erabiliko dugu metodo hau.
Behar adina aldagai artiﬁzial gehituko dugu, lehen oinarriko soluzioa 
(xB) zuze-
nean lortuko dugularik.
Murrizketetan aldagai artiﬁzialak gehitzeak hasierako problemaren formulake-
ta aldatzen digu, eta ondorioz, lortutako soluzio optimoan aldagai artiﬁzialik baldin
badago, soluzio hori ez da gure hasierako problemaren soluzio izango, ez ditue-
lako murrizketak beteko. Hori gerta ez dakigun, sartu berri ditugun aldagai arti-
ﬁzialek soluzioan zero balioa hartzea behar-
beharrezkoa izango da, orduan bakar-
rik izango baita hasierako problemaren soluzio.
Hori lortzeko helburu-funtzioa zigortu egiten da. Honen ondoren simplex
metodoaren urratsak jarraitu behar dira. Aldagai artiﬁzialak oinarrian dauden
bitartean helburu-funtzioak oso balio txarrak hartuko ditu. Honek aldagai arti-
ﬁzialak oinarritik kanporatuak izatea eragiten du, zero balioa hartuko dutelarik;
behin aldagai artiﬁzial guztiak oinarritik kanpo ditugunean, lortuko ditugun soluzioak
hasierako problemarenak ere izango dira. Baina, aldagai artiﬁzial horietariko-
ren bat oinarritik kanporatzea lortuko ez bagenu, hasierako problemak ez luke
soluziorik izango.

cxii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Hau guztia dagoeneko aipatu dugu aldagai artiﬁzialez osaturiko lehen oinar-
ria aztertzerakoan 
(ikus c. orria). Hala ere, prozesu osoa garatuko dugu zenbait
adibideren bidez.
Adibidea:
Ondoko problema lineala ebatziko dugu zigortze-metodoa erabiliz:
max z = −5x1 + 6x2 + 7x3
ondoko murrizketen menpe
2x1 + 10x2 − 6x3 ≥ 30
5
2
x1 − 3x2 + 5x3 ≤ 10
2x1 + 2x2 + 2x3 = 5
x1, x2, x3 ≥ 0
Dagokion forma estandarra, B=I lortzeko aldagai artiﬁzialak gehituz:
max z = −5x1 + 6x2 + 7x3 − Mw1 − Mw2
ondoko murrizketen menpe
2x1 + 10x2 − 6x3 −x4
+w1
= 30
5
2 x1 − 3x2 + 5x3
+x5
= 10
2x1 + 2x2 + 2x3
+w2 = 5
x1 . . . x5, w1, w2 ≥ 0
Bi aldagai artiﬁzial behar izan ditugu. Helburu-funtzioa zigortzeko erabili-
tako
M balioa positiboa da. Zigortze-metodoa erabiliko dugu problema ebazteko,
aldagai artiﬁzialak sartu behar izan ditugulako. Lerro adierazlea kalkulatzean kon-
tutan izan behar da oinarrian aldagai artiﬁzialak egoteagatik cB = (−M 0 − M)
dela.

4.7. ZIGORTZE-METODOA
cxiii
x1
x2
x3
x4
x5
w1
w2
-4M+5
-12M-6
↓
4M-7
M
0
0
0
-35M
-M
aw1
2
10
-6
-1
0
1
0
30
0
a5
5
2
-3
5
0
1
0
0
10
-M
aw2
2
2
2
0
0
0
1
5
←
8M+11
0
16M-1
M
0
0
5M+3
-5M+15
-M
aw1
-8
0
-16
-1
0
1
-5
5
0
a5
11
2
0
8
0
1
0
3
2
35
2
6
a2
1
1
1
0
0
0
1
2
5
2
Azken taulan
zj − cj ≥ 0 ∀aj ∈ A betetzen denez, simplex metodoaren
iterazioak bukatu dira. Problemak ez du soluziorik oinarrian aldagai artiﬁzial bat
gelditu zaigulako.
2
Adibidea:
Ebatz dezagun beste eredu lineal hau:

cxiv
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
max z = 3x1 − 5x2
ondoko murrizketen menpe
x1 ≤ 4
x2 ≤ 5
4x1 + 2x2 ≥ 20
x1, x2 ≥ 0
Nasaitze-aldagaiak gehitu ondoren ondokoa lortzen dugu:
max z = 3x1 − 5x2
ondoko murrizketen menpe
x1
+x3
= 4
x2
+x4
= 5
4x1 +2x2
−x5 = 20
x1, x2 . . . x5 ≥ 0
Aldagai artiﬁzial bat sartuko dugu hirugarren murrizketan identitate matrizea os-
atzeko:
max z = 3x1 − 5x2 − Mw1
ondoko murrizketen menpe
x1
+x3
= 4
x2
+x4
= 5
4x1 +2x2
−x5 + w1 = 20
x1 . . . x5 , w1 ≥ 0

4.7. ZIGORTZE-METODOA
cxv
Zigortze-metodoa erabiliz:
x1
x2
x3
x4
x5
w1
-3-4M
↓
5-2M
0
0
M
0
-20M
0
a3
1
0
1
0
0
0
4
←
0
a4
0
1
0
1
0
0
5
-M
aw1
4
2
0
0
-1
1
20
0
-2M+5
↓
3+4M
0
M
0
-4M+12
3
a1
1
0
1
0
0
0
4
0
a4
0
1
0
1
0
0
5
-M
aw1
0
2
-4
0
-1
1
4
←
0
0
13
0
5
2
M
−
5
2
2
3
a1
1
0
1
0
0
0
4
0
a4
0
0
2
1
1
2
−
1
2
3
-5
a2
0
1
-2
0
−
1
2
1
2
2
∀aj ∈ A zj − cj ≥ 0 betetzen denez, metodoa amaitu da. Oinarrian aldagai
artiﬁziala ez dagoenez lortu dugun soluzioa optimoa da hasierako ereduarentzat
ere.
• xB =





4
3
2





O.S.B.O. da.
• z
∗ = 2
• x =














x1
x2
−
x3
x4
x5














=














4
2
−
0
3
0














⇒


x1
x2


=


4
2



cxvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
2
Adibidea:
Ebatz dezagun beste eredu lineal bat:
max z = x1 − 3x2
ondoko murrizketen menpe
x1 + x2 ≥ 2
4x1 + x2 ≥ 6
x1, x2 ≥ 0
Idazkera estandarra lortu ondoren
B = I lortzeko aldagai artiﬁzialen be-
harra somatzen dugu. Beraz, zigortze-metodoa erabili beharko dugu problema
ebazteko. Eredua:
max z = x1 − 3x2 − Mw1 − Mw2
ondoko murrizketen menpe
x1 + x2 −x3
+w1
= 2
4x1 + x2
−x4
+w2 = 6
x1 . . . x4, w1, w2 ≥ 0

4.8. BI FASEETAKO METODOA
cxvii
Simplex metodoaren pausoak:
x1
x2
x3
x4
w1
w2
-5M-1
-2M+3
M
M
0
0
-8M
aw1
1
1
-1
0
1
0
2
aw2
4
1
0
-1
0
1
6
0
−
3
4 M
+
13
4
M
−
1
4 M −
1
4
0
5
4 M
+
1
4
3
2 −
M
2
aw1
0
3
4
-1
1
4
1
−
1
4
1
2
a1
1
1
4
0
−
1
4
0
1
4
3
2
0
0
13
3
−
4
3
M
−
13
3
M +
4
3
−
2
3
a2
0
1
−
4
3
1
3
4
3
−
1
3
2
3
a1
1
0
1
3
−
1
3
−
1
3
1
3
4
3
0
4
-1
0
M+1
M
2
a4
0
3
-4
1
4
-1
2
a1
1
1
-1
0
1
0
2
z3 − c3 < 0 → soluzioa hobe daiteke a3 oinarriratuz.
yi3 ≤ 0 i = 1, 2 ⇒ Oinarritik ezin dezakegu bektorerik atera. Soluzioa
bornegabea da.
2
4.8
Bi faseetako metodoa
Metodo hau ere, zigortze-
metodoaren antzera, lehenengo oinarri kanonikoa lortzeko
aldagai artiﬁzialak erabili behar direnean erabiltzen da. Hauek dira metodoaren bi
faseak:
1. Lehen fasean hasierako problemaren murrizketak erabiltzen dira, baina hasier-
ako problemaren helburu-funtzioa hartu beharrean beste bat eraikitzen da;
aldagai artiﬁzial guztien arteko batura minimizatzen duena da fase hone-
tan erabiltzen den helburu-funtzioa. Soluzioa lortzeko simplex metodoa er-
abiltzen da.
• Baldin eraiki berri den helburu-funtzioaren balio optimoa zero baino
handiagoa bada, orduan hasierako problemak ez dauka soluziorik.

cxviii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
• Bestela, soluzioa existitzen da eta berau lortzeko bigarren fasean jar-
raitzen da.
2. Fase honetan optimizatzen den helburu-funtzioa jatorrizko problemarena
da. Lehen fasean lortutako taula optimoan lerro adierazlea besterik ez da al-
datzen. Lerro adierazlea kalkulatu ondoren simplex metodoaren urratsekin
jarraitzen da optimaltasun baldintzak lortu arte.
Azkenean, metodo honen eta zigortze-metodoaren helburua berbera dela ikusten
da; lehenengo B=I oinarria lortzea, alegia.
Adibidea:
Bi faseetako metodoa erabiliz ondoko problema lineala ebatziko dugu:
max z = 2x1 + 3x2 − 5x3
ondoko murrizketen menpe
2x1 + 2x2 + 2x3 = 14
−2x1 + 5x2 − x3 ≤ −10
x1, x2, x3 ≥ 0
Idazkera estandarrari beharrezko aldagai artiﬁzialak gehitu ondoren hauxe da
lortzen den eredua:
max z = 2x1 + 3x2 − 5x3
ondoko murrizketen menpe
2x1 + 2x2 + 2x3
+w1
= 14
2x1 − 5x2 + x3 −x4
+w2 = 10
x1 . . . x4, w1, w2 ≥ 0
Kasu honetan ez dugu helburu-funtzioa zigortzen bi faseetako metodoa erabiliko
baitugu. Has gaitezen.
1. fasea: Helburu-funtzioa:
min (w1 + w2)

4.8. BI FASEETAKO METODOA
cxix
Simplex algoritmoa erabiltzeko helburuak maximizatze moduan egon behar
du.
max (−w1 − w2)
Beraz, daukagun eredu lineala honakoa da:
max z = −w1 − w2
ondoko murrizketen menpe
2x1 + 2x2 + 2x3
+w1
= 14
2x1 − 5x2 + x3 −x4
+w2 = 10
x1 . . . w2 ≥ 0
Kalkuluak eginez:
x1
x2
x3
x4
w1
w2
-4
↓
3
-3
1
0
0
-24
-1
aw1
2
2
2
0
1
0
14
-1
aw2
2
-5
1
-1
0
1
10
←
0
-7
↓
-1
-1
0
2
-4
-1
aw1
0
7
1
1
1
-1
4
←
0
a1
1
−5
2
1
2
−1
2
0
1
2
5
0
0
0
0
1
1
0
0
a2
0
1
1
7
1
7
1
7
−1
7
4
7
0
a1
1
0
6
7
−1
7
5
14
1
7
45
7
Lehen faserako optimoa lortu da eta w
= 0 da. Beraz, hasierako proble-
marentzako soluzioa existitzen da. Jarrai dezagun aurrera.

cxx
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
2. fasea: Helburu-funtziotzat hasierakoa hartzen da orain.
max z = 2x1 + 3x2 − 5x3
Helburu-funtzioa aldatzeak lerro-adierazlean besterik ez du eragiten. Kalku-
luak eginez,
• z1 − c1 = (3 2)


0
1


− 2 = 0
• z2 − c2 = (3 2)


1
0


− 3 = 0
• z3 − c3 = (3 2)


1
7
6
7


+ 5 = 15
7 + 5 =
50
7
• z4 − c4 = (3 2)


1
7
−1
7


− 0 = 1
7
• z = (3 2)


4
7
45
7


− 0 = 102
7
Hasierako problema linealari dagokion taula ondokoa da:
x1 x2 x3
x4
0
0
50
7
1
7
102
7
3
a2
0
1
1
7
1
7
4
7
2
a1
1
0
6
7
−1
7
45
7
zj − cj ≥ 0 denez ∀aj ∈ A aj ∈ B
O.S.B.O. :
xB =


4
7
45
7



4.9. SIMPLEX BERRIKUSIAREN METODOA
cxxi
Bigarren fasea, eta honekin bi faseetako metodoa, amaitutzat eman daiteke.
zj − cj negatiborik balego simplex metodoa erabiliko genuke optimoa lortu
arte.
2
4.9
Simplex berrikusiaren metodoa
Tamaina txikiko problemak eskuz ebazteko egokia da simplex metodoa. Aldiz,
problema handi xamarra denean konputagailuaren laguntza ezinbestekoa gertatuko
zaigu. Algoritmoa konputagailuan ahalik eta eraginkorrena izan dadin konputa-
gailu programek simplex berrikusiaren metodoa izena duen simplex metodoaren
egokitzapena erabiltzen dute. Horretaz gain, zigortze-metodoa erabiltzen denean
M zenbakia ﬁnkatu behar da.
Simplex metodoaren iterazio bakoitzean oinarria aldatu eta beste taula bat
kalkulatzen dela ikusi dugu. Kalkulu horietariko zenbait ez da beharrezko beste
oinarri bat ﬁnkatzeko. Simplex berrikusiaren metodoan kalkuluak minimora mur-
rizten dira, algoritmoa ahalik eta eraginkorrena izan dadin.
Izan bedi
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
eredu lineala. B oinarria izanik, negatiboa izango den
zj − cj = c
T
B B
−
1a
j − cj
balioren bat existitzen al den begiratu behar dugu.
Simplex berrikusiaren metodoak ez ditu yj bektore guztiak aldatzen eta gordet-
zen beste taula bat kalkulatzen duen bakoitzean; horren ordez, A matrizeko aj
bektoreekin egiten du lan, pausoero beharrezko yj zutabeak besterik ez kalku-
latzeko.
cT
B B
−
1 kalkulatzen da, oinarriarekiko aldatzen delako.
1. Baldin
zj − cj = cT
B B
−
1a
j − cj ≥ 0
∀j → soluzio optimoa daukagu.

cxxii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
2. Gainontzeko kasuetan, simplex metodoaren irizpideak jarraituz
k ﬁnkatu
eta
xk sarrera aldagaitzat hartzen da. Orduan, B
−
1a
k pibot-zutabea da eta
B−1b une horretako soluzioa. Bi zutabe horiekin, simplex metodoan egiten
den bezala, oinarritik irten beharko duen ar bektorea aukeratzen da.
3.
∧
B−1 oinarria lortzeko beharrezko kalkuluak egin eta 1. pausora itzuli.
Adibidea:
Har dezagun simplex metodoa azaltzeko erabilitako eredu lineala idazkera es-
tandarrean (cviii.orria ikus):
max z = 7x1 + 4x2 + 6x3 + 5x4
ondoko murrizketen menpe
2x1 + x2 + 2x3 + x4 +x5
= 10
2x1 − x2 + 4x3 + 2x4
+x6
= 26
3x1 + x2 − 2x3 + 3x4
+x7 = 45
x1 . . . x7 ≥ 0
B =





1 0 0
0 1 0
0 0 1





c
T
B = (0 0 0)
B
−
1 =





1 0 0
0 1 0
0 0 1





c
T
B B
−
1 = (0 0 0)
• z1 − c1 = c
T
B B
−
1a1 − c1 = (0 0 0)





2
2
3





− 7 = −7
• z2 − c2 = c
T
B B
−
1a2 − c2 = (0 0 0)





1
−1
1





− 4 = −4

4.9. SIMPLEX BERRIKUSIAREN METODOA
cxxiii
• z3 − c3 = c
T
B B
−
1a3 − c3 = (0 0 0)





2
4
−2





− 6 = −6
• z4 − c4 = c
T
B B
−
1a4 − c4 = (0 0 0)





1
2
3





− 5 = −5
min {−7, −4, −6, −5} = −7
→
a1 oinarriratuko da
• Pibot-zutabea: y1 = B
−
1a1 =





1 0 0
0 1 0
0 0 1










2
2
3





=





2
2
3





• Soluzioa: xB = B
−
1b =





1 0 0
0 1 0
0 0 1










10
26
45





=





10
26
45





min {
10
2
,
26
2
,
45
3
} = min {5, 13, 15} = 5
→
a5 irtetzen da
Oinarria orain:
B = {a1, a6, a7}.
• Pibota: 2
• Biderkatzaileak: 1, 3
2
Orain arteko B oinarritik
B−1 kalkulatzeko betiko moduan jokatuko dugu.
Pibot-lerroa pibotaz zatitu: 1
2 . Besteak biderkatzailea erabiliz kalkulatu: 0−1·1 =
−1 eta 0 − 3
2 · 1 = −
3
2 . Honela, oinarriko lehen zutabea, irten berri den a5-ari

cxxiv
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
dagokiona, eguneraturik daukagu. Gainontzeko biak bere horretan mantentzen
dira, oinarriko direlako.
B
−
1 =





1
2
0 0
−1 1 0
−3
2
0 1





B = {a1, a6, a7}
→
c
T
B = (7 0 0)
c
T
B B
−
1 = (7 0 0)





1
2
0 0
−1 1 0
−3
2
0 1





= (
7
2
0 0)
• z2 − c2 = c
T
B B
−
1a2 − c2 = (7
2 0 0)





1
−1
1





− 4 = −1
2
• z3 − c3 = c
T
B B
−
1a3 − c3 = (7
2 0 0)





2
4
−2





− 6 = 1
• z4 − c4 = c
T
B B
−
1a4 − c4 = (7
2 0 0)





1
2
3





− 5 = −3
2
• z5 − c5 = c
T
B B
−
1a5 − c5 = (7
2 0 0)





1
0
0





= 7
2
min {−
1
2
, −
3
2
} = −
3
2
→
a4 oinarriratuko da
Irtengo den bektorea zein da?

4.9. SIMPLEX BERRIKUSIAREN METODOA
cxxv
• xB = B
−
1b =





1
2
0 0
−1 1 0
−3
2
0 1










10
26
45





=





5
16
30





• Pibot-zutabea: B
−
1a4 =





1
2
0 0
−1 1 0
−3
2
0 1










1
2
3





=





1
2
1
3
2





min {
5
1
2
,
16
1
,
30
3
2
} = min {10, 16, 20} = 10
→
a1 irtengo da
B = {a4, a6, a7}
• Pibota: 1
2
• Biderkatzaileak: 1 : 1
2 = 2 ,
3
2 :
1
2 = 3
Lehen egin bezala,
B−1 eguneratzeko kalkuluak:
1
2
:
1
2
= 1 ,
−1 − 2 ·
1
2
= −2 ,
−
3
2
− 3 ·
1
2
= −3
B
−
1 =





1 0 0
−2 1 0
−3 0 1





B = {a4, a6, a7}
→
c
T
B = (5 0 0)
c
T
B B
−
1 = (5 0 0)





1 0 0
−2 1 0
−3 0 1





= (5 0 0)
• z1 − c1 = c
T
B B
−
1a1 − c1 = (5 0 0)





2
2
3





− 7 = 3

cxxvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
• z2 − c2 = c
T
B B
−
1a2 − c2 = (5 0 0)





1
−1
1





− 4 = 1
• z3 − c3 = c
T
B B
−
1a3 − c3 = (5 0 0)





2
4
2





− 6 = 4
• z5 − c5 = c
T
B B
−
1a5 − c5 = (5 0 0)





1
0
0





− 0 = 5
Guztiak dira positibo. Soluzio optimoa:
xB = B
−
1b =





1 0 0
−2 1 0
−3 0 1










10
26
45





=





10
6
15





=





x4
x6
x7





Pauso guzti hauek aurrean ikusitako simplex taulan jarraituz gero, alferrikako
kalkulu asko alde batera utzi dugula ikusten da. Problemak zenbat eta aldagai
gehiago izan, kalkulu aurrezkia orduan eta nabarmenagoa da.
2
4.10
Zenbait ohar
Problema lineala tamaina handikoa izateagatik konputagailu bidez ebaztea er-
abakitzen dugunean, ondokoak kontutan izatea komeni da:
1. Biribiltze-erroreen arazoa: Kalkuluak eskuz egin eta zatikiak erabiltzean
ez dugu arazo honekin topo egiten. Baina, konputagailuek zatikiak zehazta-
sun aritmetiko ﬁnituaz darabiltzatenez, simplex metodoaren bidez lortutako

4.10. ZENBAIT OHAR
cxxvii
taula optimotik aterako dugun oinarriko soluzio bideragarri optimoak prob-
lemaren murrizketak ez betetzea edo beteta ere soluzioa optimo ez izatea
gerta daiteke. Hori biribiltze-erroreen pilaketagatik gertatzen da. Aldizka
BxB − b
errorea ebaluatuz gertakizun hau detekta daiteke. Errorea esangarria bada
konpondua izan daiteke honela: zuzenean
B
−
1 kalkulatu, taularen erroreak
zuzendu eta hortik aurrera jarraitu.
2. Murrizketa erredundanteen agerpena: Egoera hau detektatzeko metodoak
badira baina konputagarritasunaren ikuspuntutik begiratuta, soluzio opti-
moan aldagai artiﬁzialak agertzen badira honek murrizketa erredundanteak
egon daitezkeela esan nahi duela kontutan izatea zuhurragoa izan daiteke.
Simplex metodoa erabiltzen hasteko aldagai artiﬁzialak erabiltzen direnean,
behin taulan optimaltasun baldintzak betetzen direnean taula horretan alda-
gai artiﬁzialik ez dagoela ikusten badugu, orduan hasierako problemak badu
soluziorik. Ikus ditzagun orain taula optimoan aldagai artiﬁzialak agertzen
direneko 3 kasu.

cxxviii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
Adibidea. Problema bideraezina
Oinarrian balio positiboa hartzen duen aldagai artiﬁzialik agertzen bada ger-
tatzen da hau. Demagun eredu lineal hau
max z = x1 + 2x2 + x3
ondoko murrizketen menpe
x1 + x2 + x3 = 5
6x1 + 2x2 + 5x3 = 2
−5x1 −
3
2
x2 −
9
2
x3 ≤
1
2
x1, x2, x3 ≥ 0
Datozen taulatan optimaltasun baldintzak lortu arte beharrezko diren sim-
plex metodoaren kalkuluak agertzen dira.
x1
x2
x3
x4
w1
w2
−
7M − 1
−
3M − 2
−
6M − 1
0
0
0
−
7M
−
M
aw1
1
1
1
0
1
0
5
1
6
−
M
aw2
6
2
5
0
0
1
2
0
a4
−
5
−
3
2
−
9
2
1
0
0
1
2
−
5
6
0
−
2
3 M
−
5
3
−
1
6 M
−
1
6
0
0
7
6 M +
1
6
−
14
3 M +
1
3
−
M
aw1
0
2
3
1
6
0
1
−
1
6
14
3
2
1
a1
1
1
3
5
6
0
0
1
6
1
3
0
a4
0
1
6
−
1
3
1
0
5
6
13
6
1
2
2M + 5
0
3
2 M + 4
0
0
3
2 M
−
4M + 2
−
M
aw1
−
2
0
−
3
2
0
1
−
1
2
4
2
a2
3
1
5
2
0
0
1
2
1
0
a4
−
1
2
0
−
3
4
1
0
3
4
2
Azken taula honetan
zj − cj ≥ 0 ∀aj ∈ A betetzen denez, taula optimoa
da. Aldagai artiﬁziala
w1 = 4 > 0 denez, problemak ez du soluziorik.
2
Adibidea: Ekuazio erredundanteak

4.10. ZENBAIT OHAR
cxxix
Har dezagun honako eredu lineala.
max z = x1 + 2x2 − x3
ondoko murrizketen menpe
2x1 − x2 + x3 = 12
−x1 + 2x2 + x3 = 10
x1 + x2 + 2x3 = 22
x1, x2, x3 ≥ 0
w1, w2 eta w3 aldagai artiﬁzialak gehitu ondoren hauek dira optimaltasun
baldintzak bete arte behar izan ditugun simplex metodoaren hiru iterazioak.
x1
x2
x3
w1
w2
w3
−
2M − 1
−
2M − 2
−
4M + 1
0
0
0
−
44M
aw1
2
−
1
1
1
0
0
12
aw2
−
1
2
1
0
1
0
10
aw3
1
1
2
0
0
1
22
−
6M
6M − 4
0
0
4M − 1
0
−
4M − 10
aw1
3
−
3
0
1
−
1
0
2
a3
−
1
2
1
0
1
0
10
aw3
3
−
3
0
0
−
2
1
2
0
−
2
0
M
2M − 1
0
−
10
a1
1
−
1
0
1
3
−
1
3
0
2
3
a3
0
1
1
1
3
2
3
0
32
3
aw3
0
0
0
−
1
−
1
1
0
0
0
3
4
3
5
3
0
98
3
a1
1
0
1
2
3
1
3
0
34
3
a2
0
1
1
1
3
2
3
0
32
3
aw3
0
0
0
−
1
−
1
1
0
w3 aldagai artiﬁziala oinarrian dago eta zero balioa dauka. w3 aldagaiaren
ordez ezin dezakegu ez
x1, ez x2 eta ez x3 sartu, hala eginez gero pibot
balioak zero balioa hartuko lukeelako. Hirugarren lerroko elementu guztiak,
y31, y32 eta y33 zero dira.
Kasu honetan ekuazio erredundanteren bat daukagu. Eredua aztertuz kon-
turatuko gara hirugarren murrizketa beste bi murrizketen batura dela. Hiru-
garren murrizketa kenduz gero eredu linealak badu soluziorik.

cxxx
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
2
Adibidea: Soluzio endekatua
Demagun eredu lineal hau.
max z = x1 + x2 + 3x3
ondoko murrizketen menpe
x1 + 5x2 + x3 ≤ 7
x1 − x2 + x3 ≥ 5
1
2
x1 − 2x2 + x3 ≥ 5
x1 . . . x3 ≥ 0
x4 nasaitze-aldagaia eta w1 eta w2 aldagai artiﬁzialak gehituz gero hauek
dira zigortze-metodoaren taulak.
x1
x2
x3
x4
w1
w2
−
3
2 M
−
1
3M − 1
−
2M − 3
0
0
0
−
10M
a4
1
5
1
1
0
0
7
aw1
1
−
1
1
0
1
0
5
aw2
1
2
−
2
1
0
0
1
5
1
2 M + 2
M −
4
0
0
2M + 3
0
15
a4
0
6
0
1
−
1
0
2
a3
1
−
1
1
0
1
0
5
aw3
−
1
2
−
1
0
0
−
1
1
0
w3 aldagai artiﬁziala oinarrian dago eta zero balioa dauka. Hala ere, ez
gaude murrizketa erredundanteen kasuan, oraingo honetan hirugarren ler-
roko balioak(hasierako ereduaren aldagaiei dagozkien zutabeetakoak) ez
direlako zero. Problemarako soluzio optimo endekatua aurkitzea posible
da. Horretarako pibotea aukeratu behar dugu;
−1
2
edo
−1 izan daitezke.
Pibot negatibo hauek ez dute oinarriaren bideragarritasunaren gain inolako
eraginik izango, aldagai artiﬁzialaren balioa zero delako.
−1 balioa hartuko dugu pibot baliotzat. Hori dela eta, a2 oinarrian sartuko
da eta aw1 oinarritik irtengo da.

4.10. ZENBAIT OHAR
cxxxi
4 0 0 0 7 + M −4 + M 15
0 a4 −3 0 0 1
−7
6
2
3 a3
3
2
0 1 0
2
−1
5
1 a2
1
2
1 0 0
1
−1
0
B = {a4, a3, a2} oinarria optimoa da problemarako, eta xB soluzio optimo
endekatua da.
2
3. Ziklatzearen arazoa: Oinarriratzeko bektore bat baino gehiago aukeratua
izan badaiteke (
zj − cj balio negatibo berbera izateagatik), bektore hori-
etariko edozein aukeratu ahal izango dugu, simplex metodoaren iterazio-
kopuruan inolako eraginik izango ez duelarik.
Tamalez ez da gauza bera gertatzen oinarriko irteera bektoreekin. Irteera
bektorea aukeratzerakoan, irizpidea betetzen duen bektore bat baino gehi-
ago egotekotan, inoiz soluzio optimora eramango ez gintuzken ziklatzean
harrapatuak aurki gintezke bektore egokia aukeratuko ez bagenu. Hori ger-
ta daiteke soluzioa endekatua denean eta enpatea zeroan gertatzen denean.
Badira ziklatze hori gerta ez dadin erabil daitezkeen erregelak, erregela
lexikograﬁkoak eta Bland-en erregela, adibidez. Horiei esker, oinarritik
irtengo den aldagaia aukeratzen jakingo dugu inolako arazorik eragin gabe.
4. Kasu praktiko askotan, erabaki-aldagaien goi-bornea edota behe-bornea iza-
tea gerta liteke. Borne horiek murrizketa moduan ez jartzeko simplex metodoa
egoki daiteke.
5. Simplex metodoaren eraginkortasun konputazionala, balio optimoa lortzeko
behar den denboraren eta iterazio-kopuruaren arabera neurtzen da. Aldagai-
kopuruak eta murrizketa-kopuruak duten eragina aztertzeko asko dira buru-
tu diren ikerlanak eta lortutako emaitzek diotenez eraginkortasuna murrizketa-
kopuruarekiko aldagai-kopuruarekiko baino askoz ere sentikorragoa da. Es-
perientziaz ikusi da metodoak algoritmoaren
m eta 3
m
2
pauso artean kon-
bergitzen duela, nahiz eta pauso-kopuru hori gainditzen duten problemak
existitu.

cxxxii
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
6. Azken gaian problema linealak ebazteko erabiltzen diren bi software pakete
aztertzen dira: QSB+ eta LINDO. Programa horiek erabiltzen dituzten metodoak
eta ematen dituzten soluzioak aztertzen dira bertan.
4.11
Ariketak
1. Demagun ondoko eredu lineala:
max z = 3x1 + 2x2 + x3
ondoko murrizketen menpe
x1 − x2 + x3 ≤ 2
2x1 + x2 + 4x3 ≤ 6
x1, x2, x3 ≥ 0
Oinarriko soluzio bideragarri baten hobekuntzaren teorema erabiliz soluzio
optimoa lor ezazu.
2. Simplex metodoa erabiliz ondoko eredu linealaren soluzioa lor ezazu:
min z = −2x1 + x2 − x3
ondoko murrizketen menpe
x1 − x2 + 2x3 ≥ −4
2x1 − 3x2 + 4x3 ≤ 5
x1, x2 ≥ 0
x3 : ez-murriztua
3. Izan bedi ondoko eredu lineala:
max z = x1 + 2x2
ondoko murrizketen menpe
x1 + 2x2 ≤ 3
x1 + x2 ≥ 1
x1 − x2 ≤ 2
x1, x2 ≥ 0
(a) Lor ezazu ereduaren idazkera estandarra.

4.11. ARIKETAK
cxxxiii
(b) Problema graﬁkoki ebatz ezazu. Bideragarritasun-eskualdeko mutur-
puntu guztiak zehazta itzazu.
(c) Simplex metodoa erabiliz ebatz ezazu problema.
(d) Aurreko bi puntuetan lortutako soluzioak aldera itzazu, oinarriko soluzio
optimoa zein mutur-punturi dagokion ikusteko.
4. Honako eredu lineala emanik:
max z = x1 + x2
ondoko murrizketen menpe
x1 − x2 ≤ 1
x1 + x2 ≤ 6
x2 ≤ 5
x1, x2 ≥ 0
Soluzio optimoa kalkula ezazu. Aukerazko optimorik ba al dago?
5. Zigortze-metodoa erabiliz ondorengo problemak ebatz itzazu:
(a)
min z = 3x1 − 2x2 − x3
ondoko murrizketen menpe
x1 + x2 − x3 = 4
x1 + 2x2 − x3 ≥ 2
−x1 + x2 + 2x3 ≤ 6
x1 ≤ 0
x2, x3 ≥ 0
(b)
max z = x1 − x2
ondoko murrizketen menpe
x1 + 3x2 ≥ 2
−x1 − 2x2 ≤ 3
x1 − 3x2 = 2
x1, x2 ≥ 0

cxxxiv
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA
(c)
max z = x1 + 3x2
ondoko murrizketen menpe
x1 − 2x2 ≤ 3
x1 + x2 ≥ 7
2x1 + 3x2 ≤ 1
x1, x2 ≥ 0
6. Bi faseetako metodoa erabiliz ondorengo problemen soluzioa lor ezazu:
(a)
min z = 30x1 + 25x2
ondoko murrizketen menpe
x1 + 4x2 ≥ 12
3x1 + 2x2 ≥ 10
5x1 + 3x2 ≥ 20
x1, x2 ≥ 0
(b)
max z = −8x1 − 6x2 − 6x3
ondoko murrizketen menpe
2x1 + 4x2 + 4x3 ≥ 8
−4x1 − 5x2 − x3 ≤ −6
3x1 + 3x2 + 4x3 ≥ 4
x1 . . . x3 ≥ 0
7. Lantegi batek 3 motatako produktuak ekoizten ditu:
P1, P2, P3. Produktu-
unitate bakoitza ekoizteko hiru urrats eman behar dira: eskulana, leunketa
eta kalitate-kontrola. Urrats bakoitzean produktu bakoitzak behar dituen
ordu-kopuruak 4.1 .taulakoak dira.
Asteko eskulanerako ordu erabilgarrien kopurua 100-ekoa da, leunketarako
75-ekoa eta kalitate-kontrolerako 150-ekoa.

4.11. ARIKETAK
cxxxv
Taula 4.1: Ordu-kopuruak
Produktua
Eskulana
Leunketa
Kalitate-Kontrola
P1
4
1
0.25
P2
3
1
0.25
P3
3
0.5
0.2
Eskari-arrazoiak direla eta, ekoiztutako
P2 produktuaren unitate-kopuruak
beste bi produktuen kopuruak elkarrekin jarrita adinakoa izan beharko du.
Ekoiztutako produktu-unitateko lortzen diren irabaziak 14, 10 eta 8-koak
dira, hurrenez hurren.
(a) Eredu lineala formula ezazu.
(b) Soluzio optimoa kalkula ezazu metodorik egokiena erabiliz.

cxxxvi
KAPITULUA 4. PROGRAMAZIO LINEALA. SIMPLEX METODOA

Kapitulua 5
DUALTASUNA
Egitura lineal bat izanik, dagokion egitura duala ematea beti da posible. Problema
linealaren eta dagokion problema dualaren arteko erlazioak oso garrantzitsuak di-
ra, bai teorikoki eta baita praktikoki ere. Geroago ikusiko dugunez, eredu lineala
ebaztean, ebazten duguna primala zein duala izanik ere, bietarako soluzioa ematea
beti da posible. Hori dela eta, bietariko zein ebaztea komeni zaigun erabaki be-
harko dugu kasu bakoitzean, bietatik errazena ebazteko.
Hauek dira dualtasunak eskaintzen dizkigun aukerak:
1. Problema linealak duen aldagai-kopurua murrizketa-kopurua baino txiki-
agoa denean, problema linealaren ebazpena erraz daiteke. Eredu lineala
ebazterakoan, zenbat eta murrizketa gehiago izan ebazpena lortzea ord-
uan eta luzeagoa gertatzen denez, horrelakoetan problema duala ebaztea
komenigarria izan daiteke.
2. Programazio linealeko problemen interpretazio ekonomikoa egin daiteke
dualtasunari esker.
3. Ereduaren parametroen aldaketak aztertzeko beharrezkoa da dualtasunaren
propietateak erabiliz eratorritako simplex dual delako metodoa erabiltzea.
Problema primalaren eta dagokion dualaren arteko erlazioa hobekiago ulertzeko
adibide bat aztertuko dugu.
5.1
Sarrera adibidea
Lantegi batean 4 produktu desberdin sortzen dira: 1,2,3 eta 4. Produktu horiek
lantzeko 3 lehengai mota desberdin behar dira: A, B eta D. 5.1 .taulan datoz
cxxxvii

cxxxviii
KAPITULUA 5. DUALTASUNA
Taula 5.1:
PRODUKTUAK
LEHENGAIEN
LEHENGAIA
1
2
3
4
ERABILGARRITASUNA
A
2
3
1.5
4
300
B
2
4
3
1
500
D
5
1
2
1
250
IRABAZIA
4
3
6
2
produktu unitate bakoitza sortua izateko behar diren lehengaien unitate-
kopuruak,
lehengaien erabilgarritasuna eta produktuek sortutako irabaziak.
Eredu lineal baten bidez idatziko dugu problema, eta zera ezagutu nahi da:
irabazia maximoa izan dadin sortu beharko den
j produktuaren unitate-kopurua
(j = 1, 2, 3, 4). Kopuru hori xj aldagaietan jasotzen da.
max z = 4x1 + 3x2 + 6x3 + 2x4
ondoko murrizketen menpe
2x1 + 3x2 + 1.5x3 + 4x4 ≤ 300
2x1 + 4x2 + 3x3 + x4 ≤ 500
5x1 + x2 + 2x3 + 2x4 ≤ 250
xj ≥ 0 j = 1 . . . 4
Demagun badela lantegi horrekin norgehiagoka ari den beste lantegi bat, eta bi-
garren honek
b1 = 300, b2 = 500 eta b3 = 250 lehengaiak erosi nahi dizkiola.
Lehengai hauek lortzea zerbait kostatuko zaio:
y1, y2 eta y3, hurrenez hurren, eta
lehengai horiek ahalik eta kosturik txikienean lortzea da bere helburua.
min G = 300y1 + 500y2 + 250y3
Baina, gauza bat garbi dago: lehen lantegiak ez dizkio lehengaiak bigarrenari
edozein preziotara salduko; lehengaiak erabiltzearen truke lortzen duena baino
gutxiagogatik ez dizkio salduko.
1 produktua sortzeko lehen lantegiak 2 unitate A lehengai, 2 unitate B lehengai
eta 5 unitate D lehengai behar ditu. Lehengai horiek bigarren lantegiari salduko

5.2. PROBLEMA DUALA
cxxxix
balizkio, eta bakoitzagatik
y1, y2 eta y3 lortuko balu, hurrenez hurren, 2y1 + 2y2 +
5y3 irabaziko luke. Honela lortutako irabazia, lehengaiak erabiliz 1 produktua
sortzean lortutakoa, 4 alegia, baino handiagoa edo berdina bada, lehengaiak 2.
lantegiari saltzeak mereziko du.
2y1 + 2y2 + 5y3 ≥ 4
Hori problema dualaren lehen murrizketa da. 2,3 eta 4 produktuen ekoizpenarekin
ere interpretazio berberari jarraituz ondorengo eredu duala lortzen da:
min G = 300y1 + 500y2 + 250y3
ondoko murrizketen menpe
2y1 + 2y2 + 5y3 ≥ 4
3y1 + 4y2 + y3 ≥ 3
1.5y1 + 3y2 + 2y3 ≥ 6
4y1 + y2 + 2y3 ≥ 2
y1, y2, y3 ≥ 0
2
Ikusiko dugunez, bi problemen (primalaren eta dualaren) helburu-funtzioaren
balio optimoa berbera da.
5.2
Problema duala
5.2.1
Deﬁnizioak
Deﬁnizioa 5.2.1 (Maximizatze-idazkera simetrikoa) Eredu lineala maximizatze-
idazkera simetrikoan dagoela esaten da baldin eta:
• Helburu-funtzioa maximizatze erakoa bada
• Murrizketa guztiak ≤ erakoak badira
• Erabaki-aldagai guztiak ez-negatiboak badira
Adibidea:

cxl
KAPITULUA 5. DUALTASUNA
Ondoko problema maximizatze-idazkera simetrikoan idatzi nahi da:
max z = x1 − 3x2 + x3
ondoko murrizketen menpe
x1 + x2 + x3 ≥ 2
−x1 + 2x2 − x3 ≤ 3
x1 − x2 + 2x3 = −1
x1, x2, x3 ≥ 0
Maximizatze-idazkera simetrikoa:
max z = x1 − 3x2 + x3
ondoko murrizketen menpe
−x1 − x2 − x3 ≤ −2
−x1 + 2x2 − x3 ≤ 3
x1 − x2 + 2x3 ≤ −1
−x1 + x2 − 2x3 ≤ 1
x1, x2, x3 ≥ 0
2
Deﬁnizioa 5.2.2 (Minimizatze-idazkera simetrikoa) Eredu lineala minimizatze-
idazkera simetrikoan dagoela esaten da baldin eta:
• Helburu-funtzioa minimizatze erakoa bada
• Murrizketak ≥ erakoak badira
• Erabaki-aldagaiak ez-negatiboak badira
Eredu lineal guztiak idatz daitezke komeni den idazkera simetrikoan.
Adibidea:
Izan bedi ondorengo eredu lineala:
min z = x1 − x2
ondoko murrizketen menpe
3x1 + 2x2 ≤ 1
x1 − 2x2 ≥ 3
x1, x2 ≥ 0

5.2. PROBLEMA DUALA
cxli
Dagokion minimizatze-idazkera simetrikoa:
min z = x1 − x2
ondoko murrizketen menpe
−3x1 − 2x2 ≥ −1
x1 − 2x2 ≥ 3
x1, x2 ≥ 0
2
5.2.2
Primal-dual arteko erlazioa
Demagun maximizatze-idazkera simetrikoan dagoen eredu lineala daukagula:
max z = c
T x
o. m. m.
Ax ≤ b
x
≥ 0
Eredu honi primala deituko diogu. Ondorengo problema minimizatze-idazkera
simetrikoan dago eta aurrekoaren duala dela esaten da:

cxlii
KAPITULUA 5. DUALTASUNA
min G = b
T y
o. m. m.
A
T y ≥ c
y
≥ 0
Erlazio horren esanahia hobe ulertzeko aldera itzazu eredu primal eta duala
sarrera adibidean ikusitakoekin.
Adibidea:
Ondoko eredu primalaren duala kalkulatuko dugu:
max z = 2x1 − x2 + 3x3
ondoko murrizketen menpe
x1 − x2 + x3 ≤ 2
3x1 − x2 + 2x3 ≤ 1
xj ≥ 0 j = 1 . . . 3
Dagokion duala:
min G = 2y1 + y2
ondoko murrizketen menpe
y1 + 3y2 ≥ 2
−y1 − y2 ≥ −1
y1 + 2y2 ≥ 3
y1, y2 ≥ 0
2
Hemendik aurrerako frogapenetan primala maximizatze-idazkera simetrikoan
dagoela suposatuko badugu ere, horrek ez du esan nahi eredu primalak beti maximizatze-
idazkeran egon beharko duenik. Edozein eredu lineal daukagula, primal izena
emango diogu, eta propietate batzuk erabiliz primal horri dagokion duala kalku-
latuko dugu, oro har.

5.2. PROBLEMA DUALA
cxliii
5.2.3
Eredu primalaren eta dagokion dualaren osagaien azalpe-
na
• A m x n matrizea bada, eredu primalak m murrizketa eta n erabaki-aldagai
du. Eredu dualak, aldiz,
n murrizketa eta m erabaki-aldagai izango du, bere
teknologi koeﬁzienteen matrizea
AT izateagatik.
• b bektorea:
– Eredu primalean baliabide-bektorea da
– Eredu dualean, aldiz, kostu-bektorea edo prezio-bektorea
• c bektorea:
– Kostu-bektorea da eredu primalean
– Baliabide-bektorea da eredu dualean
Primal-dual erlazio simetrikoan ondokoak ikus daitezke:
• Primalaren murrizketak ≤ erakoak dira, eta dualaren aldagaiak ≥ 0 di-
ra. Primalaren murrizketa-kopurua eta dualaren erabaki-aldagaien kopurua
kopuru berbera dira.
• Primalaren aldagaiak ≥ 0 dira eta dualaren murrizketak ≥ erakoak. Du-
alak duen murrizketa-kopurua eta primalak duen erabaki-aldagaien kopurua
berbera da.
5.2.4
Dualtasuna: kasu orokorra
Problema praktiko gehienetan, murrizketak
≤, = edo ≥ modukoak dira. Hor-
relako problemen duala kalkulatzeko ereduaren idazkera simetrikoa idatz daiteke
eta ondoren aurreko primal-dual erlazioa erabili. Hala ere, idazkera simetrikoa
idatzi beharrik izan gabe ere erabil daitezke 5.2 taulako erlazioak.
5.2 taulako zenbait erlazio frogatuko dugu. Gainontzekoak antzera frogatuak
izan daitezke. Eredu primalaren helburu-funtzioa minimizatze modukoa bada du-
ala maximizatze modukoa izango da geroago teorema batetan frogatuko dugunez.
Era horretako eredu primal baten duala lortzeko 5.2 taula eskubialdetik ezker-
raldera irakurri beharko da.

cxliv
KAPITULUA 5. DUALTASUNA
Taula 5.2:
PRIMAL-DUAL ERLAZIOAK
max
⇐⇒
min
i murrizketa ≤ bi
⇐⇒
i aldagaia ≥ 0
i murrizketa = bi
⇐⇒
i aldagaia murriztugabea
i murrizketa ≥ bi
⇐⇒
i aldagaia ≤ 0
i aldagaia ≥ 0
⇐⇒
i murrizketa ≥ ci
i aldagaia ez-murriztua ⇐⇒
i murrizketa = ci
i aldagaia ≤ 0
⇐⇒
i murrizketa ≤ ci
• Demagun ondoko eredu lineala
max z = c
T x
o. m. m.
Ax ≥ b
x
≥ 0
dagokion duala
min G = b
T y
o. m. m.
A
T y ≥ c
y
≤ 0
Hori frogatzeko primal-dual arteko erlazioa erabiliko dugu.
max z = cT x
o.m.m.
Ax ≥ b
x
≥ 0
⇐⇒
max z = cT x
o.m.m.
−Ax ≤ −b
x
≥ 0

5.2. PROBLEMA DUALA
cxlv
Bigarren eredua dagoeneko maximizatze idazkera simetrikoan dago. Bere
duala
min G = −b
T y
o. m. m.
−A
T y ≥ cT
y
≥ 0
y
= −y aldagai aldaketa eginez,
max G = b
T y
o. m. m.
A
T y ≥ cT
y
≤ 0
Hau da, problema primalaren murrizketak
≥ modukoak badira, dualaren
y aldagaiak zero baino txikiagoak edo berdinak izango dira.
• Demagun problema primal hau
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
Dagokion duala
min G = b
T y
o. m. m.
A
T y ≥ c
y
: ez-murriztua
Oraingoan primal-dual arteko erlazioa erabiltzeko, aurretik problema pri-
malaren idazkera simetrikoa idatziz, zera daukagu
max z = c
T x
o. m. m.
Ax ≤ b
−Ax ≤ −b
x
≥ 0

cxlvi
KAPITULUA 5. DUALTASUNA
Aurreko idazkera lortzen da,
Ax = b ondoko bietan banatuz:
Ax ≤ b,
Ax ≥ b
Har dezagun


u
v


bektorea, non u eta v bektoreek
m osagai dituzten. Dagokion eredu duala
honakoa da.
min G = (b
T − bT )


u
v


ondoko murrizketen menpe
(A
T
− A
T )


u
v


≥ c
u
, v ≥ 0
Beste modu batera idatzirik:
min G = b
T (u − v)
o. m. m.
A
T (u − v) ≥ c
u
, v ≥ 0
y
= u − v aldagai aldaketa eginez
min G = b
T y
o. m. m.
A
T y ≥ c
y
: ez-murriztua
y aldagaia murriztugabea da, bi aldagai positiboren arteko kenketa delako.
Dualtasunaren azken forma honetan zera ikusten da: Primalaren murrizke-
tak
= modukoak badira, dualaren aldagaiak ez daudela zeinuz murriztuak.
Era berean froga daitezke 5.2 taulan agertzen diren erlazio guztiak.

5.3. DUALTASUNARI BURUZKO TEOREMAK
cxlvii
Adibidea:
Demagun ondoko eredu primala:
max z = x1 − 4x2 − x3
ondoko murrizketen menpe
x1 + x2 − x3 ≥ 4
2x1 + 3x2 − 5x3 ≤ 2
2x1 − x2 + 2x3 = 6
x1 ≤ 0 x2 ≥ 0
x3 : ez-murriztua
Taulako erlazioak erabiliz gero, datorren duala lortzen da:
min G = 4y1 + 2y2 + 6y3
ondoko murrizketen menpe
y1 + 2y2 + 2y3 ≤ 1
y1 + 3y2 − y3 ≥ −4
−y1 − 5y2 + 2y3 = −1
y1 ≤ 0 y2 ≥ 0
y3 : ez-murriztua
5.3
Dualtasunari buruzko teoremak
Datozen teoremei esker, problema primalaren eta dualaren arteko erlazioak eta
baita beren soluzioen arteko erlazioak ezagutuko ditugu. Guztietan primal-dual
idazkera simetrikoa erabiltzen da:

cxlviii
KAPITULUA 5. DUALTASUNA
P RIMAL
DUAL
max z = cT x min G = bT y
o.m.m.
o.m.m.
Ax ≤ b
AT y ≥ c
x
≥ 0
y
≥ 0
Teorema 5.3.1 Problema dualaren duala problema primala da.
Frogapena:
Demagun honako eredu lineala daukagula:
max z = c
T x
o. m. m.
Ax ≤ b
x
≥ 0
Dagokion duala:
min G = b
T y
o. m. m.
A
T y ≥ c
y
≥ 0
Primal-dual erlazio simetrikoak erabiliz bigarren problema honen duala kalku-
latzeko, problema maximizatze-idazkera simetrikoan jarriko dugu:
−max (−G) = −b
T y
o. m. m.
−A
T y ≤ −c
y
≥ 0

5.3. DUALTASUNARI BURUZKO TEOREMAK
cxlix
Dagokion duala kalkulatzeko primal-dual erlazio simetrikoa erabiliko dugu:
−min (−z) = −c
T x
o. m. m.
−Ax ≥ −b
x
≥ 0
Beste era batera idatziz:
max z = c
T x
o. m. m.
Ax ≤ b
x
≥ 0
Beraz, dualaren duala primala dela dakusagu.
2
Teorema 5.3.2 (Dualtasun ahularena) Demagun x eta y problema primalaren
eta dualaren soluzio bideragarri 
(S.B.) bana direla, hurrenez hurren. Zera betet-
zen da:
z = c
T x ≤ bT y = G
Frogapena:
x
: primalaren S.B. ⇒ Ax ≤ b , x ≥ 0
(5.1)
y
: dualaren S.B.
⇒ A
T y ≥ c , y ≥ 0
(5.2)
(5.1) desberdintza y
T ≥ 0 bektoreaz eta (5.2) desberdintza xT ≥ 0 bektoreaz
biderkatzean, ondokoa lortzen da:
y
T Ax ≤ yT b = bT y
x
T AT y ≥ xT c = cT x
Matrize-eragiketak eginez xT
AT y = yT Ax betetzen denez zera daukagu:
z
=
c
T x ≤ yT Ax ≤ bT y = G
Primalari eta dualari dagozkien soluzio posibleen
(x, y) bikote guztietarako
helburu-funtzio primalaren balioa beti da helburu-funtzio dualaren balioa baino
txikiago edo berdina.

cl
KAPITULUA 5. DUALTASUNA
2
Aurreko teorematik zera ondoriozta daiteke: problema primalaren balio opti-
moa (maximoa) problema dualaren balio optimoaren (minimoa) behe-bornea dela.
Era berean, problema dualaren minimoa problema primalaren maximoaren goi-
bornea da.
Korolarioa 5.3.1 Baldin x
∗ eta y∗ soluzio bideragarriek cT x∗ = bT y∗ betetzen
badute, orduan x
∗ eta y∗ problema primalaren eta dualaren soluzio optimo dira,
hurrenez hurren.
Frogapena:
Dualtasun ahularen teoremak dioenez, edozein
(x, y) soluzio bikoterentzat
zera betetzen da
c
T x ≤ bT y
Dualaren y
∗
soluzioa hartuz gero, cT x
≤ bT y∗ betetzen da. Dakigunez,
cT x∗
= bT y∗ betetzen da.
c
T x ≤ cT x∗ ⇒ x∗ problema primalaren soluzio optimoa da.
Era berean,
b
T y∗ = cT x∗ ≤ bT y
b
T y∗ ≤ bT y ⇒ y∗ dualaren soluzio optimoa da.
2
Korolarioa 5.3.2 Problema primala bideragarria eta bornegabea bada, dualak
ez du soluziorik.
Edozein
(x, y) soluzio bikotek cT x ≤ bT y betetzen duela kontutan izanik,
baldin primalaren helburua bornaturik ez badago orduan ez da dualarentzat y
soluziorik existitzen, zeina problema primalaren goi-borne izango den.
Korolarioa 5.3.3 Baldin problema duala bideragarria eta bornegabea bada, or-
duan duala bideraezina da.
Korolario hau aurrekoaren antzera interpretatzen da.
Adibidea:
Demagun eredu lineal bat eta dagokion duala dauzkagula. Primalak soluzio
bornegabea duela eta bere dualak soluziorik ez duela ikus daiteke.

5.3. DUALTASUNARI BURUZKO TEOREMAK
cli
max z = 3x1 + 2x2 min G = 2y1 − 4y2
o. m. m.
o. m. m.
−2x1 + x2 ≤ 2
−2y1 − 2y2 ≥ 3
2x1 + x2 ≥ 4
y1 − y2 ≥ 2
x1, x2 ≥ 0
y1, y2 ≥ 0
Primalaren soluzio bornegabea:
Dualak ez du soluziorik:
2
Baldin primala (duala) bideraezina bada, orduan duala (primala) bideraezina
edo bornegabea izan daiteke. Frogapena ez da erraza, baina aurreko adibidean
primala dual gisa hartzen badugu duala bornegabea dela ikusten da. Aldi berean

clii
KAPITULUA 5. DUALTASUNA
primala eta duala bideraezinak izan daitezke.
Teorema 5.3.3 (Dualtasunaren funtsezko printzipioa) Baldin
problema primalaren x
∗ soluzio optimo bat existitzen bada, orduan problema du-
alaren y
∗ soluzio optimo bat existitzen da. Era berean, baldin problema dualaren
y∗ soluzio optimo bat existitzen bada, orduan problema primalaren x
∗ soluzio op-
timo bat existitzen da. Gainera, bi kasuetan
z∗ = cT x∗ = bT y = G∗ betetzen
da.
Adibidea:
Demagun ondoko problemak ditugula (primal-dual simetrikoak):
max z = 2x1 + 3x2 min G = 2y1 + 3y2 + 5y3
o. m. m.
o. m. m.
x1 + x2 ≤ 2
y1 + 2y2 + y3 ≥ 2
2x1 − x2 ≤ 3
y1 − y2 + 3y3 ≥ 3
x1 + 3x2 ≤ 5
y1, y2, y3 ≥ 0
x1, x2 ≥ 0
Edozein soluzio bikotek
z ≤ G betetzen du. Adibidez, har dezagun xT =
(1 1) problema primalaren soluzio bideragarri bat, zeinetan helburu-
funtzioak z =
5 balioa hartzen duen. Bestalde, problema dualaren soluzio bideragarri bat den
yT
= (1 1 1) hartuko dugu, eta soluzio honetan helburu-funtzio dualak hartzen
duen balioa
G = 10 dela ikusten da. z ≤ G betetzen da.
Har ditzagun orain problemen soluzio optimoak. x
∗
T = (0.5 1.5) eta y∗T =
(1.5 0 0.5). Soluzio optimo izateagatik z∗ = G∗ = 5.5 betetzen da.
2
Teorema 5.3.4 B oinarria programazio linealeko eredu baten oinarri optimoa
baldin bada, orduan y
∗
T = cT
B B
−
1 eredu dualaren soluzio optimoa da. Helburu-
funtzio primalak eta dualak balio berbera hartzen dute.
z∗ = G∗
Frogapena:

5.3. DUALTASUNARI BURUZKO TEOREMAK
cliii
Demagun problema primala daukagula. Nasaitze-aldagaien bektorea, xh, gehi-
tuz gero, ondokoak dira murrizketak:
Ax + Ixh = b
x
, xh ≥ 0
Baldin
B problema primalaren oinarri optimoa bada eta x
∗
B
B oinarri horri
dagokion soluzioaren osagaiak, orduan
zj − cj ≥ 0 betetzen da.
zj = c
T
B yj = c
T
B B
−
1a
j
zj ≥ cj ∀j
⇒
c
T
B B
−
1A ≥ c
Beste era batera idatzita:
A
T cT
B B
−
1 ≥ c
cT
B B
−
1 bektoreak murrizketa dualak betetzen dituela ikusten da. Beraz, dualaren
soluzioa da eta y
∗ izendatuko dugu.
y
∗ = cT
B B
−
1
Hasierako B oinarria nasaitze-aldagaiez osatuta dagoen kasurako zera dauk-
agu:
c
T
B B
−
1I ≥ c
I
I matrizea nasaitze-aldagaiez osaturik dagoenez, cI = 0 betetzen da. Beraz,
c
T
B B
−
1I = cT
B B
−
1 ≥ 0
betetzen da; y
∗ = cT
B B
−
1 bektorearen osagai guztiak ez-negatiboak dira. Helburu-
funtzioaren balioa:
z
∗ = cT
B x
∗
B = c
T
B B
−
1b = bT (cT
B B
−
1)T = bT y∗ = G∗
Frogaturik gelditzen da helburu-funtzioen balio optimoak berdinak direla.
2
Jarraian aztertuko dugun osagarrizko nasaitasunaren teorema deritzonean, pri-
malaren soluzio optimotik abiatuz dualaren soluzio optimoa nola kalkula daite-
keen ikusiko dugu.

cliv
KAPITULUA 5. DUALTASUNA
Teorema 5.3.5 (Osagarrizko nasaitasuna) Izan bitez x
∗ eta y∗ problema pri-
malaren eta dualaren bi soluzio bideragarri, hurrenez hurren. Soluzio horiek
optimoak dira baldin eta soilik baldin
x
∗
T (AT y∗ − c) + y∗T (b − Ax∗) = 0
Teorema hau ez dugu frogatuko, baina dioena aztertuko dugu, bertatik aterako
dugun zenbait ondorio lagungarri gertatuko baitzaigu.
Izan bitez problema primala eta bere duala:
max z = cT x min G = bT y
o. m. m.
o. m. m.
Ax ≤ b
AT y ≥ c
x
≥ 0
y
≥ 0
Murrizketak beste era batera idatziz gero:
b
− Ax ≥ 0
A
T y − c ≥ 0
Bestalde, bai problema primalaren eta bai problema dualaren soluzio optimoek,
ez-negatibotasun murrizketa bete behar dutenez, x
∗ eta y∗ soluzioek x∗ ≥ 0 eta
y∗
≥ 0 betetzen dutela dakigu.
Guztiarekin,
x
∗
T (AT y∗ − c) ≥ 0
y
∗
T (b − Ax∗) ≥ 0
Aurreko teoremak zera betetzen dela ziurtatzen du.
x
∗
T (AT y∗ − c) + y∗T (b − Ax∗) = 0
Bi batugaiak positibo direnez eta batura zero denez, batugaiek zero izan behar
dute:
x
∗
T (AT y∗ − c) = 0
y
∗
T (b − Ax∗) = 0

5.3. DUALTASUNARI BURUZKO TEOREMAK
clv
Hemendik zenbait ondorio interesgarritara iritsiko gara. Ondorio hauei esker,
ekuazio sistema bat eraikiz eta ebatsiz dagokion dualaren soluzioa kalkulatuko
dugu. Hauexek dira, ba, ondorioak:
1. Aldagai primal bat hertsiki positibo bada, dualaren dagokion murrizketa
berdintasunez beteko da.
x
∗
T > 0 izanik x∗T (AT y∗ − c) = 0 bete dadin ⇒
A
T y∗ − c = 0, hau da, AT y∗ = c
2. Primalaren murrizketa bat ez bada berdintasunez betetzen, dagokion aldagai
dualak zero balioa hartzen du.
Ax
∗ < b ⇒ b − Ax∗ > 0
y
∗
T (b − Ax∗) = 0 izateko ⇒ y∗T = 0
Eredu duala denean ebatzi duguna, hauek izango dira ondorioztatuko ditugunak.
1. Aldagai duala hertsiki positibo bada, dagokion murrizketa primala berdinta-
sunez betetzen da.
y
∗
T > 0 izanik, y∗T (b − Ax∗) = 0 izateko ⇒
b
− Ax
∗ = 0, hau da, Ax∗ = b
2. Dualaren murrizketa bat ez bada berdintasunez betetzen, dagokion aldagai
primala zero izango da.
A
T y∗ − c > 0 bada, x∗T (AT y∗ − c) = 0 izateko ⇒
x
∗
T = 0 izan behar du
Adibidea:
Demagun ondoko problema primala:
max z = 3x1 + x2 − 2x3
ondoko murrizketen menpe
x1 + 2x2 + x3 ≤ 5
2x1 − x2 + 3x3 ≤ 4
x1, x2, x3 ≥ 0

clvi
KAPITULUA 5. DUALTASUNA
Bere soluzio optimoa x
∗ = (13
5
6
5 0) da eta balio optimoa z
∗ = 9.
Dagokion problema dualaren soluzio optimoa kalkulatuko dugu. Horretarako
ez daukagu zertan eredu duala hasieratik ebatzi beharrik. Nahikoa da osagarrizko
nasaitasunetik eratorritako ondorioak erabiltzea. Nasaitze-aldagaiak gehitu on-
doren hauxe da problema primala:
max z = 3x1 + x2 − 2x3
ondoko murrizketen menpe
x1 + 2x2 + x3
+x4
= 5
2x1 − x2 + 3x3
+x5 = 4
x1 . . . x5 ≥ 0
Duala nasaitze-aldagaiekin:
min G = 5y1 + 4y2
ondoko murrizketen menpe
y1 + 2y2 −y3
= 3
2y1 − y2
−y4
= 1
y1 + 3y2
−y5 = −2
y1 . . . y5 ≥ 0

5.4. SOLUZIO DUAL OPTIMOA TAULAN
clvii
Osagarrizko
nasaitasunaren
teorematik
eratorritako
ondorioak
erabiliz:
• x1 =
13
5 > 0 ⇒ y1 + 2y2 = 3, hau da, y3 = 0
• x2 =
6
5 > 0 ⇒ 2y1 − y2 = 1, hau da, y4 = 0
• x3 = 0 ⇒ Ezin da esan problema dualaren 3. murrizketa berdintasunez
edo desberdintasunez betetzen den. Beraz, nasaitze-aldagaia gehitu behar
zaio.
y1 + 3y2 − y5 = −2
• x4 = 0 ⇒ Problema primalaren lehen murrizketa berdintasunez betetzen
da. Orduan, ezin da esan
y1 positiboa den edo zero den.
• x5 = 0 ⇒ Aurrekoaren arrazoi beragatik ezin da esan y2 positiboa den edo
zero den.
Eredu dualaren soluzioa kalkulatzeko ondoko sistema ebatzi behar da.
y1 + 2y2 = 3
2y1 − y2 = 1
y1 + 3y2 − y5 = −2
Soluzioa:
y
∗
T = (y1 y2) = (1 1) , G∗ = 9
Ikus daitekeenez, eredu dualaren lehen bi murrizketak berdintasunez betetzen dira
eta hirugarrena ez.
y5 = 6 da.
2
5.4
Soluzio dual optimoa taulan
Ikus dezagun, simplex metodoaren bidez problema primala ebaztean, inplizitu-
ki dagokion problema duala ebazten ari garela. Soluzio dual optimoa primalaren
taula optimotik lor daiteke, osagarrizko nasaitasunaren teorema erabiltzeko behar-
rik izan gabe.
Lehen ikusi dugunez, y
∗
T = cT
B B
−
1 eredu dualaren soluzioa da. Suposa deza-
gun
Imxm identitate-matrizea A matrizearen azpimatrizea dela. Hau betetzen dela

clviii
KAPITULUA 5. DUALTASUNA
dakigu nasaitze-
aldagaiak edota aldagai artiﬁzialak sartzen ditugulako. Taula op-
timoan hasierako taulako identitate-matrizearen zutabeei dagozkien elementuek
B−1 matrizea osatzen dute. Hori ikustea oso erraza da; ez ahaztu, taula bakoitzeko
zutabe-bektoreak une horretako oinarriarekiko koordenatuak direla. Zutabe hori-
etan,
B oinarria optimoa izan edo ez izan, zera beteko da beti:
B
−
1I = B−1
Zutabe horiei dagozkien lerro adierazleko elementuak ondokoak dira:
zj − cj = c
T
B B
−
1a
j − cj
aj ∈ I
Osagai guztiak batera kalkulatzen badira ondoko bektorea lortzen da:
c
T
B B
−
1I − c
I = c
T
B B
−
1 − c
I
Beraz, y
∗
T = cT
B B
−
1 lortzeko, aurreko bektoreari cI batu besterik ez da egin
behar.
• I matrizea nasaitze-aldagaiez osaturik baldin badago, cI = 0 da.
• Bestela, aldagai artiﬁzialak baldin badaude, bektore horrek −M balioak
izango ditu.
2
Adibidea:
clv. orriko adibideko problema lineala har dezagun.
max z = 3x1 + x2 − 2x3
ondoko murrizketen menpe
x1 + 2x2 + x3 ≤ 5
2x1 − x2 + 3x3 ≤ 4
x1, x2, x3 ≥ 0

5.4. SOLUZIO DUAL OPTIMOA TAULAN
clix
Hasierako taula:
−3 −1 2 0 0 0
a4
1
2 1 1 0 5
a5
2 −1 3 0 1 4
Simplex metodoa erabiliz lortutako soluzio optimoaren taula:
0 0
6
1
1
9
a2 0 1 −
1
5
2
5
−1
5
6
5
a1 1 0
7
5
1
5
2
5
13
5
Hasierako taulan ikusten da
B = {a4, a5} lehenengo oinarria, identitatea hain
zuzen ere, nasaitze-
aldagaiez osaturik dagoela, oinarri optimoan 4. eta 5. zutabeei
dagokien matrizea
B−1 dela eta zutabe horretan dauden (z4 − c4, z5 − c5) =
cT
B B
−
1I − cI dualaren soluzioa direla cI bektorea batuz gero. Hala ere, kasu
honetan cI = 0 da, eta ondorioz y
∗
T
= cT
B B
−
1 = (1 1) da dualaren soluzio
optimoa.
2
Oro har, eredu guztiak ez dira primal-dual simetriko izango, aurreko adibidean
gertatu bezala. Horrelakoetan, lehen oinarriko diren aldagai artiﬁzialek helburu-
funtzioa zigortzen dute, eta c bektorearen osagai horiek kontutan izan beharko
ditugu dualaren soluzioa kalkulatzeko.
Adibidea:
Demagun ondoko eredua:
min z = x1 + 2x2
ondoko murrizketen menpe
4x1 + 3x2 ≤ 12
x1 + 3x2 ≥ 6
2x1 + x2 ≥ 4
x1, x2 ≥ 0

clx
KAPITULUA 5. DUALTASUNA
Simplex metodoa erabiltzen hasteko, beharrezko gertatzen zaigu 2 aldagai arti-
ﬁzial (
w1 eta w2) eta nasaitze-aldagaiak gehitzea. Lehen oinarria B = I =
{a3, aw1, aw2} da, eta ebatziko dugun eredua hauxe izango da:
max (−z) = −x1 − 2x2 − Mw1 − Mw2
ondoko murrizketen menpe
4x1 + 3x2 +x3
= 12
x1 + 3x2
−x4
+w1
= 6
2x1 + x2
−x5
+w2 = 4
x1 . . . w2 ≥ 0
Beharrezkoak diren simplex metodoaren bi iterazioak taulakoak dira.
cB
x1
x2
x3
x4
x5
w1
w2
-3M+1
-4M+2
0
M
M
0
0
-10M
0
a3
4
3
1
0
0
0
0
12
-M
aw1
1
3
0
-1
0
1
0
6
-M
aw2
2
1
0
0
-1
0
1
4
−
5
3 M +
1
3
0
0
−
1
3 M +
2
3
M
4
3 M
−
2
3
0
-2M-4
0
a3
3
0
1
1
0
-1
0
6
-2
a2
1
3
1
0
−
1
3
0
1
3
0
2
-M
aw2
5
3
0
0
1
3
-1
−
1
3
1
2
0
0
0
3
5
1
5
M −
3
5
M −
1
5
−
22
5
0
a3
0
0
1
2
5
9
5
−
2
5
−
9
5
12
5
-2
a2
0
1
0
−
2
5
1
5
2
5
−
1
5
8
5
-1
a1
1
0
0
1
5
−
3
5
−
1
5
3
5
6
5
• Problema primalaren soluzioa:
x1 =
6
5
, x2 =
8
5
, −z
∗ = −
6
5
− 2 ·
8
5
= −
22
5
Beraz,
z∗ = 22
5 .

5.5. DUALTASUNAREN INTERPRETAZIO EKONOMIKOA
clxi
• Dualaren soluzioa: Hasierako taulan 3., 6. eta 7. zutabeek (oinarriko bek-
toreei dagozkienek) osatzen dute identitatea. Taula optimoan lerro adiera-
zleko zutabe horietan bilatu behar da dualaren soluzio optimoa.
*
z3 − c3 = cBB
−
1a3 − 0 = 0
*
zw1 − cw1 = cBB
−
1a
w
1 − M = M −
3
5
*
zw2 − cw2 = cBB
−
1a
w
2 − M = M −
1
5
Beraz,
(y1, y2, y3) = (0, M −
3
5
, M −
1
5
) + (0, −M, −M) = (0, −
3
5
, −
1
5
)
Kalkulatu berri ditugun aldagai dualen zeinua egokia den begiratu behar da.
Kontutan izan behar da
y1 eta y2 eredu dualaren erabaki-aldagaiak direla, eta
ondorioz, soluzio izateko ez-negatibotasun murrizketa bete behar dutela.
y1 eta
y2 aldagaiek balio negatiboak hartuko balituzte, emaitza ez litzateke zuzena izan-
go, ez luketelako ez-negatibotasun baldintza beteko. Hau gertatzen da, helburu-
funtzioa minimizatze izatetik maximizatze izatera pasa dugulako, eta honek alda-
gai dualen zeinuan eragina dauka.
Kasu honetan, dualaren soluzioa
y1 = 0, y2 =
3
5 , y3 =
1
5 da.
2
5.5
Dualtasunaren interpretazio ekonomikoa
Eredu linealaren soluzio optimoak baliabide eskasen esleipen optimoa ematen
digu. Aldagai dualen balio optimoek, geroago ikusiko dugunez, sistemaren bali-
abideen erabilgarritasuna edo kantitatea, b alegia, aldatzea komeni den ala ez esat-
en digu.
Problema primala eta dagokion duala emanik ondokoa betetzen da:
y∗T
= cT
B B
−
1
B
−
1 problema primalari dagokion B oinarri optimoaren alderantzizkoa da, eta y∗
bektorea problema dualaren soluzio optimoa.
Berdintza hori
zj − cj balioak kalkulatzeko erabil daiteke.
zj − cj = c
T
B B
−
1a
j − cj = y
∗
T a
j − cj

clxii
KAPITULUA 5. DUALTASUNA
5.5.1
Itzal-prezioak
Demagun eredu lineala eta dagokion
B oinarri optimoa ditugula, eta baliabideen b
bektorean zenbait aldaketa txiki gertatu dela, hau da, baliabide-bektorea b
+ ∆b
izatera pasatzen dela.
∆b txikia denez, B−1(b + ∆b) positibo mantentzen dela
suposatuko dugu. Guztiarekin, ondoko aldaketak gertatzen dira:
• Soluzio primal optimoa:
∧
x
∗
B = B
−
1(b + ∆b) = x∗
B + B
−
1∆b
B−1(b+∆b) ≥ 0 mantentzen dela esan dugunez, soluzio eguneratua bider-
agarria da.
• Lerro adierazlean:
zj − cj = c
T
B B
−
1a
j − cj
∀aj ∈ A
ez da aldatuko, b bektoreak jasandako aldaketak ez duelako bere gain ino-
lako eraginik. Hau honela izanik, y
∗ soluzio dual optimoa ez da aldatzen.
• Helburu-funtzio dualaren balioan:
∧
G= y
∗
T (b + ∆b) = y∗T b + y∗T ∆b = G + y∗T ∆b = z + y∗T ∆b
Helburu-funtzio primalaren balioa ere aldatu egingo da,
z = G betetzen
baita.
Guzti honetatik zera ondoriozta daiteke: baliabide-bektorearen aldaketak ez
duela soluzio dualaren osagaien gain inolako eraginik izango baldin B oinarri-
ak optimo izaten jarraitzen badu; bai ordea soluzio primalaren osagaien gain.
Helburu-funtzio dualaren balioa aldatu egiten da, y
∗
T ∆b bezain beste, hau da,
baliabide-bektorearen aldaketaren eta aldagai dualen araberakoa da.
Adibidez, baldin
∆bi = 1 bada eta gainontzeko baliabideak bere horretan
mantentzen badira, zera lortzen da:
y
∗
T ∆b = (y1 . . . ym)











0
..
.
1
..
.
0











= yi

5.5. DUALTASUNAREN INTERPRETAZIO EKONOMIKOA
clxiii
hots, helburu-
funtzioaren balioa zenbat handituko den aldagai dual optimoen balioek
ematen dute.
yi honek (i = 1 . . . m) zera neurtzen du:
 i baliabidea unitate bat gehituz gero
helburua zenbat handituko den. Hori dela eta,
yi balio dualari i baliabidearen
itzal-prezioa deitzen zaio.
Horrenbestez, problema dualaren soluzio optimoa ezagutzean ereduaren bali-
abideak handitzea komeni zaigun jakingo dugu, honen arabera handituko edo txik-
ituko baita helburu-funtzio primalaren balio optimoa.
Azter dezagun helburu-funtzio duala:
G = b1y1 + b2y2 + · · · + bmym
biyi batugai bakoitzak zera adierazten du:
 bi unitate i baliabide izateak izango
duen eragina helburu-funtzioan.
Adibidea:
Har dezagun clviii. orriko adibidea.
b1 = 5 eta b2 = 4 baliabideen itzal-
prezioak
y1 = 1 eta y2 = 1 direla ikusten da taula optimoan.
Zer esan nahi du horrek?
• b1 = 5 izatetik b1 + ∆b1 = 6 izatera pasatzen badugu, helburu-funtzioaren
balioa
y1 unitate gehituko dela: z
∗ = G∗ = 9 + y1 alegia, ondokoa betetzen
den artean:
xB = B
−
1(b + ∆b) ≥ 0
Bideragarria al da aldaketa egin ondoren lortzen den soluzioa?
xB =


2
5
−1
5
1
5
2
5




6
4


=


8
5
14
5


=


x2
x1


≥ 0
Soluzioa bideragarria da. Egiazta dezagun benetan helburu-funtzioaren balio
optimoa
z∗ = G∗ = 9 + y1 = 10 dela:
G
∗ = z∗ = cBxB = (1 3)


8
5
14
5


= 10

clxiv
KAPITULUA 5. DUALTASUNA
• b2-rentzat interpretazioa bera izango da. Baliabide hau 4 izatetik 5 izatera
handitzen badugu eta
xB = B
−
1(b + ∆b) ≥ 0
betetzen bada, orduan
y2 = 1 da baliabide honi dagokion itzal-prezioa. b2
baliabidearen kopurua handitzeak helburuaren balioaren handitzea eragingo
du.
xB =


2
5
−1
5
1
5
2
5




5
5


=


1
3


=


x2
x1


≥ 0
z
∗ = G∗ = 9 + y2
2

5.5. DUALTASUNAREN INTERPRETAZIO EKONOMIKOA
clxv
Adibidea:
Azter dezagun orain clix. orriko adibidea. Dualaren soluzioa hau dela esan
dugu:
y1 = 0 , y2 =
3
5
, y3 =
1
5
Baldin
b1 baliabidea b2 baliabidea eta b3 baliabidea, bakoitza unitate bat gehitu-
ta ere bideragarritasun primala mantenduko balitz,
bi baliabidearen itzal-prezioa
yi (i = 1 . . . 3) izango litzateke.
Kasu honetan
b1 baliabidea b1 = 12 izatetik b1 + ∆b1 = 13 izatera aldatzen
bada, soluzio optimoa aldatu egiten dela ikusten da, beti ere taulan optimaltasuna
galdu gabe.
xB = B
−
1(b + ∆b) =





1 −2
5
−9
5
0
2
5
−1
5
0 −1
5
3
5










13
6
4





=





17
5
8
5
6
5





≥ 0
Hala ere, helburu-funtzioaren balioa ez da aldatuko:
z = cBxB = (0 − 2 − 1)





37
5
8
5
6
5





= −
16
5
−
6
5
= −
22
5
Zergatik ez da helburu-funtzioaren balioa hobeagotu? Itzal-prezioaren balioa
y1 =
0 delako. Hori hobeto ulertzeko, begira dezagun ea ereduaren lehen murrizketan
zer gertatzen den.
Lehen murrizketa
(4x1 + 3x2 ≤ 12) aldaketa egin aurretik geneukan soluzio
optimorako egiaztatuz gero,
(x∗ = ( 6
5
8
5 )), zera dakusagu:
4 ·
6
5
+ 3 ·
8
5
< 12
Ez da berdintasunez betetzen. Honek zera esan nahi du:
b1 baliabidea (b1 = 12)
kopuru handiegian dagoela. Beraz, aldaketa egin aurretik dagoeneko baliabidea
soberan baldin bageneukan, oraindik ere gehiago handiagotzeak ez digu inolako
hobekuntzarik ekarriko.
Gainontzeko bi baliabideetarako ere modu berean egiten da interpretazio ekonomikoa.
2

clxvi
KAPITULUA 5. DUALTASUNA
5.5.2
Aldagai primalen kostu ekonomikoa
Baldin koeﬁziente teknologikoen matrizeko
aij bakoitzak j jarduera-unitate bakoitzak
eskatzen duen
i baliabidearen unitate-kopurua adierazten badu orduan
m
i
=1
aijyi
batukariak
xj (j = 1 . . . n) jardueraren kostu ekonomikoa zenbatzen du itzal-
prezioekiko ebaluatuta.
Ondokoan ikus daiteke primalaren eta dualaren arteko erlazioa:
xj
↓
a11
a12 · · · a1j · · · a1n
≤ b1 → y1
a21
a22 · · · a2j · · · a2n
≤ b2 → y2
..
.
..
.
am1 am2 · · · amj · · · amn ≤ bm → ym
xj-ren unitateko irabazia cj izanik 
(j = 1 . . . n), problema dualaren murrizketa
bakoitzak zera ematen digu:
m
i
=1
aijyi ≥ cj
kostu ekonomikoaren eta irabaziaren arteko erlazioa. Sarrera adibidean 
(cxxxvii.
orrian), aztertu dugu erlazio hori. Osagarrizko nasaitasunaren teoremaren ondori-
oetan (clv. orrian) ikusi dugunez,
m
i
=1
aijyi > cj
dualaren murrizketa bat ez bada berdintasunez betetzen, hau da, kostu ekonomikoa
cj baino handiagoa denean dagokion xj aldagai primala xj = 0 izango da, oinar-
riko izango ez delarik.

5.6. SIMPLEX DUAL METODOA
clxvii
5.5.3
Simplex metodoaren interpretazioa
Simplex metodoak erabiltzen dituen erregelak ekonomikoki interpreta daitezke.
Hasierako
xj aldagai bat oinarrikoa ez bada, hau da, j jarduera burutzen ari ez
bada,
j jarduera hori burutzearen unitateko kostu ekonomikoa ondokoa da:
m
i
=1
aijyi
Kostu ekonomikoak ondoko desberdintzak bete ditzake:
m
i
=1
aijyi = y
T a
j
≥
<
cj
Interpretazio ekonomikoaren sarreran ikusi dugunez, yT aj = zj betetzen da, hau
da,
zj − cj = yT aj − cj. Simplex metodoaren edozein iteraziotan, xj aldagaiar-
entzat ondokoak gerta daitezke:
• Baldin
m
i
=1
aijyi < cj hau da, zj − cj < 0 ⇒ baliabideak era probetxugar-
riagoan erabiliak izango dira
xj jarduera hasten bada.
• Baldin
m
i
=1
aijyi > cj ⇒ baliabideak era errentagarrienean erabiltzen dira.
xj jarduera hasteak ez du merezi.
• Baldin
m
i
=1
aijyi = cj ⇒ xj oinarrian dago
Laburbilduz, simplex metodoak egiten duena zera da: oinarriko ez diren alda-
gai guztiak aztertzen ditu, baliabideen erabilpenaren handiagotzea ekar dezaketen
ala ez ikusteko. Aldagaia oinarrira sartzean gertatzen da hori. Hobetzea posible
ez bada, daukagun esleipena optimoa da.
5.6
Simplex dual metodoa
Simplex metodoaren erabilpenean ikusi dugu soluzio bideragarri batetik hasten
garela, behar izanez gero aldagai artiﬁzialak erabiliko ditugularik. Algoritmoaren

clxviii
KAPITULUA 5. DUALTASUNA
hurrengo pausoetan problema primalaren soluzioaren bideragarritasuna ez da galtzen,
hau da, mutur-
puntu batetik beste batera goazela ziurtatzen digu metodoak, azke-
nean mutur-puntu optimoan bukatuko dugun arte. Hau
zj − cj ≥ 0 ∀aj ∈ A
betetzean gertatuko da.
Lerro adierazlean
zj −cj ≥ 0 ∀aj ∈ A baldintza betetzen dela esatea eta prob-
lema dualerako soluzioa bideragarria dela esatea guztiz baliokideak dira. Begira
bestela:
zj − cj ≥ 0 ∀aj ∈ A ⇐⇒ zj − cj = c
T
B B
−
1a
j − cj ≥ 0 ∀aj ∈ A ⇐⇒
⇐⇒ y
T a
j − cj ≥ 0 ∀aj ∈ A ⇐⇒ y
T A − c ≥ 0 ⇐⇒ AT y ≥ c
Aurreko baliokidetasunetatik zera ondorioztatzen da:
1. Soluzioa da.
zj − cj ≥ 0 ∀aj ∈ A betetzen denean problema dualaren
murrizketak betetzen dira .
2. Bideragarria da. Taula optimoan
zj − cj balioak positiboak dira, hots, bider-
agarritasun duala dago.
Eredu lineal bat ebazterakoan, problema primalarentzat eta dualarentzat aldi
berean bideragarri izango den soluzioa aurkitu nahi dugu, orduan bakarrik izango
baita soluzioa optimo. Primalarentzat bideragarri den soluziotik hasten gara eta
zj − cj ≥ 0 lortzean dualarentzat ere soluzioa bideragarria dela dakigu.
Aurreko gaian eraiki dugun simplex metodoari simplex primala deituko diogu
eta orain ikusiko dugunari simplex duala.
Simplex primal metodoa problema primalarentzat bideragarria den oinarri batetik
hasten da, eta aldi berean dualarentzat ere bideragarri izango den batean amaitzen.
Simplex dual metodoa aldiz, dualarentzat bideragarri den oinarri batetik hasten da,
eta metodoaren zenbait pausoren ondoren, problema primalarentzat ere bideragar-
ri izango den oinarri bat lortuko dugu.
Guztiarekin, zera ikus dezakegu: eredu baten soluzioa lortzean, dagokion du-
alaren soluzioa ere taula berberak ematen digunez, soluzioak lortzeko ez zaigu-
la ajolako problema primalari dagokion soluzio bideragarri batetik edo dualari
dagokion batetik hastea.
Hau abantaila handia da, simplex dual metodoaren pausoak simplex primal
metodoaren berberak direlako, une bakoitzean egokien gertatuko zaigun metodoa
erabiltzea komeniko zaigularik.

5.6. SIMPLEX DUAL METODOA
clxix
5.6.1
Simplex dual metodoaren urratsak
Metodo hau helburu-funtzioa maximizatze-idazkeran dagoen kasuan erabiltzeko
dago eraikia. Hau hala ez den kasuetan ereduari beharrezko aldaketak egin be-
harko dizkiogu metodoaren urratsak jarraitzen hasi baino lehen. Metodoaren ur-
ratsak ondoren datozenak dira:
1. Hasierako taulan
∀aj ∈ A-rako zj − cj ≥ 0 bete behar da bideragarritasun
duala izan dadin.
2. Bideragarritasun primalari dagokionez, ondorengo bi kasuetan egon gin-
tezke:
• Baldin xBi ≥ 0 ∀i = 1 . . . m, orduan taula hori optimoa da, bidera-
garritasun primala ere badaukagulako. Amaitu.
• Baldin ∃xBi < 0, orduan soluzioa hobe daiteke.
3. Oinarria aldatuko da. Oinarritik irtengo den bektorea:
ar/xBr = Min {xBi/xBi < 0}
r pibot-lerroa da. Oinarrian sartuko den bektorea:
ak/
zk − ck
yrk
= Max {
zj − cj
yrj
/yrj < 0}
Baldin
∃
/yrj negatiborik, orduan ezingo dugu piboterik izan, oinarritik ezin
izango dugulako bektorerik atera. Horrelakoetan problemak ez du soluziorik.
Duala bornegabea da eta primala bideraezina. Amaitu.
4. Oinarrizko matrize-eragiketen bidez ak zutabea er bektore bihurtzen da,
yrk pibota izanik. 2. urratsera itzuli, eta urratsak jarraitu optimaltasun bald-
intzak bete arte.
Adibidea:
Demagun ondorengo eredu lineala ebatzi nahi dugula:
min z = 3x1 + 2x2
ondoko murrizketen menpe

clxx
KAPITULUA 5. DUALTASUNA
x1 + 2x2 ≥ 3
−2x1 + x2 ≥ 2
x1 + 4x2 ≥ 7
x1, x2 ≥ 0
Hasteko, bai simplex primal metodoa eta bai simplex dual metodoa erabili ahal
izateko, helburu-funtzioa maximizatze eran jarri beharko dugu:
max (−z) = −3x1 − 2x2
Murrizketek 3 nasaitze-
aldagai eskatzen dituzte, eta hala eta guztiz ere, ez dugu
identitate-
matrizea lortzen. Berau lortzeko 3 aldagai artiﬁzial sartu beharko ditugu
eta orduan izango dugu eredua simplex primal metodoa erabiltzen hasteko prest.
Kasu honetan, problema primalarentzako bideragarri den soluzio batetik prob-
lema ebazten hastea baino hobe genuke problema dualarentzako bideragarri den
soluzio batetik hastea: helburu-
funtzioaren koeﬁziente guztiak negatiboak izatea-
gatik, lehen taulan bideragarritasun duala daukagu zuzenean. Murrizketa guztiak
(-1)-
az biderkatuko ditugu, eta optimizatu beharko dugun eredua honako hau izan-
go da:
max (−z) = −3x1 − 2x2
ondoko murrizketen menpe
−x1 − 2x2 ≤ −3
2x1 − x2 ≤ −2
−x1 − 4x2 ≤ −7
x1, x2 ≥ 0
x3, x4 eta x5 nasaitze-aldagaiak gehitu ondoren lortuko dugun hasierako taula
hauxe da:
3
2 0 0 0
0
a3 −1 −2 1 0 0 −3
a4
2 −1 0 1 0 −2
a5 −1
-4
0 0 1 −7

5.6. SIMPLEX DUAL METODOA
clxxi
Hasierako taula honetan ez dago bideragarritasun primalik,
xB =





−3
−2
−7





≥ 0
betetzen delako. Bai ordea bideragarritasun duala
∀aj ∈ A
zj − cj ≥ 0 betet-
zen delako. Hemendik abiatuz 2 bideragarritasunak (primala eta duala) beteko
dituen eta ondorioz optimoa izango den soluziora iristea posible da simplex dual
algoritmoa erabiliz.
Simplex dual metodoa erabiliz problema ebatziko dugu.
xBr = min {xBi/xBi < 0} = min {−3, −2, −7} = −7
a5 oinarritik irtetzen da. Oinarriratzen da:
ak/
zk − ck
yik
= max {
3
−1
,
2
−4
} =
z2 − c2
y22
= −
1
2
Pibota
= −4
Simplex primal metodoan egiten diren kalkulu berberak eginez ondorengo taula
lortzen da:
5
2
0 0 0
1
2 ↓
−7
2
−2
0 a3 −
1
2
0 1 0
−1
2
1
2
2
0 a4
9
4
0 0 1
−1
4
−1
4
←
−2 a2
1
4
1 0 0
−1
4
7
4
1
Bideragarritasun duala badago, baina ez primala zeren eta
∃xBi < 0.
• xB2 = −
1
4
⇒
a4 oinarritik irtetzen da.
• a5 sartzen da, y2j < 0 betetzen duen bakarra delako.
• Pibota: −1
4 . Pibot lerroa: bigarrena.

clxxii
KAPITULUA 5. DUALTASUNA
Taula eguneratua:
7 0 0
2 0 −4
0 a3 −5 0 1 −2 0
1
0 a5 −9 0 0 −4 1
1
−2 a2 −2 1 0 −1 0
2
Taula honetan bideragarritasun primala eta duala dauzkagu. Hortaz, optimoa
da.
2
5.7
Murrizketa artiﬁzialaren metodoa
Askotan, aldi berean bideragarritasun duala duen eta bideragarritasun primala
ez duen hasierako taula bat aurkitzea zaila gertatzen da. Honek simplex dual
metodoaren erabilpena murriztu egiten du. Arazoa konpontzen duten metodoak
garatu dira. Horietariko bat murrizketa artiﬁzialaren metodoa da.
Metodo hau, aldi berean
zj − cj negatibo bat edo gehiago eta xBi < 0 bat edo
gehiago duten problematan, hau da, ez bideragarritasun primalik eta ez bideragar-
ritasun dualik ez duten problematan erabilgarria da.
N aldagai dual negatiboen
multzoa bada, problemari ondoko murrizketa artiﬁziala gehitzen zaio:
j∈N
xj ≤ M
M balioa taulan agertu litekeen beste edozein baliorekin konparatuz oso balio
handia da. Murrizketa artiﬁzialari nasaitze-
aldagai bat gehitu eta hasierako taulan
sartzen da.
Hasiera batean,
zj − cj negatiboen artetik txikiena duen aldagaia hartzen da
sarrera-aldagai izateko, eta irteera-
aldagaia murrizketa artiﬁzialari gehitutako nasaitze-
aldagaia izango da. Prozesu honek balio-adierazle guztiak ez-negatiboak izatea
eragingo du, ondoren simplex dual metodoa erabiltzea posible gertatzen delarik.
Metodo honen bidez lor daitezkeen emaitzak ondokoak dira.
1. Soluzio optimoa lortu da baldin murrizketa artiﬁzialaren nasaitze-aldagaia
azken oinarrian balio positiboz agertzen bada.

5.7. MURRIZKETA ARTIFIZIALAREN METODOA
clxxiii
2. Problemak ez dauka soluziorik pibote posiblerik ez badago, hau da,
xBi <
0 bat edo gehiago baldin badago baina dagozkien yrj balio guztiak ez-
negatiboak badira (duala bornegabea da eta primala bideraezina).
3. Murrizketa artiﬁzialaren nasaitze-
aldagaia azken oinarrian zero balioaz agertzen
bada edo azken oinarrian agertzen ez bada problema bornegabea izan daiteke
edo bestela, aukeratutako M balioa ez da nahiko handia.
Ondorengo adibideetan murrizketa artiﬁzialaren metodoa erabili ondoren ger-
ta daitezkeen kasuak ikusiko ditugu.
Adibidea:
Har dezagun ondoko eredu lineala:
max z = x1 + 6x2
ondoko murrizketen menpe
x1 + 2x2 ≤ 20
x1 +
1
2
x2 ≥
1
2
x1, x2 ≥ 0
2. murrizketa (-1) balioaz biderkatu eta
x3 eta x4 nasaitze-aldagaiak gehituko
ditugu:
max z = x1 + 6x2
ondoko murrizketen menpe
x1 + 2x2 +x3
= 20
−x1 −
1
2 x2
+x4 = −
1
2
x1 . . . x4 ≥ 0
Hasierako taula:
x1
x2
x3 x4
-1
-6
0
0
0
a3
1
2
1
0
20
a4
-1
−1
2
0
1
−1
2

clxxiv
KAPITULUA 5. DUALTASUNA
Taula honetan ez dago ez bideragarritasun primalik ez eta bideragarritasun du-
alik ere. Ezin gaitezke ez simplex primal metodoa 
(aldagai artiﬁzialik gehitu gabe)
ez eta simplex dual metodoa erabiltzen hasi. Bai ordea murrizketa artiﬁzialaren
metodoa. Horretarako hasierako taula eraikitzeko murrizketa artiﬁziala gehituko
diogu ereduari:
x1 + x2 ≤ 100
M erabili ordez oraingo honetan 100 balioa erabiltzea erabaki dugu, balio hau,
taulako gainontzeko balioekin konparatuz, nahiko handia delarik. Hasierako taula:
x1
x2
x3 x4 x5
-1
-6
↓
0
0
0
0
-6
a3
1
2
1
0
0
20
2
a4
-1
−1
2
0
1
0
−1
2
−1
2
a5
1
1
0
0
1
100
←
x2 aldagaia oinarriratuko da, z2 −c2 = −6 delako negatiboen artetik txikiena.
Oinarritik
x5 aldagaia irtengo da, murrizketa artiﬁzialari dagokion nasaitze-aldagaia,
hain zuzen ere. Pibota 1 balioa da. Eragiketak egin ondoren, ondoko taulara iris-
ten gara:
x1
x2 x3 x4 x5
5
0
0
0
6
600
a3
-1
0
1
0
-2
-180
a4
−1
2
0
0
1
1
2
99
2
a2
1
1
0
0
1
100
Taula honetan bideragarritasun duala badagoenez, simplex dual metodoa er-
abiltzen has gaitezke.

5.7. MURRIZKETA ARTIFIZIALAREN METODOA
clxxv
x1
x2
x3
x4
x5
5
0
0
0
6
↓
600
-3
a3
-1
0
1
0
-2
-180
←
a4
−1
2
0
0
1
1
2
99
2
−1
4
a2
1
1
0
0
1
100
−1
2
2
0
3
0
0
60
a5
1
2
0
−1
2
0
1
90
a4
−3
4
0
1
4
1
0
9
2
a2
1
2
1
1
2
0
0
10
Bideragarritasun primala eta duala izatea lortu dugu eta murrizketa artiﬁzialaren
nasaitze-aldagaia,
x5, oinarrian dago. Daukagun soluzioa optimoa da: x
∗
1 = 0 ,
x∗
2 = 10 , z
∗ = 60.
2
Ondorengo adibidean problema primala bornegabea eta dagokion duala bider-
aezina den kasua ikusten da.
Adibidea:
Demagun eredu lineal hau daukagula.
max z = −4x1 + 5x2
ondoko murrizketen menpe
2x1 + 2x2 ≥ 4
x1 − x2 ≥ 3
x1, x2 ≥ 0
Nasaitze-aldagaiak eta murrizketa artiﬁziala gehituz, honela gelditzen zaigu.
max z = −4x1 + 5x2
ondoko murrizketen menpe

clxxvi
KAPITULUA 5. DUALTASUNA
−2x1 − 2x2 +x3
= −4
−x1 + x2
+x4
= −3
x2
+x5 = M
x1 . . . x5 ≥ 0
Murrizketa artiﬁzialaren metodoa erabiliz taula optimoa lortuko dugu. Ikusten
denez, zenbat eta balio handiagoa aukeratu M balioarentzat, orduan eta handi-
agoak izango dira xB bektorearen balioak. Primala bornegabea da eta duala
bideraezina.
x1
x2 x3 x4
x5
4 −5
0
0
0
0
a3 −2 −2
1
0
0
−4
a4 −1
1
0
1
0
−3
a5
0
1
0
0
1
M
4
0
0
0
5
5M
a3 −2
0
1
0
2 −4 + 2M
a4
-1
0
0
1 −1
−3 − M
a2
0
1
0
0
1
M
0
0
0
4
1
M − 12
a3
0
0
1 −2
4
4M + 2
a1
1
0
0 −1
1
3 + M
a2
0
1
0
0
1
M
2
Adibidea:

5.7. MURRIZKETA ARTIFIZIALAREN METODOA
clxxvii
Ikus dezagun duala bornegabea eta primala bideraezina den kasua.
max z = 2x1 + x2
ondoko murrizketen menpe
x1 + x2 ≤ 2
−3x1 + x2 ≥ 3
x1, x2 ≥ 0

clxxviii
KAPITULUA 5. DUALTASUNA
Murrizketa artiﬁzialaren metodoa erabiliz.
max z = 2x1 + x2
ondoko murrizketen menpe
x1 + x2 +x3
= 2
3x1 − x2
+x4
= −3
x1 + x2
+x5
= M
x1 . . . x5 ≥ 0
Simplex metodoaren urratsak:
x1
x2
x3
x4
x5
−2
−1
0
0
0
0
a3
1
1
1
0
0
2
a4
3
−1
0
1
0
−3
a5
1
1
0
0
1
M
0
1
0
0
2
2
M
a3
0
0
1
0
−1
2
− M
a4
0
-4
0
1
−3 −3 − 3M
a1
1
1
0
0
1
M
0
0
0
1
4
5
4
5M
−3
4
a3
0
0
1
0
-1
2
− M
a2
0
1
0
−
1
4
3
4
3+3M
4
a1
1
0
0
1
4
1
4
M
−3
4
0
0
5
4
1
4
0
17
4
a5
0
0
−1
0
1
M
− 2
a2
0
1
3
4
−
1
4
0
9
4
a1
1
0
1
4
1
4
0
−
1
4

5.8. ARIKETAK
clxxix
a1 aldagaiak oinarria utzi behar du baina ez dago pibote posiblerik. Hor-
taz, duala bornegabea da eta primala bideraezina. Graﬁkoki egiazta daiteke, nahi
izanez gero.
2
5.8
Ariketak
1. Ondoko problemen dualak kalkula itzazu:
(a)
max z = 3x1 + 5x2 − 4x3
ondoko murrizketen menpe
2x1 − x2 − x3 ≤ 2
x1 + 4x2 − 3x3 ≥ −4
2x1 + x2 + 2x3 = 2
x1, x2, x3 ≥ 0
(b)
min z = −x1 − x2 + 2x3
ondoko murrizketen menpe
x1 − 2x2 + x3 = 5
2x1 − 3x2 + 2x3 ≤ 6
x1 : murriztugabea
x2 ≥ 0 , x3 ≤ 0
(c)
max z = x1 − 2x2 + x3
ondoko murrizketen menpe
x1 + 5x2 − x3 ≤ 2
2x1 − x2 + 4x3 ≤ 6
x1 ≤ 0 , x2 ≥ 0
x3 : murriztugabea

clxxx
KAPITULUA 5. DUALTASUNA
2. Har dezagun aurreko ariketako lehen eredua.
(a) Helburu-funtzio dualaren balio optimoarentzako behe-borne bat eta
problema primalaren balio optimoaren goi-borne bat kalkula itzazu.
(b) Problema primala ebatzi eta taulatik dualaren soluzioa lortu.
3. Ebatz ezazu ondorengo problema simplex dual metodoa erabiliz:
max z = −x1 − x2 − x3
ondoko murrizketen menpe
x1 + 2x2 + 2x3 ≥ 5
−x1 − 3x2 + 4x3 ≥ 7
xj ≥ 0 j = 1, 2, 3
4. Demagun ondoko eredu lineala:
max z = −x1 + 4x2
ondoko murrizketen menpe
x1 − 3x2 ≤ 5
2x1 + 3x2 ≤ 2
−x1 + 5x2 ≤ 3
x1 + 4x2 ≤ 2
6x1 − 3x2 ≤ 7
x1, x2 ≥ 0
(a) Dagokion duala kalkula ezazu.
(b) Bai primalaren eta bai dualaren soluzioak aurki itzazu horietariko sin-
pleena ebatziz.
(c) Soluzioek osagarrizko nasaitasunaren teorema betetzen dutela egiazta
ezazu.
(d) Primalaren eta dualaren itzal-prezioak kalkula itzazu. Zein da itzal-
prezio hauen esanahia?
5. Har dezagun eredu lineal hau:
max z = 4x1 − 7x2 + x3

5.8. ARIKETAK
clxxxi
ondoko murrizketen menpe
x1 + 2x2 − 2x3 ≤ 6
−x1 + 3x2 + x3 = 3
2x1 + 3x2 − x3 ≥ 5
xj ≥ 0 j = 1 . . . 3
(a) Ebatz ezazu murrizketa artiﬁzialaren metodoa erabiliz.
(b) Dualaren soluzioa lor ezazu.
6. Ondorengo eredu linealen adibideak idatz itzazu:
(a) Primala bornegabea da eta duala bideraezina.
(b) Duala bornegabea da eta primala bideraezina.
(c) Primala bideraezina da eta baita duala ere.
7. Demagun honako eredu lineala:
min z = x1 + 2x2 + x3
ondoko murrizketen menpe
−x1 − x2 + 5x3 ≤ 14
2x1 + 3x2 − x3 ≥ 6
x1, x2, x3 ≥ 0
Bere soluzio optimoa x
= (3 0 0) da.
(a) Osagarrizko nasaitasunaren teorema erabiliz dualaren soluzioa lor eza-
zu.
(b) Metodorik egokiena (simplex primal edo duala) erabiliz problema ebatz
ezazu. Taulako soluzio duala aurreko puntuan lortutakoarekin aldera
ezazu.
(c) Aldagai dualen interpretazio ekonomikoa egin ezazu.

clxxxii
KAPITULUA 5. DUALTASUNA

Kapitulua 6
SENTIKORTASUN-ANALISIA
Behin programazio linealeko problema ebatzia izan denean, gerta liteke ered-
uaren b, c eta
A parametroek aldaketaren bat jasatea. Kontutan izan parametro
horiek denboran zehar aldakorrak izan daitezkeela. Edota aldaketarik ez gertatuta
ere, beharbada aldatuz gero zer gertatuko litzatekeen aurretik jakitea interesatuko
zaigu. Aldaketa gertatu ondoreneko problemaren soluzioa lortzeko ez dago zertan
berriro ere problema hasieratik ebatzi beharrik; nahikoa da sentikortasun-
anali-
sirako metodoak erabiltzea. Hauek, aldaketa gertatu aurreko ereduaren soluzio
optimotik hasten dira eta iterazio-kopuru garrantzitsua aurrezten dute.
Ereduaren parametroetan gertatutako aldaketek soluzio optimoan zer nolako
eragina sortzen duten aztertzea sentikortasun-
analisia edo postoptimaltasun anal-
isia deitzen da.
6.1
Aldaketa diskretuak
Eredu linealeko c
, b eta A parametroetan gerta daitezkeen aldaketa diskretuak eta
baita murrizketa-kopuruaren aldaketa eta aldagai-kopuruaren aldaketa aztertzen
dira analisi honetan.
Aldaketa horien esanahia ulertzeko adibide bat aztertuko dugu; baliabide-
esleipenaren problema. Problema hau izango da aldaketa guztien eragina aztertzeko
erabiliko duguna gai osoan zehar.
Adibidea:
Demagun 3 gasolina mota desberdin ekoitzi nahi direla: A, B eta D. Horre-
tarako, 2 esentzia mota erabiliko dira:
 1 eta 2. Gasolina mota bakoitza ekoizteko
clxxxiii

clxxxiv
KAPITULUA 6. SENTIKORTASUN-ANALISIA
Taula 6.1:
GASOLINAK
ESENTZIA-
ESENTZIAK
A
B
D
KOPURUA
1
4
2
1
40
2
2
3
1
30
IRABAZIA
1
2
2
behar den esentzia bakoitzeko kopurua, esentzien erabilgarritasuna eta ekoitzitako
gasolina-unitate bakoitzagatik lortutako irabazia 6.1 .taulakoak dira.
Problema ebazteko eraikitako eredu lineala, behin beharrezko nasaitze-alda-
gaiak
(x4, x5) gehituak izan direnean, ondokoa da:
max z = x1 + 2x2 + 2x3
ondoko murrizketen menpe
4x1 + 2x2 + x3 +x4
= 40
2x1 + 3x2 + x3
+x5 = 30
xj ≥ 0 j = 1 . . . 5
Dagokion simplex metodoaren taula optimoa hau da:
x1 x2 x3 x4 x5
3
4
0
0
2
60
a4
2
-1
0
1
-1
10
a3
2
3
1
0
1
30
Soluzio optimoa
x1 = 0, x2 = 0 eta x3 = 30 da, eta lortu ahal izango dugun
irabazi handiena
z∗ = 60-koa da. Nola lortuko dugu irabazi maximoa? D gasolina
30 unitate ekoitziz
x∗
3 = 30. Hau da baliabide-esleipen optimoa.

6.1. ALDAKETA DISKRETUAK
clxxxv
2
Zer lortzen dugu ereduaren parametroen aldaketa diskretuak aztertzerakoan?
Ba, b baliabide-kopurua aldatuko bagenu, honek soluzio optimoan izango lukeen
eragina ezagutzea lortuko genuke sentikortasun-analisiaren bidez. Gauza bera
c prezio-bektorean gertatutako aldaketekin eta
A-ko elementuen aldaketarekin,
gasolinen konposizioan gerta litezkeenekin alegia.
Adibidea:
Har dezagun aurreko adibidea, eta ikus dezagun zer nolako aldaketak gerta
daitezkeen:
1. Interesgarri gerta liteke baliabide-kopuruak 40 eta 30 izan ordez 50 eta 20
balira, lehen lortutako emaitza nola aldatuko litzatekeen ezagutzea; edo-
ta irabazien bektorea (1, 2, 2) izatetik (1, 1, 1) izatera pasako balitz. Edo,
lehenengo gasolinaren konposizioa aldatzen bada, hau da, a1 bektorea


4
2


izatetik


3
3


izatera pasatzen bada.
2. Aldaketa horietaz gain, honelakoak ere azter genitzake: E gasolina mota
desberdin bat ekoizten has liteke lantegia. Demagun 1 eta 2 esentzien 1 eta
2 unitate behar direla horretarako, hurrenez hurren, gasolina horrekin lor-
tuko den irabazia 2-koa izango delarik. E gasolina berria ekoizten hasteak
soluzio optimoaren gain eraginik izango al luke? Begira, oraingo honetan
eredu linealari aldagai berri bat gehitzen ari gatzaizkiola.
3. Eta, A, B eta D gasolinak ekoizteko beste esentzia desberdin bat erabiltzen
hasiko bagina orain artekoez gain? 3. esentzia adibidez? Aldaketa honek
ereduaren murrizketa-kopuruaren gain du eragina.
Aldaketa guzti horiek eta beste zenbait adibideen bidez aztertuko ditugu.
Aldaketa horiek guztiak banan-bana gerta daitezke, baina baita 2 edo gehi-
ago batera ere. Guk banakako aldaketak bakarrik aztertuko ditugu gai honetan;
besteak analisi berberari jarraituz egin daitezke.
2
Demagun idazkera kanonikoan dagoen problema lineala daukagula eta b
≥ 0
dela. Dagozkion hasierako taula eta taula optimoa ondokoak dira:

clxxxvi
KAPITULUA 6. SENTIKORTASUN-ANALISIA
• Hasierako taula:
Hasierako aldagaiak Nasaitze-aldagaiak
x1 . . . xn
xn+1 . . . xn+m
−C
0
0
A
I
b

6.1. ALDAKETA DISKRETUAK
clxxxvii
• Taula optimoa, B oinarri optimoa izanik:
Hasierako-aldagaiak
Nasaitze-aldagaiak
z1 − c1 . . . zn − cn
zn+1 − cn+1 . . . zn+m − cn+m
CBB
−
1A − C
CBB
−
1
CT
B XB
B−1A
B−1
B−1b
Sentikortasun-analisia taula optimoaren erabileran oinarritzen da. Taula horre-
tako
B
−
1 matrizea erabiltzen da baliabideen b bektorean edo ereduaren murrizketa-
kopuruan aldaketaren bat egin ondoren bideragarritasun primala galdu den ala ez
aztertzeko. Taula bera erabiliko dugu baita c bektorean, koeﬁziente teknolojikoen
A matrizean edo problemaren aldagai-kopuruan aldaketaren bat burutu ondoren
bideragarritasun duala galdu den edo ez egiaztatzeko. Azter dezagun, ba, orain
aldaketa guzti hauen eragina.
6.1.1
b bektorearen aldaketak
Demagun idazkera estandarrean dagoen hasierako problema ondokoa dela:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
Demagun, baita, dagokion taula optimoa ezaguna zaigula.
Baldin b bektorea diskretuki aldatu eta b
+ ∆b balioa hartzen badu, ∆b bek-
torea
m osagaiko bektorea izanik, ebatzi behar den problema orain honako hau
da:
max z = c
T x

clxxxviii
KAPITULUA 6. SENTIKORTASUN-ANALISIA
o. m. m.
Ax = b + ∆b
x
≥ 0
Esan dugunez, parametroetan aldaketaren bat gertatzen denean, aldaketa gertatu
aurretik geneukan ereduari dagokion taula optimoa hartuko dugu sentikortasun-
analisia egiten hasteko. Izan bedi B soluzio optimo horri dagokion oinarria. Al-
daketa egin aurretik geneukan problemaren soluzioa eta helburu-
funtzioaren balio
optimoa:
xB = B
−
1b ≥ 0
z = c
T
B xB
Aldaketa gertatzean, hau da, b-ren ordez b
+ ∆b jartzean, soluzio eguneratua
hau izango da:
∧
xB= B
−
1(b + ∆b)
• Baldin
∧
xB≥ 0, hau da, B
−
1(b + ∆b) ≥ 0
⇒
B oinarria optimoa da
baita aldaketa egin ondoreneko problemarako ere, eta
∧
xB soluzio optimoa
da.
• Baldin B−1(b + ∆b) ≥
/ 0
⇒
bideragarritasun primala galdu da; bider-
agarritasuna berrezartzeko simplex dual metodoa erabili beharko da. Horri
esker, aldaketa egin ondoreneko problemaren soluzio optimoa lortuko dugu.
Simplex dual metodoa erabiltzen hasteko aldaketa egin aurretik geneukan
taula optimoa hartuko dugu, xB-ren ordez
∧
xB jarriaz.
Adibidea:
1. Demagun baliabide-bektorean aldaketa bat gertatu dela.
• Orain arteko baliabide-bektorea: b =


40
30


• Aldaketa gertatu ondorenekoa: b + ∆b =


50
20



6.1. ALDAKETA DISKRETUAK
clxxxix
Baliabide-bektore horri dagokion eredu linealaren soluzio optimoa kalku-
latuko dugu.
∧
xB= B
−
1(b + ∆b) =


1 −1
0
1




50
20


=


30
20


≥ 0
Bideragarritasun primala ez da galdu; B oinarriak optimo izaten jarraitzen
du. Soluzioaren osagaiak eta helburu-funtzioaren balio optimoa dira aldatu
diren taulako balio bakarrak:
z
∗ = (0 2)


30
20


= 40
Taula optimoa:
3
4 0 0
2 40
a4 2 −1 0 1 −1 30
a3 2
3 1 0
1 20
Honek zera esan nahi du: soluzio optimoa eta helburu-funtzioak lortuko
duen balio optimoa aldatu badira ere (orain D gasolina 20 unitate ekoitziko
dira eta irabazia 40 -koa izango da) oinarri optimoak berbera izaten jar-
raitzen duela (D gasolina ekoizteari ekingo diogula).
Guzti hori ondorioztatzeko ez dago zertan problema hasieratik ebatzi behar-
rik. Aldaketa egin aurreko taula optimoa hartu eta egindako azterketa egitea
nahikoa da baliabide-esleipen optimoa lortzeko.
2. Azter dezagun beste aldaketa hau:
b
+ ∆b =


20
60


∧
xB= B
−
1(b + ∆b) =


1 −1
0
1




20
60


=


−40
60


≥ 0

cxc
KAPITULUA 6. SENTIKORTASUN-ANALISIA
z
∗ = (0 2)


−40
60


= 120
Bideragarritasun primala galdu egin da. Simplex dual metodoa erabili be-
harko dugu bideragarritasuna berreskuratzeko.
x1
x2 x3 x4
x5
3
4
0
0 2 ↓
120
−2
a4
2 −1
0
1
-1
−40 ←
a3
2
3
1
0
1
60
−1
7
2
0
2
0
40
a5 −2
1
0 −1
1
40
a3
4
2
1
1
0
20
• Soluzio optimoa: x1 = 0, x2 = 0, x3 = 20
• Irabazi handiena: 40koa.
2
6.1.2
c bektorean gertatutako aldaketak
Demagun hasierako problema
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
dela eta dagokion soluzio optimoa ezaguna dela. Demagun c-ren balioa aldatu eta
c
+ ∆c balioa hartzen duela, ∆c bektorea n osagaikoa izanik. Ebatzi beharko den

6.1. ALDAKETA DISKRETUAK
cxci
problema ondorengoa da:
max z = (c + ∆c)
T x
o. m. m.
Ax = b
x
≥ 0
Abiapuntutzat hasierako problemaren soluzio optimoa hartuz gero, c bektore-
an gertatutako edozein aldaketak
zj − cj balioen gain eragina duela ikusten da.
Balio horietakoren bat negatibo bihurtuko balitz, bideragarritasun duala galduko
litzateke. Aldaketa gertatu ondorenerako balioak:
∧
zj −
∧
cj =
∧
cB B
−
1a
j −
∧
cj = (cB + ∆cB)B
−
1a
j − (cj + ∆cj )
• Baldin
∧
zj −
∧
cj≥ 0 ∀aj ∈ A
⇒
B oinarriak oinarri optimo izaten
jarraitzen du, xB O.S.B.O. eta z
∗ = (cB + ∆cB)T xB
• Baldin ∃
∧
zj −
∧
cj< 0
⇒
une horretako taula ez da optimoa, eta bidera-
garritasun duala berreskuratzeko simplex algoritmoa erabili beharko da.
Horren esanahia hobeki ulertzeko ikus dezagun gure adibidearen bitartez c
bektorearen aldaketa hau:
Gasolina mota baten ekoizpenak sortutako irabazia aldatu dela (gutxiagotu)
suposatzen ari gara. Oinarrian dagoen gasolina motaren batek sortutako
irabazia oso txikia bihurtzen bada, agian gasolina hori ekoizten jarraitzeak
errentagarri izateari utziko dio.
Adibidea:
Jarrai dezagun problema berberarekin. Dagokion taula optimoa ezaguna da.
Azter ditzagun c prezio-bektorerako ondorengo aldaketak:
1. Baldin
(c + ∆c)T = (1 1 1)
•
∧
z1 −
∧
c1= (0 1)


2
2


− 1 = 2 − 1 = 1
•
∧
z2 −
∧
c2= (0 1)


−1
3


− 1 = 3 − 1 = 2

cxcii
KAPITULUA 6. SENTIKORTASUN-ANALISIA
•
∧
z3 −
∧
c3=
∧
z4 −
∧
c4= 0
•
∧
z5 −
∧
c5= (0 1)


−1
1


− 0 = 1
Ez da bideragarritasun duala galdu
∧
zj −
∧
cj guztiak positiboak direlako.
Beraz, soluzioen bektore optimoa ez da aldatzen. D gasolina oinarrian dago,
eta ekoizten jarraituko dugu berak sortutako irabazia 2-tik 1-era jeitsi bada
ere. Orain arteko kopuru berbera ekoizten jarraituko dugu gainera.
xB =


10
30


Baina
z balioa bai aldatzen dela, c-ren oinarriko osagaiak aldatu egin dire-
lako:
z
∗ = (0 1)


10
30


= 30
D gasolinak sortutako irabazia (c3 = 2 → c3 + ∆c3 = 1) erdira jaistean,
irabazia ere erdira jaitsi dela (
z∗ = 60 →
∧
z∗= 30) ikusten da.
2. Baldin
(c + ∆c)T = (4 2 3
2 )
•
∧
z1 −
∧
c1= (0
3
2 )


2
2


− 4 = −1
•
∧
z2 −
∧
c2= (0
3
2 )


−1
3


− 2 = 5
2
•
∧
z3 −
∧
c3=
∧
z4 −
∧
c4= 0 oinarrikoak direlako.
•
∧
z5 −
∧
c5= (0
3
2 )


−1
1


= 3
2
Bideragarritasun duala galdu dela dakusagu. Soluzio optimoa lortzeko sim-
plex metodoa erabili beharko da.

6.1. ALDAKETA DISKRETUAK
cxciii
x1
x2 x3 x4
x5
−1 ↓
5
2
0
0
3
2
60
−1
2
a4
2
−1
0
1 −1 10 ←
a3
2
3
1
0
1 30
1
0
2
0
1
2
1 50
a1
1 −1
2
0
1
2
−1
2
5
a3
0
4
1 −1
2 20
Soluzio optimoa:
x1 = 5 , x3 = 20 → 5 unitate A gasolina eta 20 unitate
D gasolina ekoiztean lortzen da irabazi handiena:
z∗ = 50.
Oraingo honetan, D gasolinaren irabaziaren jaitsierak eta A gasolinak sor-
tutako irabaziaren igoerak A gasolina ekoiztea errentagarri izatea eragin du.
2
6.1.3
aj bektorearen aldaketa j oinarrikoa ez denean
A-ko
aij teknologi koeﬁziente bat edo gehiagoren aldaketa aztertuko dugu, baina
aj oinarrikoa ez denean bakarrik. Aldaketa oinarrikoa den aldagai batean gertatuz
gero, problema hasieratik ebaztea gomendatzen da,
B−1 aldatzean taula osoa al-
datuko litzatekeelako.
Baldin aj ∈ A aj ∈ B bektorea aldatu eta aj + ∆aj balioa hartzen badu,
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
problemaren taula optimoan ondoko aldaketak gertatzen dira:
1. Oinarri optimoaren funtzioan dauden aj bektorearen yj-ko osagaiak aldatu
eta lortzen diren balioak B optimoaren funtzioan dauden
∧
aj-ren
∧
yj-ko os-
agaiak izango dira.
∧
yj= B
−
1 ∧
aj

cxciv
KAPITULUA 6. SENTIKORTASUN-ANALISIA
2.
zj − cj balioa ere aldatzen da:
∧
zj −cj = cBB
−
1 ∧
aj −cj
∧
zj −cj = cB
∧
yj −cj
Aldaketa horiek kontutan hartuz ondokoak gerta daitezke:
• Baldin
∧
zj −cj ≥ 0 bada, orduan B oinarriak optimo izaten jarraitzen du, xB
O.S.B.Optimoa eta
z helburu-funtzioaren balio optimoa izango direlarik.
• Baldin
∧
zj −cj < 0 bada, orduan bideragarritasun duala galtzen da eta sim-
plex metodoa erabili behar da berau berreskuratzeko.
Adibidea:
Har dezagun problema eta ikus dezagun bi aldaketek sortutako eragina.
1. Oinarrikoa ez den bektore bat da aldatuko duguna:
a1 =


4
2


→
a1 + ∆a1 =


3
3


Bideragarritasun duala galtzen ez dela egiazta daiteke.
∧
y1= B
−
1(a1 + ∆a1) =


1 −1
0
1




3
3


=


0
3


∧
z1 −c1 = (0 2)


0
3


− 1 = 6 − 1 = 5 > 0
Beraz, taula optimoa:
5
4 0 0
2 60
a4 0 −1 0 1 −1 10
a3 3
3 1 0
1 30

6.1. ALDAKETA DISKRETUAK
cxcv
Hau da, A gasolinaren konposaketaren aldaketa honek ez du aldaketa aur-
retik lortutako baliabide-esleipen optimoaren gain inolako eraginik sortu.
2. Demagun beste aldaketa hau:
a1 =


4
2


→
a1 + ∆a1 =


3
0.2


Aldaketa honek
z1 − c1 balioaren gain eragina dauka, y1 bektorea aldatu
egiten delako:
∧
y1= B
−
1(a1 + ∆a1) =


1 −1
0
1




3
0.2


=


2.8
0.2


∧
z1 −c1 = (0 2)


2.8
0.2


− 1 = 0.4 − 1 = −0.6
Bideragarritasun duala galdu da. Simplex metodoa erabiliz,
x1
x2
x3
x4
x5
−0.6 ↓
4
0
0
2
60
−0
.
6
2.8
a4
2.8
−1
0
1
−1
10 ←
a3
0.2
3
1
0
1
30
0.2
2.8
0
3.8
0
0.2
1.8 62.143
a1
1 −0.35
0
0.35 −0.35
3.57
a3
0
3.07
1 −0.07
1.07
29.3
a1 bektorearen koeﬁzienteak aldatzea lehenengo gasolinaren kalitatea aldatzea
da eta, soluzio optimoan ikusten denez gasolina hori ekoiztea errentagarri bihurtu
zaigu.
2

cxcvi
KAPITULUA 6. SENTIKORTASUN-ANALISIA
6.1.4
Aldagai berriak gehitzea
xj aldagai berriak gehitzean, zj − cj balio berriak eta yj zutabe berriak sortzen
dira. Aldagai berriei dagozkien
cj prezio eta aj bektoreak ezagunak izanik, balio
berriak honela kalkulatzen dira:
zj − cj = cBB
−
1a
j − cj
yj = B
−
1a
j
• Baldin zj −cj ≥ 0 badira ⇒ xj aldagai berriak ez zaizkigu oinarriratuko.
Hortaz, daukagun oinarriak optimo izaten jarraitzen du.
• Baina, ∃zj − cj < 0 ⇒ aj bektoreak oinarrian sartu behar du, eta simplex
metodoa erabili beharko da optimaltasuna lortzen den arte.
Adibidea:
Gure probleman oinarrituz, demagun problemari aldagai berri bat eransten
diogula, hau da, E gasolina mota desberdin bat ekoizten hasi nahi dugula. Bi
kasu gerta daitezke.
1. Sartu berri den aldagaia soluzio optimoan oinarriko bihurtzen ez bada, ez
soluzio bektorea ezta helburu-
funtzioaren balioa ere ez dira aldatuko. Adibidez,
x4 aldagaia sartuko bagenu, non
a4 =


1
2


, c4 = 2
y4 = B
−
1a
4 =


1 −1
0
1




1
2


=


−1
2


z4 − c4 = (0 2)


−1
2


− 2 = 4 − 2 = 2
Taula optimoa:

6.1. ALDAKETA DISKRETUAK
cxcvii
x1 x2 x3 x4 x5 x6
3
4
0
2
0
2 60
a5
2 −1
0 −1
1 −1 10
a3
2
3
1
2
0
1 30
Bideragarritasun duala ez da galdu eta soluzio optimoa ez da aldatu. Baliabide-
esleipenak aldaketa egin aurreko berbera izaten jarraitzen du.
x4 aldagai berria denez, nasaitze-aldagaiak x5 eta x6 izendatzen ditugu.
2. Sartu berri dugun aldagaia oinarriko bihurtzen bada, bere ekoizpena komeni-
garria (errentagarria) dela esan nahi du. Hau, bideragarritasun duala galtzean
gertatzen da. Adibidez,
x4 aldagai berri hau sartuko dugu:
a4 =


2
1


, c4 = 3
Kalkuluak eginez:
• y4 = B
−
1a4 =


1 −1
0
1




2
1


=


1
1


• z4 − c4 = (0 2)


1
1


− 3 = 2 − 3 = −1
Ondoko taula lortzen da:

cxcviii
KAPITULUA 6. SENTIKORTASUN-ANALISIA
x1 x2 x3
x4
x5
x6
3
4
0 −1 ↓
0
2 60
−1
a5
2 −1
0
1
1 −1 10 ←
a3
2
3
1
1
0
1 30
1
5
3
0
0
1
1 70
a4
2 −1
0
1
1 −1 10
a3
0
4
1
0 −1
2 20
Taula optimo honek dioenez,
x1 = x2 = 0 dira, D gasolina x3 = 20 unitate
ekoizten da eta E gasolina berria
x4 = 10 unitate, irabazi handiena (z
∗ =
70) lortzeko.
2
6.1.5
Murrizketa berriak gehitzea
Behin eredu lineala ebatzi dugunean, gerta liteke eredu linealari murrizketaren
bat gehitu beharra izatea. Horrelakoetan ere aldaketa egin aurretik geneukan taula
optimoa erabiliko dugu murrizketa gehitu ondoreneko eredu linealaren soluzio
optimoa lortzeko. Demagun
n
j
=1
aijxj
≥
< bi
i = m + 1 . . . m + k
moduko
k (k > 0) murrizketa gehitu nahi dizkiogula hasierako problemari. Bi
kasutan egon gintezke:
1. Hasierako problemari dagokion xB soluzio optimoak murrizketa berriak
betetzea
⇒ xB problema berriaren soluzio optimoa ere bada.
2. Baldin hasierako problemaren soluzio optimoak (xB) sartu berri ditugun
murrizketetariko bat beteko ez balu, murrizketak taula optimoan sartu be-
harko genituzke. Horren ondorioz bideragarritasun primala galdu dela ikusten
badugu, simplex dual metodoa erabili beharko da bideragarritasuna berresku-
ratzeko.

6.1. ALDAKETA DISKRETUAK
cxcix
Azter ditzagun bi kasu horiek adibideen bidez.
Adibidea:
Demagun A, B eta D gasolinak ekoizteko 3. motako esentzia berria ere erabili
nahi dugula. Azter ditzagun datozen bi aldaketak:
1. Demagun murrizketa hau sartu nahi dugula:
x1 + x2 + x3 ≤ 50
3. motako esentzia berri honen erabilgarritasuna 50-ekoa dela esaten zaigu
bertan. Oraingoan, murrizketa sartu aurretik geneukan soluzio optimoak
betetzen du murrizketa berri hau:
xB =


x4
x3


=


10
30


x1 + x2 + x3 ≤ 50 ⇒ 0 + 0 + 30 ≤ 50
Bideragarritasun primala ez da galdu eta soluzio optimoa berbera da:





x1
x2
x3





=





0
0
30





D gasolina ekoizten jarraituko dugu, orain D gasolina ekoizteko 3. esentzia
ere erabiliko dugularik. Irabazi optimoa ez da aldatuko.
2. Demagun ereduari
x1 + x2 + x3 ≤ 20 murrizketa gehitzen diogula. Orain
arteko soluzio optimoak betetzen al du murrizketa hau?
x1 = 0, x2 =
0, x3 = 30
0 + 0 + 30 ≤ 20
Ez. Beraz, murrizketa taulari erantsi behar zaio. Nasaitze-aldagai bat behar
dugu,
x6, desberdintza berdintza bihurtzeko. Taulako 3. lerroan sartuko
dugu.

cc
KAPITULUA 6. SENTIKORTASUN-ANALISIA
x1 x2 x3 x4 x5 x6
3
4
0
0
2
0 60
a4
2 −1
0
1 −1
0 10
a3
2
3
1
0
1
0 30
a6
1
1
1
0
0
1 20
Oinarrikoa den a3 bektorea ez dago oinarriarekiko ondo adierazia. Kon-
pontzeko 3. lerroari 2.-a kenduko diogu. Horren ondorioz bideragarritasun
primalik ez duen taula lortzen da, eta simplex dual metodoa erabiliz bidera-
garritasun hori berreskuratuko dugu.
x1
x2
x3 x4 x5
x6
3 4 ↓
0
0
2
0
60
−2
a4
2 −1
0
1 −1
0
10
1
2
a3
2
3
1
0
1
0
30
−3
2
a6 −1
-2
0
0 −1
1 −10 ←
1
0
0
0
0
2
40
a4
5
2
0
0
1 −1
2
−1
2
15
a3
1
2
0
1
0 −1
2
3
2
15
a2
1
2
1
0
0
1
2
−1
2
5
Taulan bideragarritasun primala eta duala lortu direnez optimoa da. B eta D
gasolinak ekoitziz lortzen da irabazi handiena.
2

6.2. PROGRAMAZIO PARAMETRIKOA
cci
6.2
Programazio parametrikoa
Programazio parametrikoak ereduaren parametroetan gertaturiko aldaketa jarraiak
aztertzen ditu. Aldaketa jarrai horiek parametro baten funtzioan gertatzen dira.
Aldaketa jarraiak ezin daitezke ez aldagai-kopuruan ez eta murrizketa-kopuruan
gerta. Koeﬁzienteen matrizean aldaketa jarraiak gertatzea posible da, baina hau
ez da maiz gertatzen eta ez gara hor sartuko. Aztertuko ditugun bi aldaketa jar-
rai bakarrak c prezio-bektorean gertatutakoak eta b baliabide-
bektorean gertatu-
takoak izango dira.
6.2.1
Prezio-bektorean gertatutako aldaketa jarraiak
Demagun idazkera estandarrean dagoen eredu lineala daukagula:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0
Dagokion eredu parametrikoa ondokoa da:
max z = (c + θσ)
T x
o. m. m.
Ax = b
x
≥ 0
non
σ osagai ezagunak dituen bektorea den eta θ parametro bat den. Proble-
marako lortuko ditugun soluzioak
θ parametroarekiko adieraziak egongo dira. θ
parametroak balio positibo eta negatiboak har ditzake. Hori dela eta, azterketa bi
zatitan banatuko dugu.
θ parametroaren balio positiboetarako azterketa (θ ≥ 0)
Demagun
θ = 0 den kasurako ereduaren oinarri optimoa B0 dela. Oinarri hori
optimoa izateagatik bideragarritasun primala eta duala betetzen dituen taula bat
egokitzen zaio.
θ > 0 bada, prezio-bektorea aldatu egiten da, eta aldaketa diskretuetarako
analisian ikusi dugun bezala, honek bideragarritasun dualaren gain 
(lerro adiera-
zlea) badu eraginik.

ccii
KAPITULUA 6. SENTIKORTASUN-ANALISIA
Aldaketaren ondoren lerro adierazleak izango duen balioa honela kalkulatzen
da:
∀aj ∈ B
∧
zj −
∧
cj= (c
T
B
0 + θσ
T
B
0)B
−
1
0 aj − (cj + θσj ) =
= c
T
B
0B
−
1
0 aj + θσ
T
B
0B
−
1
0 aj − cj − θσj =
= (c
T
B
0B
−
1
0 aj − cj ) + θ(σ
T
B
0B
−
1
0 aj − σj ) =
= zj − cj + θ(σ
T
B
0B
−
1
0 aj − σj )
zj − cj ≥ 0 eta θ > 0 direnez, lerro adierazleko balioak negatiboak izateko
beharrezkoa izango da
σT
B
0B
−
1
0 aj − σj < 0 beteko duen aj bektoreren bat exis-
titzea. Hau hala ez balitz, oinarriak optimo izaten jarraituko luke,
θ parametroak
edozein balio positibo hartuta ere. Beraz,
• Baldin σT
B
0B
−
1
0 aj − σj ≥ 0
∀aj ∈ A ⇒ B0 optimoa da ∀θ ≥ 0
• Baldin ∃ σT
B
0B
−
1
0 aj − σj < 0
⇒
[0, θ
∗] tartea deﬁnituko duen θ∗ balioa
existitzen da. Tarte honetako
θ balioetarako B0 oinarria optimoa da.
θ
∗ =
min
aj ∈ B
{
−(zj − cj)
σT
B
0B
−
1
0 aj − σj
/σ
T
B
0B
−
1
0 aj − σj < 0}
θ∗ balioaren eraginez lerro adierazleko balioren bat zero bihurtuko da eta
gainontzekoak positiboak mantenduko dira.
θ∗ baino hertsiki handiagoak
diren
θ parametroaren balioetarako aj bektoreari dagokion
∧
zj −
∧
cj balioa
negatibo bihurtzen da. Bideragarritasun duala galdu egiten da eta
B0 oinar-
ria ez da optimoa izango.
θ = θ∗ denerako prezio-bektoreari dagokion taula kalkulatzen da. Taulan
bideragarritasun duala badago, baina oinarriko ez den aj bektoreren bati
dagokion
∧
zj −
∧
cj balioa zero dela ikusiko dugu. aj bektore hori oinarrira
sartuko dugu. Honela,
θ = θ∗ denerako B1 beste oinarri optimo bat lortzen
da.
Azterketa honekin aurrera jarraituz gero
B1 oinarria θ parametroaren zein
tartetan izango den optimo jakingo dugu.
Adibidea:
Har dezagun honako problema parametrikoa:

6.2. PROGRAMAZIO PARAMETRIKOA
cciii
max z = (1 + 3θ)x1 + (2 + 3θ)x2 + (2 + θ)x3
ondoko murrizketen menpe
4x1 + 2x2 + x3 +x4
= 40
2x1 + 3x2 + x3
+x5 = 30
xj ≥ 0 j = 1 . . . 5
θ = 0 denerako taula optimoa hau dela dakigu:
3
4 0 0
2 60
a4 2 −1 0 1 −1 10
a3 2
3 1 0
1 30
Oinarria:
B0 = {a4, a3}
Baldin
∃σT
B
0B
−
1
0 aj −σj < 0
aj ∈ B0 bektoreren batentzat, orduan parametroaren
balio positiboetarako bideragarritasun duala galdu egingo da.
Demagun oinarriko ez diren bektoreen matrizea
N0 dela. Zera daukagu:
σ
T
B
0B
−
1
0 N0 − σ
T
N
0 = (0
1)


2 −1 −1
2
3
1


− (3 3 0) =
= (2 3 1) − (3 3 0) = (−1 0 1)
σB0B
−
1
0 a1 − σ1 = −1 < 0 betetzen da, eta ondorioz, badago θ parametroaren
balioren bat balio horretatik aurrera
B0 optimo izango ez delarik. Kasu honetan:
θ
∗ =
−(z1 − c1)
σT
B
0B
−
1
0 a1 − σ1
=
−3
−1
= 3

cciv
KAPITULUA 6. SENTIKORTASUN-ANALISIA
∀θ ∈ [0, 3] B0 oinarri optimoa da. Soluzio optimoa:
xB0 =


10
30


=


x4
x3


Helburuak lortzen duen balio optimoa:
z(θ) = (0 2 + θ)


10
30


= 60 + 30 θ
θ ≥ 3-rako azterketa errepikatu egin behar da. Lehenik θ = 3-rako aukerazko
oinarri optimoa kalkulatu behar da. Parametroaren balio horrentzako lerro adier-
azlea eta balio optimoa kalkulatuz taula eguneratuko dugu:
•
∧
z1 −
∧
c1= 3 + 3(−1) = 0
•
∧
z2 −
∧
c2= 4 + 3(0) = 4
•
∧
z5 −
∧
c5= 2 + 3(1) = 5
• z = 60 + 30 · 3 = 150
Taula eguneratuan, oinarriko ez den a1 bektoreari dagokion
∧
z1 −
∧
c1 balioa
zero da. Bektore hori oinarriratu egiten da,
B1 beste oinarri bat lortuko dugularik.
x1
x2
x3 x4
x5
0 ↓
4
0
0
5 150
a4
2
−1
0
1 −1
10 ←
a3
2
3
1
0
1
30
0
4
0
0
5 150
a1
1 −1
2
0
1
2
−1
2
5
a3
0
4
1 −1
2
20

6.2. PROGRAMAZIO PARAMETRIKOA
ccv
θ = 3-n 2 oinarri optimo daude: B0 = {a4, a3} eta B1 = {a1, a3}, aukerazko
soluzioak daudelarik. Azter dezagun
B1 oinarria θ-ren zein balio tarterako den
optimo.
σ
T
B
1B
−
1
1 N1 − σ
T
N
1 = (3 1)


−1
2
1
2
−1
2
4 −1
2


− (3 0 0) = (−
1
2
1
2
1
2
)
σB1B
−
1
1 a2 − σ2 = −
1
2
< 0 , ∃θ
∗∗ =
−4
−1
2
= 8
Honek
B1 oinarria zein tartetan den optimo zehazten digu. Beraz, B1 oinarria
optimoa da
∀θ ∈ [3, 3 + 8]-rako.
xB1 =


5
20


=


x1
x3


z(θ) = (1 + 3θ, 2 + θ)


5
20


= 45 + 35θ
θ ≥ 11 balioetarako soluzio optimoa ﬁnkatu nahi izanez gero analisia errepikatu
beharko dugu. Hala ere, normalean aldaketak zenbait tartetan bakarrik aztertzen
dira.
2
θ parametroaren balio negatiboetarako azterketa (θ ≤ 0)
θ parametroak 0 balioa hartzen duenean, B0 oinarria optimoa da eta soluzio op-
timoa ezagutzen dugu.
θ ≤ 0 balioetarako, lerro adierazlearen kalkulua balio
positiboetarako egiten den bezala egiten da:
∧
zj −
∧
cj= zj − cj + θ(σB0B
−
1
0 aj − σj )
∀aj ∈ B
zj − cj ≥ 0 eta θ ≤ 0 izanik,
• Baldin ∃σT
B
0B
−
1
0 aj − σj > 0 orduan ∃ θ balioren bat (behar bezain txikia,
θ → −∞) zeinarentzat bideragarritasun duala galduko den eta azterketa

ccvi
KAPITULUA 6. SENTIKORTASUN-ANALISIA
parametroaren balio positiboen kasurako egin dugun bezala egin beharko
da.
θ∗ ondoko eran kalkulatzen da:
θ
∗ =
max
aj ∈ B
{
−(zj − cj)
σT
B
0B
−
1
0 aj − σj
/ σ
T
B
0B
−
1
0 aj − σj > 0}
• Baldin ∀aj ∈ B, σT
B
0B
−
1
0 aj − σj ≤ 0, orduan B0 oinarri optimoa da θ-ren
edozein baliotarako.
θ = θ∗-rako beste B1 oinarri bat kalkulatzen da eta azterketa errepika daiteke.
Adibidea:
Jarrai dezagun aurreko adibidearekin.
θ = 0 den kasurako soluzioa eta taula
optimoa ezagutzen ditugu. Baldin
θ ≤ 0 bada, bideragarritasun duala gal daiteke,
σT
B
0B
−
1
0 N0 − σ
T
N
0 = (−1 0 1) bektoreak balio positiboak dituelako.
σT
B
0B
−
1
0 a5 − σ5 = 1 da. Hori dela eta, θ
∗ <
−
2
1
balioetarako
∧
z5 −
∧
c5 balioa
negatiboa izango da,
B0 optimo izango ez delarik.
∀θ ∈ [−2, 0] baliorako, B0 optimoa da. Soluzio optimoa:
xB0 =


10
30


z(θ) = 60 + 30 θ
Baldin
θ = −2
•
∧
z1 −
∧
c1= 3 − 2(−1) = 5
•
∧
z2 −
∧
c2= 4 − 2(0) = 4
•
∧
z5 −
∧
c5= 2 − 2(1) = 0
• z∗ = 60 + 30 · (−2) = 0

6.2. PROGRAMAZIO PARAMETRIKOA
ccvii
x1 x2 x3 x4 x5
5
4
0
0 0 ↓
0
0
a4
2 −1
0
1 −1 10
−1
a3
2
3
1
0
1
30 ←
5
4
0
0
0
0
a4
4
2
1
1
0 40
a5
2
3
1
0
1 30
θ = −2 den kasurako, B0 eta B1 = {a4, a5} oinarriak optimo dira. Azter
dezagun ea zein
θ < −2 baliotarako den B1 optimo.
σ
T
B
1B
−
1
1 N1 − σ
T
N
1 = (0
0)


4 2 1
2 3 1


− (3 3 1) = (−3 − 3 − 1) ≥ 0
Beraz,
B1 optimo da ∀θ ∈ (−∞, −2]. Tarte horretan soluzio optimoa
xB1 =


40
30


da, eta helburu-funtzioak hartuko duen balio optimoa
z(θ) = (0 0)


40
30


= 0
da.
Problemarako soluzioak ondoko taulan bilduko ditugu:
θ parametroaren tartea Soluzio optimoa(xB) Balio optimoa(z(θ))
−∞ < θ ≤ −2
(0, 0, 0, 40, 30)
0
−2 ≤ θ ≤ 3
(0, 0, 30, 10, 0)
60 + 30θ
3 ≤ θ ≤ 11
(5, 0, 20, 0, 0)
35θ + 45

ccviii
KAPITULUA 6. SENTIKORTASUN-ANALISIA
θ > 11 balioetarako soluzioak era berean kalkulatzen dira. Helburu-funtzioaren
balioa
θ parametroaren funtzioan graﬁkoki marraz daiteke. Aztertu ditugun tarteak
marraztuko ditugu,
(−∞, 11] tartea alegia.
2
Adierazpen graﬁkoak
θ parametroaren balio hoberena ematen digu. Kasu
honetan
θ = 11 denean helburu-funtzioaren balioa optimoa da.
6.2.2
Baliabide-bektorean gertatutako aldaketa jarraiak
Demagun idazkera estandarrean dagoen eredu lineala:
max z = c
T x
o. m. m.
Ax = b
x
≥ 0

6.2. PROGRAMAZIO PARAMETRIKOA
ccix
Dagokion eredu parametrikoa hau da:
max z = c
T x
o. m. m.
Ax = b + θσ
x
≥ 0
non
σ bektorearen osagaiak ezagunak diren eta θ balio positiboak eta negatiboak
har ditzakeen parametroa den. c bektorearen aldaketa jarraiak aztertzerakoan egin
bezala, azterketa bi zatitan egingo dugu.
θ parametroaren balio positiboetarako azterketa (θ ≥ 0)
Jo dezagun
θ = 0 baliorako problemaren soluzioa badaukagula, B0 oinarri opti-
moa dela, xB0 = B
−
1
0 b soluzio optimoa dela, eta helburu-funtzioaren balio opti-
moa
z = cT
B
0xB0 dela.
Baldin
θ > 0 bada, hau da, baliabide-bektorea b + θσ bada, B0 oinarriarekiko
soluzioa aldatu egiten da.
xB0(θ) = B
−
1
0 (b + θσ) = B
−
1
0 b + θB
−
1
0 σ = xB0 + θB
−
1
0 σ
xB0 ≥ 0 dela badakigu, xB0 oinarriko soluzio bideragarria delako. B
−
1
0 σ bektorea
m osagaitako bektorea da. Bi kasu gerta daitezke.
• Baldin B
−
1
0 σ ≥ 0
⇒
xB0(θ) ≥ 0 eta B0 optimoa izango da ∀θ ≥
0-rako. Soluzio optimoa xB0(θ) izango da eta helburuaren balio optimoa
z(θ) = cT
B
0xB0(θ).
• Baldin B
−
1
0 σ ≥ 0 hau da, baldin ∃(B
−
1
0 σ)i < 0
⇒ θ > 0 balioren bate-
tarako xB0(θ) soluzioaren i. osagaia negatibo bihurtzen da, eta ondorioz,
B0 ez da optimo izango. i. osagaia 0 bihurtzen duen parametroaren balioa
hau da:
θ
∗ = −
(xB0)i
(B
−
1
0 σ)i
θ∗ baino hertsiki handiagoak diren balioek i osagaia negatibo bihurtzen
dute; balio horietarako bideragarritasun primala galdu egiten da eta soluzioa
kalkulatzea beharrezko gertatuko zaigu.

ccx
KAPITULUA 6. SENTIKORTASUN-ANALISIA
Baldin B
−
1
0 σ-ren osagai negatiboa bakarra ez bada,
θ
∗ = min {−
(xB0)i
(B
−
1
0 σ)i
/(B
−
1
0 σ)i < 0}
Beraz,
∀θ ∈ [0, θ∗] baliorako soluzio optimoa xB0(θ) da eta helburu-funtzioaren
balio optimoa
z(θ) = cT
B
0xB0(θ).
[θ
∗, ∞) tarterako soluzioak kalkulatzeko aurreko azterketa errepikatuko dugu.
Horretarako,
θ∗ baliorako taula eguneratu beharko da eta parametroaren
balio horretarako aukerazko soluzio optimoren bat kalkulatu beharko da
lehenik. Oraingo honetan, soluzio optimoa kalkulatzeko simplex dual metodoa
erabili behar da.
Adibidea:
Ondorengo problema parametrikoaren soluzioak kalkulatuko ditugu:
max z = x1 + 2x2 + 2x3
ondoko murrizketen menpe
4x1 + 2x2 + x3 +x4
= 40 + 2θ
2x1 + 3x2 + x3
+x5 = 30 + 3θ
xj ≥ 0 j = 1 . . . 5
θ = 0 denerako taula optimoa ezaguna zaigu:
3
4 0 0
2 60
a4 2 −1 0 1 −1 10
a3 2
3 1 0
1 30

6.2. PROGRAMAZIO PARAMETRIKOA
ccxi
Oinarri optimoa
B0 = {a4, a3} da eta:
b
=


40
30


, σ =


2
3


B
−
1
0 σ =


1 −1
0
1




2
3


=


−1
3


Kasu honetan
B
−
1
0 σ bektorearen lehen osagaia negatiboa da. Hori dela eta, B0
oinarria optimo izango da
θ∗ parametroak balio hau hartzen duen punturaino bakar-
rik:
θ
∗ = −
(xB0)1
(B
−
1
0 σ)1
=
−10
−1
= 10
[0, 10] tartean B0 oinarria optimoa da. Tarte horretarako soluzio optimoa eta
helburu-funtzioaren balio optimoa
xB0(θ) =


10
30


+ θ


−1
3


=


10 − θ
30 + 3θ


z(θ) = (0 2)


10 − θ
30 + 3θ


= 60 + 6θ
θ = 10 baliorako xB0(θ) =


0
60


x1
x2 x3 x4
x5
3
4
0
0 2 ↓ 120
−2
a4
2 −1
0
1
-1
0 ←
a3
2
3
1
0
1
60
−1
7
2
0
2
0 120
a5 −2
1
0 −1
1
0
a3
4
2
1
1
0
60

ccxii
KAPITULUA 6. SENTIKORTASUN-ANALISIA
θ = 10 baliorako B0 = {a4, a3} eta B1 = {a5, a3} dira oinarri optimoak.
Azter dezagun ea
θ-ren zein baliotarako den B1 oinarria optimo.
B
−
1
1 σ =


−1 1
1 0




2
3


=


1
2


≥ 0
xB1(θ) ≥ 0 ∀θ ≥ 10 eta ondorioz B1 optimoa da ∀θ ∈ [10, ∞). Soluzioa:
xB1(θ) =


0
60


+ (θ − 10)


1
2


=


θ − 10
40 + 2θ


z(θ) = (0 2)


θ − 10
40 + 2θ


= 80 + 4θ
2
θ parametroaren balio negatiboetarako azterketa (θ < 0)
θ = 0 balioari dagokion soluzio optimotik abiatuz eta parametroa aldatzean B0
oinarriaren funtzioan lortzen den soluzioa:
xB0(θ) = B
−
1
0 b + θB
−
1
0 σ = xB0 + θB
−
1
0 σ
xB0 ≥ 0 eta θ < 0 betetzen dela dakigu. Bi kasu posible dago:
• Baldin B
−
1
0 σ ≤ 0
⇒
B0 optimoa da ∀θ ∈ (−∞, 0]-rako.
• Baldin B
−
1
0 σ ≤ 0, hau da, ∃(B
−
1
0 σ)i > 0 orduan
θ
∗ = −
(xB0)i
(B
−
1
0 σ)i
balioak soluzioko
i osagaia zero egiten du eta θ
∗-ren balioa baino hertsiki
txikiagoak diren balioetarako
i osagai hau negatiboa izango da.
Baldin
B
−
1
0 σ bektoreak osagai negatibo bat baino gehiago baldin badu:
θ
∗ = max {−
(xB0)i
(B
−
1
0 σ)i
/(B
−
1
0 σ)i > 0}
θ = θ∗ balioan aukerazko optimoak existitzen dira. Beste soluzio optimo
hori kalkula daiteke parametroaren
θ∗ baliorako; azterketa errepikatuko da
hurrengo tarteak ﬁnkatzeko.

6.2. PROGRAMAZIO PARAMETRIKOA
ccxiii
Adibidea:
Aurreko adibidearekin jarrai dezagun. Ikus dezagun
θ ≤ 0 balioetarako soluzioak
zein diren.
Lehen oinarri optimoa,
B0, θ = 0 baliorako lortzen da.
B
−
1
0 σ =


1 −1
0
1




2
3


=


−1
3


(B
−
1
0 σ)2 = 3 da, positiboa ⇒ ∃θ
∗ =
−
30
3
= −10 non ∀θ ∈ [−10, 0] baliotarako
B0 optimoa den eta -10 balioa baino txikiagoentzako bideragarri izateari uzten
dion. Soluzioa:
xB0(θ) =


10
30


+ θ


−1
3


=


10 − θ
30 + 3θ


Helbururako balio optimoa:
z(θ) = (0 2)


10 − θ
30 + 3θ


= 60 + 6θ
Baldin
θ = −10 bada,
xB0(−1) =


20
0


θ < −10 balioetarako bigarren osagaia negatiboa izango litzateke. Beraz, os-
agai horretan bideragarritasun primala galduko litzateke. Honakoa da
θ = −10
baliorako taula
3
4 0 0
2
0
a4 2 −1 0 1 −1 20
a3 2
3 1 0
1
0
a3-k oinarritik irten beharko du, baina ez da piboterik existitzen eta ∀θ ∈
(−∞, −10]-rentzat ez dago soluziorik. Lortutako soluzioak taulan bilduz,

ccxiv
KAPITULUA 6. SENTIKORTASUN-ANALISIA
θ − ren tartea
Soluzio optimoa
(xB(θ)) Balio optimoa(z(θ))
−∞ < θ ≤ −10
ez dago soluziorik
− − − − −−
−10 ≤ θ ≤ 10
(0, 0, 30 + 3θ, 10 − θ, 0)
60 + 6θ
10 ≤ θ < ∞
(0, 0, 40 + 2θ, 0, θ − 10)
80 + 4θ
Helburu-funtzioaren balio optimoa
θ parametroaren funtzioan graﬁkoki mar-
raz daiteke:
Graﬁkan ikusten denez,
θ hazi ahala helburuaren balioa hazi egiten da.
2
6.3
Ariketak
1. Demagun ondoko eredu lineala:
max z = x1 + 2x2 − x3
ondoko murrizketen menpe
2x1 + 3x2 + x3 ≤ 6
x1 − 2x2 + x3 ≤ 5
x1 + x2 + x3 ≤ 9
xj ≥ 0 j = 1 . . . 3
(a) Eredua ebatz ezazu.
(b) Baldin cT
+ ∆cT bektorea (2 1 − 1) bada soluzio optimoa kalkula
ezazu.
(c) Baldin b
+ ∆b bektorea





5
4
1





bada soluzio optimoa kalkula ezazu.

6.3. ARIKETAK
ccxv
(d) Ondorengo aldaketak eginez gero soluzio optimoa kalkula ezazu:
a1 =





2
1
1





→
∧
a1=





3
2
2





∧
c1= 3
(e) Kalkula ezazu problemaren soluzio optimoa ereduari honako aldagaia
gehitzen zaion kasurako:
a4 =





4
1
−2





c4 = 2
(f) Zein izango litzateke soluzio optimoa ereduari murrizketa hau gehi-
tuko bagenio?
−x1 + x2 − x3 ≤ 3
(g) Eta beste hau gehituko bagenio?
x1 + 3x2 + x3 ≤ 4
2. Demagun honako eredu lineala:
max z = 2x1 + 3x2 + x3
ondoko murrizketen menpe
x1 + 3x2 + 2x3 ≤ 30
2x1 + 3x2 + x3 ≤ 30
xj ≥ 0 j = 1 . . . 3
(a) Zein da soluzio optimoa?
(b) Azter ezazu ondoko aldaketa parametrikoa:
b
+ θσ =


30
30


+ θ


1
2



ccxvi
KAPITULUA 6. SENTIKORTASUN-ANALISIA
3. Demagun ondoko eredu lineala:
max z = 2x1 − x2 + x3
ondoko murrizketen menpe
x1 + x2 + x3 ≤ 6
−x1 + 2x2 ≤ 4
x1, x2, x3 ≥ 0
Dagokion taula optimoa honakoa da:
0 3 1 2 0 12
a1 1 1 1 1 0
6
a5 0 3 1 1 1 10
(a) Azter itzazu honako aldaketa diskretuak eta eman ezazu soluzio opti-
moa kasu bakoitzean.
i. Baliabide-bektorea: b
+ ∆b =


5
3


ii. Prezio-bektorea: cT
+ ∆cT = (1 1 2)
iii. Ereduari murrizketa hau gehitzen zaio:
−x1 + 3x2 − x3 ≥ 2
(b) Baliabide-bektorea ondorengoa den kasurako analisi parametrikoa egin
ezazu:
b
+ θσ =


6 + θ
4 − 2 θ


Azter itzazu 0 inguruko
θ-ren balioak eta balio positiboak. Kalkulatu-
tako
tarteetan
helburu-funtzioari
balio
optimoa
emango dion
θ-ren balioa eta θ balio horretarako helburu-funtzioak
hartutako balioa kalkula itzazu.

6.3. ARIKETAK
ccxvii
4. Demagun ondoko eredu lineala:
max z = x1 − x2 + 2x3
ondoko murrizketen menpe
x1 + x2 + x3 ≤ 6
−x1 + 2x2 + 3x3 ≤ 9
x1, x2, x3 ≥ 0
Dagokion taula optimoa honakoa da:
0 11
4
0 5
4
1
4
39
4
a1 1
1
4
0 3
4
−1
4
9
4
a3 0
3
4
1 1
4
1
4
15
4
(a) cT bektorearen ordez
c
T + θσT = (1 − 1 2) + θ(−2 1 − 1)
bektorea baldin badaukagu,
θ-ren balio positiboetarako lehen bi tar-
teetarako soluzio optimoak kalkula itzazu.
(b) Aurreko puntuko bektore parametriko berberarekin jarraituz,
θ-ren balio
negatiboetarako lehen bi tarteetarako soluzio optimoak aurki itzazu.
(c) Aurreko bi puntuetan kalkulatutako
θ-ren balioak izanik, helburu-funtzioak
θ-ren zein baliotarako lortuko duen balio optimoa zehazta ezazu.

ccxviii
KAPITULUA 6. SENTIKORTASUN-ANALISIA
5. Demagun honako eredu lineala:
max z = 3x1 + 2x2 + x3
ondoko murrizketen menpe
2x1 + x2 + x3 ≤ 6
x1 + x2 + x3 ≤ 4
x1, x2, x3 ≥ 0
Dagokion taula optimoa hau da:
0 0 1
1
1 10
a1 1 0 0
1 −1
2
a2 0 1 1 −1
2
2
(a) Azter itzazu soluzio optimoak
θ-ren funtzioan (θ ≥ 0) prezio-bektorea
eta baliabide-bektorea honakoak izanik:
c
T + θσT = (3 2 1) + θ (1 3 1)
b
+ θσ =


6 + θ
4 + 2 θ


Azterketa lehen bi tarteetarako egin ezazu.
(b) Kalkula ezazu
θ ≤ 0 zein balio tarterako izango den aurreko taula
optimo eta soluzioak eman itzazu.

Kapitulua 7
GARRAIO-PROBLEMA ETA
ESLEIPEN-PROBLEMA
Garraio-problema eta esleipen-problema egitura bereziko eredu linealak besterik
ez dira, eta ebazteko orain arte ikusitako programazio linealaren metodoak er-
abiltzea posible da. Hala ere, beren egitura bereziari probetxurik handiena atera
asmoz beste metodo eraginkorragoak eraiki dira.
7.1
Garraio-problema
Programazio linealaren erabilpen praktiko garrantzitsua da garraio-
problema. Zer-
tan datza? Produktu-unitateak
m jatorri-puntutatik n helburu-puntutara garra-
iatzean datza, ondorengo baldintzapean:
• i jatorri-puntu bakoitzean ai (i = 1 . . . m) produktu-
unitate dago garraiatua
izateko prest.
• j helburu-puntu bakoitzak bj (j = 1 . . . n) produktu-unitate eskatzen du.
• Produktu-unitate bat i jatorri-puntutik j helburu-puntura garraiatzeak cij
kostua sortzen du.
i jatorri-puntuan prest dagoen unitate-kopurua baino gehiago ez da garra-
iatuko, eta
j helburu-puntura eskatutako unitate-kopurua iritsiko dela ziurtatu be-
har da. Baldintza horiek kontutan izanik, eta produktuen garraioa ahalik eta
kosturik txikienean egiteko
i jatorri-puntutik j helburu-puntura zein xij unitate-
kopuru bidali beharko den erabaki behar da.
ccxix

ccxx
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Garraio-problema programazio linealeko eredu baten bidez honela adierazten
da:
min z =
m
i
=1
n
j
=1
cijxij
ondoko murrizketen menpe
n
j
=1
xij ≤ ai i = 1 . . . m
m
i
=1
xij ≥ bij j = 1 . . . n
xij ≥ 0 ∀i, j
Lehen
m murrizketak jatorri-puntuen eskaintzari buruzkoak dira; eskaintza
hauek ez dira inoiz gaindituak izango. Hurrengo
n murrizketak, era berean, helburu-
puntuen eskariei dagozkie, zerbitzatu egin beharko direlarik. Aldagai guztiek
positibo izan behar dute.
Adibidea:
Demagun herrialde batean badirela ogia ekoizten duten 2 lantegi: A eta B.
Lantegi horietan ekoitzitako ogia 3 okindegitara bidaltzen da, bertan sal dezaten:
O1, O2, O3.
Jatorri-puntuen (lantegien) eskaintzak, helburu-puntuen (okindegien) eskariak
eta garraio-kostuak grafokoak dira:
Garraio-problema horri dagokion eredu lineala honakoa da:
• Erabaki-aldagaiak: xij : i (i = A, B) lantegitik Oj (j = 1, 2, 3) okindegira
garraiatzen den ogiaren unitate-kopurua.
min z = 8xA1 + 6xA2 + 10xA3 + 10xB1 + 4xB2 + 9xB3
ondoko murrizketen menpe
xA1 + xA2 + xA3 ≤ 2000
xB1 + xB2 + xB3 ≤ 2500

7.1. GARRAIO-PROBLEMA
ccxxi
xA1 + xB1 ≥ 1500
xA2 + xB2 ≥ 2000
xA3 + xB3 ≥ 1000
xij ≥ 0 i = A, B j = 1, 2, 3
2
Garraio-problemaren hasierako formulazioari nasaitze-
aldagaiak sartzen badizkiogu,
garraio-problemaren idazkera estandarra lortuko dugu:
min z =
m
i
=1
n
j
=1
cijxij
ondoko murrizketen menpe
n
j
=1
xij = ai i = 1 . . . m
m
i
=1
xij = bj j = 1 . . . n
xij ≥ 0
• Eskaintza totala:
m
i
=1
ai
• Eskari totala:
n
j
=1
bj
Eskari guztiak beteak izan daitezen nahi badugu, zera bete beharko da:
m
i
=1
ai ≥
n
j
=1
bj
• Baldin
m
i
=1
ai <
n
j
=1
bj orduan ezin ditugu eskariak zerbitzatu.
• Baldin
m
i
=1
ai >
n
j
=1
bj orduan eskaintza handiegia da.

ccxxii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
• Baldin
m
i
=1
ai =
n
j
=1
bj orduan problema orekatua dela esaten da.
Lehen esan bezala, garraio-problema simplex metodoa erabiliz ebatz daiteke,
idazkera estandarraren bidez adierazia izan baitaiteke. Hala ere, ez da hori gehien
komeni zaigun bidea, metodo probetxugarriagoak badirelako. Metodo probetx-
ugarriago hauek garraio-
problemak duen egitura bereziari etekin ateratzen diote.
Egitura berezi hori (A matrizearena, hain zuzen ere) ikusteko ondoko adibidea
aztertuko dugu.
Adibidea:
Aurreko adibideko eredua matrize-eran idatziko dugu:
min z = (8 6 10 10 4 9)














xA1
xA2
xA3
xB1
xB2
xB3














ondoko murrizketen menpe











1 1 1 0 0 0
0 0 0 1 1 1
1 0 0 1 0 0
0 1 0 0 1 0
0 0 1 0 0 1

























xA1
xA2
xA3
xB1
xB2
xB3














=











2000
2500
1500
2000
1000











xij ≥ 0
Kasu honetan murrizketak berdintasunez idatz daitezke, eskaintza totala eta eskari
totala berdinak direlako. Nasaitze-aldagaiak ez dira beharrezkoak.

7.1. GARRAIO-PROBLEMA
ccxxiii
Adibide honetan bi jatorri-puntu eta hiru helburu-puntu daude. Matrizeak 2+3
lerro eta 2
· 3 zutabe du. Matrize honen heina, froga daiteke nahi izanez gero,
4 da. Bestalde, ikus daiteke zutabe-bektore guztiek 0-ren desberdinak diren bi
osagai besterik ez dutela.
2
Oro har,
m jatorri-puntuz eta n helburu-puntuz osaturiko garraio-problema
guztien A matrizea berbera da.
m + n lerro eta m · n zutabez osaturik dago. A
matrizearen heina
m + n − 1 da; beste era batera esateko, oinarriek m + n − 1
bektore dituzte.
A matrizearen egitura sinple hau dela eta, informazio garrantzitsua c bektorean
eta eskari eta eskaintzetan datorrela ikusten da.
7.1.1
Garraio-problemarako matrize-idazkera
Aurreko adibidean ikusi dugu garraio-problemako A matrizeek zer nolako egit-
ura duten.
m jatorri eta n helburu dituzten garraio-problema guztiek A matrize
berbera dute. Hori dela eta, problema ebazteko datu esanguratsuak A matrizean
ez datoz, c bektorean eta eskarien eta eskaintzen bektoreetan baizik. Erabiltzen
den informazioa garbiago izateko datu erabilgarriak taula moduan jasotzen dira.
Taula honi garraio-problemarako matrize-idazkera esaten zaio.
Adibidea:
Aurreko adibideko problema honela idatziko genuke matrize eran:
O1
O2
O3
ESKAINT ZA
A
8
6
10
2000
B
10
4
9
2500
ESKARIA 1500 2000 1000
non
O1, O2, O3 helburu-puntuak, okindegiak, diren eta A,B jatorri-puntuak.
2
Posizio bakoitzean zera adierazten da: produktu-unitate bat
i jatorri-puntutik
j helburu-puntura garraiatzeak eragindako cij kostua. Azken zutabekoak jatorri-
puntu bakoitzaren eskaintzak dira eta azken lerrokoak helburu-puntu bakoitzaren
eskariak.

ccxxiv
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
7.1.2
Garraio-ereduaren ebazpidea
Ikusiko dugunez, garraio-
problemen soluzioa osoa da. Hala ere, berau ebazteko ez
dugu programazio osoa erabiliko, problemak duen egitura berezia dela eta garraio-
algoritmoa erabiliz lortuko dugun soluzioa osoa izango baita. Algoritmo hau sim-
plex algoritmoa garraio-problemarako egokituz lortzen da.
Garraio-problemak betetzen dituen zenbait propietate aztertuko ditugu orain
datozen teorema eta deﬁnizioen bidez. Garraioaren ereduaren ebazpidea propi-
etate horietan oinarritzen da.
Teorema 7.1.1 Garraio-problemak soluziorik izan dezan baldintza beharrezkoa
eta nahikoa da eskaintza totala eta eskari totala kopuru berbera izatea.
Frogapena:
Problemaren formulazioan zera daukagu:
i jatorri-puntuak ai eskaintzarekin j
helburu-puntuak
(j = 1 . . . n) zerbitzatuko ditu.
n
j
=1
xij = ai i = 1 . . . m
Jatorri guztien eskaintzak gehituz gero, eskaintza totala:
m
i
=1
n
j
=1
xij =
m
i
=1
ai
(7.1)
Bestalde, helburu-puntuei lotutako murrizketek zera diote:
j helburu-puntura i
jatorri-puntuetatik
(i = 1 . . . m) heltzen da eskatutako bj kopurua.
m
i
=1
xij = bj j = 1 . . . n
Helburu-puntu guztien eskariak gehituz gero, eskari totala:
n
j
=1
m
i
=1
xij =
n
j
=1
bj
(7.2)
(7.1) eta 
(7.2) formuletan berdintzaren ezker aldeak, garraiatzen diren produktu-
unitate totalak, berdinak dira. (7.1) eta 
(7.2) berdintzak beteko dira baldin eta
soilik baldin
m
i
=1
ai =
n
j
=1
bj

7.1. GARRAIO-PROBLEMA
ccxxv
Beraz, eskari totalak eta eskaintza totalak berbera izan beharko du garraio-
problemak
soluziorik izan dezan.
2
Problema matematikoki ebatzi ahal izateko beharrezkoa gertatuko zaigu es-
kaintza totala eta eskari totala kopuru berbera izatea, baina horrek ez du esan nahi
problema errealetan eskaintza eta eskaria kopuru berbera izango direnik beti. Hor-
relakoetan problema orekatu eta gero lortutako soluzioa interpretatu egin behar
da.
Deﬁnizioa 7.1.1 (problema orekatua) Baldin
m
i
=1
ai =
n
j
=1
bj
orduan problema orekatua dela esaten da.
Garraio-problema baten soluzioa lortzeko egin behar den lehen gauza proble-
ma orekatzea da. Bi kasutan egon gintezke:
1. Eskaintza eskaria baino txikiagoa den kasua:
m
i
=1
ai <
n
j
=1
bj
Eskaintza totalak ezin diezaioke eskari totalari aurre egin. Hau matematiko-
ki konpontzeko, gezurrezko jatorri-puntu bat sortzen da. Bere eskaintza eta
garraio-kostuak:
am+1 =
n
j
=1
bj −
m
i
=1
ai
cm+1,j = 0
∀j = 1 . . . n
Gezurrezko jatorri-puntu horrek, eskari totala asetu ahal izateko falta den
eskaintza sortzen du, eta produktu-kopuru hori jatorri-puntu horretatik gain-
ontzeko helburu-puntuetara garraiatzeak ez du inolako kosturik suposatzen,
jatorri-puntu hori gezurrezkoa delako. Beste era batera esateko: jatorri hor-
rek sortutako eskaintza ez da existitzen eta lortutako soluzioan eskaintza
hori jasotzen duten helburu-puntuak ez dira behar bezala zerbitzatuak izan.
Horregatik da zero garraio-kostu hori.
Adibidea:
Har dezagun matrize-idazkeran dagoen garraio-problema hau:

ccxxvi
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1
2
3
ESKAINT ZA
A
2
4
3
10
B
6
1
4
20
ESKARIA
20 20 20
a1 + a2 = 10 + 20 = 30 < b1 + b2 + b3 = 20 + 20 + 20 = 60
Eredua ez da orekatua. Gezurrezko D jatorri-puntua sortuko dugu.
• Eskaintza: a3 = 60 − 30 = 30
• Kostuak: c3j = 0 ∀j = 1, 2, 3
1
2
3
ESKAINT ZA
A
2
4
3
10
B
6
1
4
20
D
0
0
0
30
ESKARIA
20 20 20
Eredua orekatzea lortu dugu.
2
2. Eskaria eskaintza baino txikiagoa den kasua:
m
i
=1
ai >
n
j
=1
bj
Gezurrezko helburu-puntu bat sortuko dugu.
• Eskaria: Gezurrezko helburu-puntu horrek jasoko ditu ekoitzitako pro-
duktu gehigarriak.
bn+1 =
m
i
=1
ai −
n
j
=1
bj
• Kostuak: ci,n+1 = 0 ∀i, helburu-puntua gezurrezkoa delako.

7.1. GARRAIO-PROBLEMA
ccxxvii
Garraio-eredu orekatua izanik, ereduak soluzioa baduela ziurtatzen du on-
dorengo teoremak.
Teorema 7.1.2 Garraio-problemak soluzio bideragarri bat du.
Frogapena:
Demagun idazkera estandarra daukagula, eta
T =
m
i
=1
ai =
n
j
=1
bj
garraiatutako produktu-kopuru totala dela. Zera egiazta daiteke:
 soluzio bidera-
garri bat honako
xij dela.
xij =
aibj
T
∀i, j
xij honek problemaren murrizketak betetzen ditu, eta xij ≥ 0 da.
2
Teorema 7.1.3 Garraio-
problemak oinarriko soluziorik badu. Soluzio horiek gehienez
m + n − 1 aldagai positibo izango dituzte.
7.1.3
Hasierako soluzio baten kalkulua
Lehen soluzio bat lortzeko 2 metodo desberdin aztertuko ditugu. Metodo hauek
problemaren matrize-idazkera erabiltzen dute. Kontutan izan behar da, metodoak
erabiltzen hasi baino lehen problema orekatu egin beharko dela, dagoeneko orekat-
ua ez bada.
Ipar-mendebaldeko ertzaren metodoa.
Ondorengo urratsak burutuz gero garraio-problemarako oinarriko soluzio bidera-
garri bat lortuko dugu.
1. Garraio-problemaren matrizean ipar-mendebaldeko
(i, j) posizioa aukeratu.
Lehen pausoan
i = 1 eta j = 1 izango dira.
2.
(i, j) posizio horri ai eskaintza eta bj eskaria dagozkio. Horien artetik
txikiena hartu.
xij = min {ai, bj}
eta
ai eta bj balioei xij kopurua kenduz, eskaintza eta eskaria eguneratuak
geldituko dira.

ccxxviii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
• Txikiena ai eskaintza denean, eskaintza zero bihurtuko zaigu, hots,
i jatorri-puntuaren eskaintza totala erabilia izan da bj eskaria zerb-
itzatzeko, eta horren ondorioz, jatorri-puntua matrizetik desagertu eta
bj eskaria bj − xij bihurtuko da.
• Aldiz, txikiena bj eskaria bada, eskaria zerbitzatua izango da, zutabea
desagertuko delarik. Hortaz,
i jatorri-puntuaren eskaintza txikiago-
tuko da eta balio eguneratua
ai − xij izango da.
• ai eta bj balioak berdinak izatea ere gerta liteke. Horrelakoetan bai
lerroa eta bai zutabea desagertuko zaizkigu.
Ondorengo
kalkuluetan,
desagertutakoak
ez
ditugu
kontutan
izango.
3. Lerrorik edo zutaberik gelditzen ez bada, prozesua amaitu. Bestela, 1. pau-
sora joan.
Adibidea:
Jarrai dezagun okindegien adibidearekin (ikus taula ccxxiii. orrian). Orekatua
da berau:
2000 + 2500 = 1500 + 2000 + 1000
O1
O2
O3
ESKAINT ZA
A
8
6
10
2000
B
10
4
9
2500
ESKARIA
1500 2000 1000
Ipar-mendebaldeko ertzaren metodoa erabiliz soluzio bat lortzeko tamaina bereko
beste taula bat eraikiko dugu, eta bertan
xij aldagaien balioak jasoko ditugu.
Bi taulak bereizteko, hasierakoari kostu-matrizea deituko diogu eta metodoaren
bidez eraikitakoari ﬂuxu-matrizea.
Has gaitezen metodoarekin:

7.1. GARRAIO-PROBLEMA
ccxxix
O1
O2
O3
ESKAINT ZA
A
x11
2000
B
2500
ESKARIA 1500 2000 1000
• x11 = min {2000, 1500} = 1500
• a1 = 2000 − x11 = 500
• b1 = 1500 − x11 = 0
O2
O3
ESKAINT ZA
A
x12
500
B
2500
ESKARIA 2000 1000
O1 helburu-puntua zerbitzatua gelditu da. Lehen jatorri-puntuaren eskaintza
500-ekoa da orain, gainontzeko 1500-ak erabiliak izan direlako
O1 zerbitzatzeko.
Taula eguneratuan 2 lerro eta 2 zutabe besterik ez dugu. Oraingo ipar-
mendebaldeko
ertza
x12 da.
• x12 = min {500, 2000} = 500
• a1 = 500 − x12 = 0
• b2 = 2000 − 500 = 1500
O2
O3
ESKAINT ZA
B
x22
2500
ESKARIA 1500 1000
A jatorri-puntuak ez du ezer gehiago eskaintzen. Desagertu egin zaigu lerro
hori. 2. helburu-puntuaren eskaria 1500-ekoa da orain. Taula eguneratua lerro
bakar batez eta bi zutabez osaturik dago.

ccxxx
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
• x22 = min {2500, 1500} = 1500
• a2 = 2500 − 1500 = 1000
• b2 = 1500 − 1500 = 0
O3
ESKAINT ZA
B
x23
1000
ESKARIA
1000
Eta, azkenik, B lantegiaren eskaintzak
O3 okindegiaren eskaria zerbitzatuko
du:
• x33 = min {1000, 1000} = 1000
• a2 = 1000 − 1000 = 0
• a3 = 1000 − 1000 = 0
O1
O2
O3
ESKAINT ZA
A
1500
500
2000
B
1500 1000
2500
ESKARIA
1500 2000 1000
Hau da garraio-problema honen soluzio bat. Ogi-unitate horiek garraiatuz
gero, ditugun eskaintzek zerbitzatzen dute eskaria (ﬂuxu-
taula). Ez ahaztu, soluzio
bat besterik ez dela, oraingoz. Soluzio hau kalkulatzeko ez dugu kostu-matrizea
kontutan izan.
Taulako osagai positiboen kopurua:
m + n − 1 = 2 + 3 − 1 = 4
2
Problema orekatua izanik, azken pausoan izango dugun eskaria eta eskaintza
balio berekoak izango dira, eta jatorri-puntua eta helburu-
puntua batera desager-
tuko dira, eskari eta eskaintzarik geldituko ez delarik. Lortuko den soluzioak
gehienez
m + n − 1 osagai positibo izango du, eta soluzioa oinarrikoa dela egiazta
daiteke.

7.1. GARRAIO-PROBLEMA
ccxxxi
Vogel-en metodoa
Metodo honek, esleipenak egiteko unean, kostu-matrizea kontutan izaten du, eta
horregatik lortuko den hasierako soluzioa soluzio optimotik gertuago egongo da
ipar-mendebaldeko ertzaren metodoan lortutako soluzioa baino. Helburua mini-
mizatze erakoa denean erabiltzen da metodo hau. Maximizatze kasurako egokitu
egin beharko litzateke.
Metodoaren urratsak aipatu aurretik, lerrokako eta zutabekako diferentziak
deﬁnituko ditugu.
• LDi = i lerroko bi kosturik txikienen arteko diferentzia balio absolutuan.
• ZDj = j zutabeko bi kosturik txikienen arteko diferentzia balio absolutu-
an.
Vogel-en metodoa erabiltzen hasi aurretik garraio-
taula orekatu behar da. Metodoan
bete beharreko urratsak hauek dira:
1. Lerrokako eta zutabekako diferentziak kalkulatu.
2. Diferentziarik handieneko lerro edo zutabea aukeratu eta lerro edo zutabe
horretan kosturik txikieneko posizioan ahalik eta
xij unitate-kopuru han-
diena (posizioari dagozkion eskaintzaren eta eskariaren arteko minimoa)
kokatu.
3. Esleitu berri dugun
xij kopurua kontutan izanik eskari eta eskaintzak eguner-
atu. Eskari edo eskaintza zero duten lerroak edo zutabeak alde batera utziko
ditugu.
4. Kopuru guztiak esleituak izan badira, prozesua gelditu. Bestela, 1. urrat-
sean jarraitu.
Adibidea:
Har dezagun okindegien adibideko garraio-taula.
LDi eta ZDj kalkulatuko
ditugu:

ccxxxii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
O1
O2
O3
ESKAINTZA
LDi
A
8
6
10
2000
2
B
10
4
9
2500
5
ESKARIA
1500
2000
1000
ZDj
2
2
1
max {LDi, ZDj} = 5 → bigarren lerroari dagokio
Bigarren lerroan kostu txikieneko posizioa aukeratuko dugu:
c22 = 4
x22 = min {2000, 2500} = 2000
O2 helburu-
puntua taulatik desagertzen zaigu, zerbitzatua izan delako. 2. jatorri-
puntuaren eskaintza 500-
ekoa da zerbitzuaren ondoren. Taula eguneratuan 2 jatorri-
puntu eta 2 helburu-puntu ditugu.
O1
O3
ESKAINTZA
LDi
A
8
10
2000
2
B
10
9
500
1
ESKARIA
1500
1000
ZDj
2
1
Diferentziarik handiena 2-koa da, lehen lerroari eta lehen zutabeari dagokiena.
Bietariko edozein aukera dezakegu.
1. lerroa aukeratuko dugu, adibidez. Bertan kosturik txikieneko posizioa
c11 =
8 da.
x11 = min {1500, 2000} = 1500
O1 helburua zerbitzatua izan da. 1. jatorri-puntuaren eskaintza 500-era eguner-
aturik gelditzen da. Aurrerantzean egingo diren kalkuluetatik at gelditzen da 1.
zutabea.

7.1. GARRAIO-PROBLEMA
ccxxxiii
O3
ESKAINT ZA
A
10
500
B
9
500
ESKARIA 1000
Gelditzen zaigun matrizea 2 lerroz eta zutabe batez osaturik dago. Zutabe hori
zerbitzatzeko bi jatorri-puntuen eskaintzak erabiliko ditugu, hau da,
x13 = 500
eta
x23 = 500.
Vogel-en metodoa zein ipar-mendebaldeko ertzaren metodoa erabiltzen ari
garela helburu-puntu bakarra edo jatorri-
puntu bakarra izatera heltzen garenean,
azken esleipena egiten da.
Horrenbestez, lortu dugun hasierako soluzioa ondoko ﬂuxu-taulakoa da:
O1
O2
O3
ESKAINT ZA
A
1500
500
2000
B
2000
500
2500
ESKARIA 1500 2000 1000
Soluzio honek ere, ipar-mendebaldeko ertzaren metodoa erabiliz lortutakoak
bezala, zero baino handiagoak diren
m + n − 1 = 2 + 3 − 1 = 4 osagai ditu, eta
egiazta daiteke oinarriko soluzioa dela. Ez-endekatua da.
Egiazta daiteke, baita, azken soluzio hau ipar-mendebaldeko ertzaren metodoa
erabiliz lortutakoa baino hobea dela.
• Vogel-en metodoareen bidez lortutako soluzioak helburu-funtzioari ematen
dion balioa:
8 · 1.500 + 10 · 500 + 4 · 2.000 + 9 · 500 = 29.500
• Ipar-mendebaldeko ertzaren metodoaren bidez lortutako soluzioak ondoko
balioa ematen dio helburu-funtzioari:
8 · 1.500 + 6 · 500 + 4 · 1.500 + 9 · 1.000 = 30.000
Helburua minimizatzea denez, Vogel-en metodoaren bidez lortutako soluzioa hobea
da.
2

ccxxxiv
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
7.1.4
Oinarriko soluzio bideragarri baten hobekuntza
Badakigu lehen soluzio bat nola lortu, ipar-mendebaldeko ertzaren metodoa edo
Vogel-en metodoa erabiliz.
Oinarriko soluzio bideragarri bat harturik, oraintxe garatuko dugun metodoak
lehen soluzio hori hobetuko du. Metodoaren izena MODI da eta problema pri-
malari dagokion duala formulatzean datza.
Garraio-problemari dagokion eredu duala hauxe da:
max G =
m
i
=1
aiui +
n
j
=1
bjvj
ondoko murrizketen menpe
ui + vj ≤ cij ∀i, j
u
, v : ez-murriztuak
u
= (u1 . . . um) eta v = (v1 . . . vn) izanik.

7.1. GARRAIO-PROBLEMA
ccxxxv
Adibidea:
Kalkula dezagun ccxx. orrialdeko adibideko problemari dagokion eredu du-
ala. Horretarako
u1, u2, v1, v2, v3 aldagai dualak erabiliko ditugu. Hau da lortzen
den eredua:
max G = 2000u1 + 2500u2 + 1500v1 + 2000v2 + 1000v3
ondoko murrizketen menpe
u1 + v1 ≤ 8
u1 + v2 ≤ 6
u1 + v3 ≤ 10
u2 + v1 ≤ 10
u2 + v2 ≤ 4
u2 + v3 ≤ 9
ui, vj : ez-murriztuak
2
Oinarriratuko den aldagaia ﬁnkatu
Garraio-problemaren helburua minimizatzea denean:
• Baldin zij − cij ≤ 0 ∀i, j orduan daukagun soluzioa optimoa da.
• Baldin ∃ zij − cij > 0 orduan oinarriratuko den bektorea zij − cij positiboen
artean handiena duen aij bektorea izango da.
zij − cij = c
T
B B
−
1a
ij − cij
c
T
B B
−
1 = [u1 . . . um, v1 . . . vn]
Hortaz,
zij − cij = [u1 . . . um, v1 . . . vn]aij − cij
Kontutan izan behar da A matrizearen egitura berezia dela, eta horrexegatik aij
bektorearen bi osagaik dutela 1 balioa:
i posizioko osagaiak eta m+j posiziokoak.
Gainontzeko osagaiak zero dira. Honen ondorioz,
zij − cij = ui + vj − cij

ccxxxvi
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Beraz,
ui eta vj kalkulatzeko 0-ren berdinak diren dualaren murrizketak planteatzen
dira. Murrizketa horiek dira oinarriko bektoreei dagozkienak.
zij − cij = 0 ∀aij ∈ B
u1 . . . um, v1 . . . vn balioak kalkulatzeko, n + m balio alegia,
ui + vj − cij = 0
moduko
m + n − 1 ekuazio dago. Sistema honetan 1 mailako askatasun-gradua
dago: aldagai bati balio bat emanez gero gainontzeko aldagaien balioak kalkula
daitezke. Aldagai dualen balioak kalkulatu ondoren
zij − cij = ui + vj − cij balio
guztiak kalkula daitezke. Horien arabera soluzioa optimoa den edo hobeagotzerik
ba al den jakingo dugu.
Adibidea:
Har ditzagun gure adibideari dagokion kostu-taula eta ipar-
mendebaldeko ertzaren
metodoa erabiliz lortutako soluzioa. Hauek dira dauzkagun kostu-taula eta ﬂuxu-
taula:
Kostu-taula:
O1
O2
O3
ESKAINT ZA
A
8
6
10
2000
B
10
4
9
2500
ESKARIA
1500 2000 1000

7.1. GARRAIO-PROBLEMA
ccxxxvii
Fluxu-taula:
O1
O2
O3
ESKAINT ZA
A
1500
500
2000
B
1500 1000
2500
ESKARIA 1500 2000 1000
Oinarria:
B = {a11, a12, a22, a23}
{u1, u2, v1, v2, v3} balioak kalkulatzeko ekuazio sistema hau ebatzi beharko
dugu:
u1 + v1 = 8
u1 + v2 = 6
u2 + v2 = 4
u2 + v3 = 9
u1 aldagaiari 0 balioa emanez gero, v1 = 8, v2 = 6, u2 = −2 eta v3 = 11
soluzioa lortzen da.
zij − cij = ui + vj − cij
∀aij ∈ B balioak kalkulatzeko oinarriko ez diren
a13 eta a21 bektoreak hartuko ditugu.
• z13 − c13 = u1 + v3 − c13 = 0 + 11 − 10 = 1 > 0
• z21 − c21 = u2 + v1 − c21 = −2 + 8 − 10 = −4 < 0
∃ z13 − c13 = 1 > 0 ⇒ a13 oinarriratuko da
a13 oinarriratuz soluzioa hobetzea lortuko dugu.
2

ccxxxviii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Oinarritik kanporatua izango den bektorea
Soluzioa hobe dadin oinarria utzi beharko duen bektorea zein den zehazteko on-
dorengoak izango ditugu kontutan.
1.
m jatorri-puntuz eta n helburu-puntuz osaturiko garraio-problema orekatu
baten oinarriko
m + n − 1 aldagai multzoan ez dago ziklorik. Adibidez,
aurreko adibidean a11, a12, a22, a23 oinarriko bektoreek ez dute ziklorik os-
atzen.
2. Oinarriko aldagaiak erabiliz eta helburuaren balioa hobetzeko oinarriratuko
den aldagaia erabiliz ziklo bakar bat osa daiteke. Oinarria utziko duen alda-
gaia zikloak ematen digu. Zikloa osatzen duten bektoreen arteko bat izango
da oinarria utziko duena. Adibidez, aurreko adibidean oinarrian ez dagoen
a13 bektorea ondoko konbinazio linealaren bidez adieraz daiteke:
a13 = a12 − a22 + a23
Taulan begiratuz gero bektore horiek ziklo bat osatzen dutela ikusten da.
Behin oinarrira sartuko den aldagaia eta oinarritik irtengo dena zehaztu di-
tugunean, ﬂuxu-taulan aldaketa egingo dugu. Honen ondorioz, eskariak edo es-
kaintzak desorekatu egingo zaizkigu. Orekatzeko beharrezko aldaketak burutu
beharko ditugu.
Adibidea:
Aurreko adibidearekin jarrai dezagun. Ipar-mendebaldeko ertzaren metodoa
erabiliz lortu dugun soluzioa hau da:
O1
O2
O3
ESKAINT ZA
A
1500
500
2000
B
1500 1000
2500
ESKARIA
1500 2000 1000
Oinarriratuko den bektorea a13 da, eta a13, a12, a22, a23 bektoreek zikloa os-
atzen dute. a13 = a12 − a22 + a23 idaztea posible da.

7.1. GARRAIO-PROBLEMA
ccxxxix
Zikloaren arabera, a22 bektorea ez da oinarritik irtengo, koeﬁziente negatiboa
duelako. Zein irtengo da? a12 edo a23?
x12 = 500
x23 = 1000



txikiena:
500
→
x12 irtengo da
Gauzak honela utziz gero, taula desorekatua geldituko zaigu.
O2-ren eskaria
orekatzeko
x22 = 1500 + 500 = 2000 jarri beharko dugu eta orain B eskaintza
orekatzeko
x23 = 1000 − 500 = 500. Eskari eta eskaintza guztiak betetzen dira.
O1
O2
O3
ESKAINT ZA
A
1500
500
2000
B
2000
500
2500
ESKARIA 1500 2000 1000
2
Zikloaren osaeran parte hartzen ez duten aldagaien gain ez du oinarriaren al-
daketak inolako eraginik izango.
Existitzen den zikloa bakarra da, sartzen den bektorearen konbinazio lineala
baita. Soluzio hobea kalkulatzeko egiten dena zikloaren oreka mantentzea da.
7.1.5
Garraio-problemarako algoritmoa
1. Problema orekatu.
2. Soluzio bideragarri bat kalkulatu.
3. Une honetan daukagun oinarriari dagozkion
u1 . . . um, v1 . . . vn kalkulatu.
4. Baldin
∀aij ∈ B zij −cij = ui +vj −cij ≤ 0 bada, une honetan daukagun
soluzioa optimoa da. Bestela,
zij − cij = ui + vj − cij positiboen artetik
balio handieneko aldagaia oinarriratuko da.
5. Oinarrira sartu berri den aldagaiak eta oinarriko zenbait aldagaik osatutako
zikloa zein den zehaztu, eta soluzio berria kalkulatu. 3. urratsean jarraitu.

ccxl
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Adibidea:
Garraio-problema bat ebatziko dugu, dagozkion kostu-taula, eskari eta es-
kaintzak ondokoak izanik.
1
2
3
4
ESKAINTZAK
1
5
9
-
4
28
2
6
10
3
-
32
3
4
2
5
7
60
ESKARIAK
48
29
40
33
1.
3
i
=1
ai = 120 <
4
j
=1
bj = 150
Problema ez da orekatua. Gezurrezko iturburu-puntu bat gehituko dugu,
bere eskaintza 30 eta garraio-kostuak 0 izango direlarik.
1
2
3
4
ESKAINTZAK
1
5
9
M
4
28
2
6
10
3
M
32
3
4
2
5
7
60
4
0
0
0
0
30
ESKARIAK
48
29
40
33
(1,3) eta (2,4) posizioetan M garraio-kostua jarri dugu, iturburu-puntu eta
helburu-puntu horien arteko garraioa posible ez dela adierazteko.
2. Vogel-en metodoa erabiliko dugu hasierako oinarriko soluzio bideragarri
bat kalkulatzeko.

7.1. GARRAIO-PROBLEMA
ccxli
1
2
3
4
ESKAINTZAK
LDi
1
5
9
M
4
28
1
2
6
10
3
M
32
3
3
4
2
5
7
60
2
4
0
0
0
0
30
0
ESKARIAK
48
29
40
33
ZDi
4
2
3
4
Diferentziarik handiena 1. zutabean eta 4. zutabean aurkitzen dira. 1.
zutabea aukeratzen dugu, eta bertan
c41 = 0 balioa. x41 balioa esleituko
dugu.
x41 = min {30, 48} = 30
4. iturburu-puntua zerbitzatua izan da. 1. helburu-puntuaren eskaria 18-koa
da hemendik aurrera.
1
2
3
4
ESKAINTZAK
LDi
1
5
9
M
4
28
1
2
6
10
3
M
32
3
3
4
2
5
7
60
2
ESKARIAK
18
29
40
33
ZDi
1
7
2
3
Diferentziarik handiena 7-koa da, eta 2. zutabean
c32 = 2 da kostu minimoa.
x32 = min {29, 60} = 29
Bigarren zutabea zerbitzatua izan da, eta 3. iturburu-puntuaren eskaintza
60 − 29 = 31-koa izango da. Kostu-taula honakoa da.

ccxlii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1
3
4
ESKAINTZAK
LDi
1
5
M
4
28
1
2
6
3
M
32
3
3
4
5
7
31
1
ESKARIAK
18
40
33
ZDj
1
2
3
x23 esleituko dugu.
x23 = min {32, 40} = 32
2. iturburua zerbitzatua gelditzen da eta 3. helburuaren eskaria
40 − 32 = 8
da. Datozen kalkuluetarako ez da 2. lerroa erabiliko. Hortaz, ondorengo
kostu-taula daukagu.
1
3
4
ESKAINTZAK
LDi
1
5
M
4
28
1
3
4
5
7
31
1
ESKARIAK
18
8
33
ZDj
1
M-5
3
Hirugarren zutabean esleipena egingo dugu.
x33 = min {8, 31} = 8
Helburu-puntua zerbitzatua izan da, eta 3. iturburu-puntuaren eskaintza
31 − 8 = 23.
1
4
ESKAINTZAK
LDi
1
5
4
28
1
3
4
7
23
3
ESKARIAK
18
33
ZDj
1
3

7.1. GARRAIO-PROBLEMA
ccxliii
x31 = min {18, 23} = 18
Eskariak eta eskaintzak eguneratuz zera daukagu.
4
ESKAINTZAK
1
4
28
3
7
5
ESKARIAK
33
Esleipenak egiteko zutabe bat besterik ez daukagu oraingo honetan.
x14 = 28,
x34 = 5
Burututako esleipen guztiak ﬂuxu-taulan adieraziko ditugu.
3.
ui i = 1, 2, 3, 4 eta vj j = 1, 2, 3, 4 balioen kalkulua.
u1 + v4 = 4
u2 + v3 = 3
u3 + v1 = 4
u3 + v2 = 2
u3 + v3 = 5
u3 + v4 = 7
u4 + v1 = 0
Baldin
u3 = 0 bada, honako soluzioa lortzen da.
u3 = 0, v1 = 4, v2 = 2, v3 = 5
v4 = 7, u4 = −4, u2 = −2, u1 = −3
4. Datorren taulan, oinarriko kostuak eta oinarriko ez diren bektoreei dagozkien
zij − cij balioak biltzen dira.

ccxliv
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1
2
3
4
ui
1
-4
-10
2-M
4
-3
2
-4
-10
3
5-M
-2
3
4
2
5
7
0
4
0
-2
1
3
-4
vj
4
2
5
7
x44 = 5 oinarrian sartzen da, eta aurreko taulako zikloa aztertuz, x34 =
5 − 5 taulatik irtengo dela ikusten da.

7.1. GARRAIO-PROBLEMA
ccxlv
5. Hurrengo soluzioa hau da.
Algoritmoaren 3. 4. eta 5. pausoak errepikatu egingo ditugu, optimaltasun
baldintzak beteko diren arte.
3. Ekuazioak:
u1 + v4 = 4
u2 + v3 = 3
u3 + v1 = 4
u3 + v2 = 2
u3 + v3 = 5
u4 + v1 = 0
u4 + v4 = 0
Baldin
u3 = 0 orduan,
v1 = 4, v2 = 2, v3 = 5
u4 = −4, v4 = 4, u1 = −4, u2 = −2

ccxlvi
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
4.
zij − cij balioen kalkulua.
1
2
3
4
ui
1
-1
-7
5-M
4
0
2
-4
-10
3
2-M
-2
3
4
2
5
-3
0
4
0
-2
1
0
-4
vj
4
2
5
4
5.
x43 = 8 oinarriratuko da eta x33 = 8 − 8 da. Soluzio berria honakoa da
1
2
3
4
ESKAINTZAK
1
28
2
32
3
31
29
4
17
8
5
ESKARIAK
3. Ekuazioak askatuz
u1 + v4 = 4
u2 + v3 = 3
u3 + v1 = 4
u3 + v2 = 2
u4 + v1 = 0
u4 + v3 = 0
u4 + v4 = 0
u4 = 0, v1 = v3 = v4 = 0
u3 = 4, v2 = −2, u1 = 4, u2 = 3

7.1. GARRAIO-PROBLEMA
ccxlvii
4. .
1
2
3
4
ui
1
-1
-7
4-M
4
4
2
-3
-9
3
3-M
3
3
4
2
-1
-3
4
4
0
-2
0
0
0
vj
0
-2
0
0
Soluzioa optimoa da. Esleipenak honakoak dira.
x14 = 28, x23 = 32, x31 = 31, x32 = 29
1. helburu-puntuaren eskaria, 17-koa, ez da zerbitzatua izan (
x41 gezurrezko
aldagaia da). Era berean, 3. helburu-puntuaren 8 unitate eta 4. helburu-
puntuaren 5 unitate zerbitzatu gabe gelditu dira.
z
∗ = 4 · 28 + 3 · 32 + 4 · 31 + 2 · 29 = 390
2
7.1.6
Soluzio endekatua
m jatorri-puntu eta n helburu-puntu duen garraio-
problema izanik, oinarriko soluzio
bideragarri bat osatzen duten aldagaien artean hertsiki positiboak direnak
m+n−1
baino gutxiago badira, orduan soluzioa endekatua da. Endakatzea ondorengo ka-
suetan gerta daiteke:
• Ipar-mendebaldeko ertzaren metodoaren bidez edo Vogel-en metodoaren
bidez hasierako soluzio bideragarri bat eraikitzean, azkena ez den pausoren
batetan aldi berean jatorri-puntu bat eta helburu-puntu bat desagertzen dire-
nean.
• Hasierakoa ez den soluzio batean egonik, oinarritik irtengo den bektorea
aukeratzeko unean bi bektore edo gehiagok aukeratuak izateko baldintza
betetzen dutenean, beren artean zorizko aukeraketa egiten dugunean.

ccxlviii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Horrelako kasuetan, zero balioa hartzen duten aldagaien artean oinarrikoak dire-
nak eta ez direnak bereiztu egin beharko ditugu.
Endakatzeak bi arazo sortzen ditu:
1. Ziklatzearen arazoa. Simplex metodoarekin ere arazo berbera gertatzen
zitzaigun.
2. Garraioaren algoritmoa erabili ahal izateko, soluzioak ez-endakatua izan
beharko du, MODI metodoaren ekuazio sistema bete dadin.
Adibidea:
Har dezagun ondoko garraio-problema orekatua:
1
2
3
4
ESKAINT ZA
1
23 22 17 24
40
2
18 23 16 22
60
3
21 18 21 23
70
ESKARIA
50 50 30 40
Ipar-mendebaldeko ertzaren metodoa erabiliz hasierako soluzio bat kalkulatuko
dugu:
1
2
3
4
ESKAINT ZA
1
40
40
2
10
50
60
50
3
30
40
70
40
ESKARIA
50
50
30
40
10
Aldagai hertsiki positiboen kopurua:
5 < 4 + 3 − 1 = 6. Beraz, soluzioa
endekatua da.

7.1. GARRAIO-PROBLEMA
ccxlix
Endekatu bihurtu zaigu bigarren lerroa eta hirugarren zutabea batera desagertu
zaizkigunean. Soluzioa ez-endekatu bihurtzeko
x23 aldagaia oinarrikotzat hartuko
dugu eta hertsiki positiboa den
ǫ balioa emango diogu.
Azter dezagun ea soluzio hori optimoa den. Horretarako oinarriko
∀i, j-rako
ui + vj = cij sistema ebatziko dugu.
• Oinarria: B = {a11, a21, a22, a23, a33, a34}
• Ekuazio sistema:
u1 + v1 = 23
u2 + v1 = 18
u2 + v2 = 23
u2 + v3 = 16
u3 + v3 = 21
u3 + v4 = 23
• u1 = 0 eginez lortzen den soluzioa:
v1 = 23, u2 = −5, v2 = 28, v3 = 21, u3 = 0, v4 = 23
• Oinarriko ez diren aldagaientzako:
*
z12 − c12 = u1 + v2 − c12 = 0 + 28 − 22 = 6
*
z13 − c13 = u1 + v3 − c13 = 0 + 21 − 17 = 4
*
z14 − c14 = u1 + v4 − c14 = 0 + 23 − 24 = −1
*
z24 − c24 = u2 + v4 − c24 = −5 + 23 − 22 = −4
*
z31 − c31 = u3 + v1 − c31 = 0 + 23 − 21 = 2
*
z32 − c32 = u3 + v2 − c32 = 0 + 28 − 18 = 10
1
2
3
4
ui
1
23
6
4
−1
0
2
18
23
16
−4
−5
3
2
10
21
23
0
vj
23
28
21
23

ccl
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
z32 − c32 = max {zij − cij/zij − cij > 0}
a32 oinarrira sartuko da. Fluxu-matrizea eta a32 = a22 − a23 + a33 zikloa
aztertuz, oinarritik a22 edo a33 atera daitekeela ikusten dugu. xij txikienari lotuta
dagoena
a33 da. Soluzioa:
1
2
3
4
ESKAINT ZA
1
40
40
2
10 20 30
60
3
30
40
70
ESKARIA
50 50 30 40
Soluzio hau ez da endekatua; algoritmoa erabiltzen jarrai dezakegu optimoa
lortu arte.
2
7.2
Esleipen-problema
Garraio-problemaren kasu partikularra da esleipen-problema. Problema honetan
lortu nahi dena zera da: iturburu-puntuen (izaki, eginkizun etab.) eta helburu-
puntuen (eginkizun, makina etab.) arteko esleipena, esleipen honek kostu-
funtzioa
optimizatuko duelarik. Esleipen honek izaki bakoitza eginkizun bakar bati eta
eginkizun bakoitza izaki bakar bati esleituko ditu.
i izakia eta j eginkizuna elkarri
esleitzeak
cij kostua eragiten du.
Erabaki-aldagaiak honela deﬁnituak daude:
xij =



1 baldin i izakia eta j eginkizuna elkarlotu badira
0 bestelakoetan
Formalki esateko,
n izaki eta n eginkizun izanik, eta cij i izakia j eginkizu-
nari esleitzeko kostua bada, kostu totala minimo egingo duen esleipena aurkitzean
datza esleipen-problema.

7.2. ESLEIPEN-PROBLEMA
ccli
Ondoko eredu lineala plantea daiteke:
min z =
n
i
=1
n
j
=1
cijxij
ondoko murrizketen menpe
n
j
=1
xij = 1 i = 1 . . . n
n
i
=1
xij = 1 j = 1 . . . n
xij = 0, 1 ∀i, j
cij balioak i izakia j eginkizunari lotzeak sortzen duen eraginkortasuna adier-
aziko balu, orduan helburua maximizatzea litzateke, eta minimizatze-problemara
aldatu beharko genuke algoritmoa erabili ahal izateko.
i eginkizun bakoitza izaki bakar bati elkartzen zaiola diote lehen n murrizketek;
hurrengo
n murrizketek aldiz, izaki bakoitzari eginkizun bakar bat egokitzen zaio-
la.
xij aldagaiak bitarrak dira. Esleipen-problema garraio-problema ebazten den
moduan ebatz daiteke. Horretarako,
xij aldagaiak positibo izatera pasako di-
ra, eta eskari eta eskaintzak 1 izango dira. Esleipen-problemaren eta garraio-
problemaren arteko erlazioa ikusteko interesgarria da hau egitea, baina ez beste
ezertarako, esleipen-
problema ebazteko metodo eraginkorragoak badaude eta. Meto-
do hauetan, garraio-probleman gertatu zaigun antzera, kostu-matrizea izango da
informazio gehien emango diguna.
Oro har, problema praktikoetan ez da beti jatorri-puntuen kopurua eta helburu-
puntuen kopurua berbera izango. Kopurua bera ez denetan problema orekatu egin
beharko da horretarako problemari gezurrezko jatorri-puntuak edo gezurrezko
helburu-puntuak gehituz.
Honako adibidearen bidez esleipen-problema erreal bat nolakoa izan daite-
keen ikusiko dugu.
Adibidea:
Demagun herri batean lau eraikin jaso nahi direla: A, B, D eta E. Lehiaketa
publikora atera du udaletxeak, eta 4 izan dira lehiaketara aurkeztu diren kontratis-
tak:
 1, 2, 3 eta 4. Kontratista bakoitzak eraikin bakoitza altxatzeak ekarriko duen
kostuaren aurreproiektua (milioi pezetatan) aurkeztu du. Datuak taulakoak dira:

cclii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1
2
3
4
A
58
58
60
54
B
66
70
70
78
D 106 104 100 95
E
52
54
64
54
Demagun kontratista bakoitzari eraikin bakar bat eraikitzea eskatuko zaiola,
eta eraikin guztiak eraiki behar direla. Zein da kontratista eta eraikin arteko es-
leipen optimoa? Udaletxeari merkeen aterako zaiona, alegia?
2

7.2. ESLEIPEN-PROBLEMA
ccliii
Esleipen-problema ebatziko duen algoritmoa datozen bi teorematan oinarritzen
da:
Teorema 7.2.1 Esleipen problema baten helburu-funtzioa
z =
n
j
=1
n
i
=1
cijxij
izanik, bere
{xij} aldagaiek hartutako balioak soluzio optimo badira, orduan
{xij} soluzio optimo da baita helburu-funtzio horren ordez
z
′ =
n
j
=1
n
i
=1
c
′
ij xij
duen problemarako.
c′
ij = cij − ui − vj da eta ui eta vj konstanteak dira.
Frogapena:
z
′ =
n
j
=1
n
i
=1
c
′
ij xij =
n
j
=1
n
i
=1
(cij − ui − vj)xij =
=
n
j
=1
n
i
=1
cijxij −
n
j
=1
n
i
=1
uixij −
n
j
=1
n
i
=1
vjxij =
= z −
n
i
=1
ui
n
j
=1
xij −
n
j
=1
vj
n
i
=1
xij =
= z −
n
i
=1
ui −
n
j
=1
vj = z − k
z eta z′ helburu-funtzioen arteko aldea konstante bat da. Horregatik lortzen
dute optimoa
{xij} erabaki-aldagaien balioen multzo berberean.
2
Teorema horri esker kostu-matrizea eraldatu ahal izango dugu lerroka edota
zutabeka eragiketak eginez. Horrela, adibidez, lerro edota zutabe bati konstante
bat kendu ahal izango diogu.

ccliv
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Teorema 7.2.2 Baldin
∀i, j cij ≥ 0 bada eta xij aldagaiek hartutako balioen
multzoak
z =
n
j
=1
n
i
=1
cijxij = 0
betetzen badu, orduan
{xij} daukagun problemarako soluzio optimoa da.
Frogapena:
cij ≥ 0 dela dakigu ∀i, j-rako, eta baita xij = 0, 1 dela ere. z-ren minimo ab-
solutua 0 da. Horregatik,
{xij} multzo batek z = 0 egiten badu, minimo absolutua
lortuko da eta hori izango da problemaren soluzio optimoa.
2
Esan dugun bezala, aurreko bi teorematan oinarritzen da esleipen-problema
baten soluzioa lortzeko erabiltzen den metodoa. Metodo horren urratsak jar-
raitzean kostu-
matrizea eraldatuko dugu, lehen teoremari esker erabil ditzakegun
eragiketak eginez, zeroak lortzeko. Gero, esleipen guztiak egin ondoren, helburu-
funtzioaren balioa zero bada, minimo absolutua lortu dugu eta soluzioa optimo
izango da.
7.2.1
Esleipen-metodoa: Metodo hungariarra.
Ikusi bezala, esleipenaren matrizeko lerro edo zutabe bateko osagai guztiei kon-
stante bat gehitzen edo kentzen badiegu, horrek ez du esleipen optimoaren gain in-
olako eraginik izango. Metodo hungariarra gertakizun honetan oinarrituz, kostu-
matrizea eraldatu eta bertan ahalik eta zero-
kopuru handiena lortzen saiatuko da.
Hauek dira jarraitu beharreko urratsak:
1. Problema orekatu.
2. Kostu-matrizeko elementu guztiak ez-
negatibo bihurtu eta problema minimizatze-
idazkerara moldatu.
3. Lerro bakoitzetik kosturik txikieneko
ui elementua hartu eta lerroko ele-
mentu guztiei balio hori kendu. Matrizeko elementuak aldatuak izan dira
eta orain
c′
ij balioak ditugu.
ui =
min
j
cij

7.2. ESLEIPEN-PROBLEMA
cclv
4. Aurreko urratsean lerroetarako egindako gauza bera egin zutabeetarako.
vj =
min
i
c
′
ij
orain
c′′
ij elementuak lortu ditugu.
5. Zeroak esleitu. Zero-
kopuru txikieneko lerroa aukeratu, zero horietako edozein
esleitu eta lerro edo zutabe berberean dauden gainontzeko zeroak zirribor-
rotu. Gainontzeko lerroekin ere gauza bera egin, zirriborrotugabeko zero-
kopuru txikiena duen lerrotik jarraituz;
• Halakoren batean, lerro guztietan esleitutako zero bat baldin badauk-
agu, orduan daukagun soluzioa optimoa da. Amaitu.
• Oraindik ez badugu lerro bakoitzeko zero bana esleitzea lortu, 5. ur-
ratsean jarraituko dugu.
6. Ahalik eta lerro edota zutabe-kopuru txikiena aukeratuko dugu, beti ere, es-
leitutako
zero
guztiak
lerro
edota
zutabe
horietan
egongo direlarik. Aukeraketa honela burutuko dugu:
(a) Esleitutako zerorik ez daukan lerro oro markatu.
(b) Markatutako lerroetan zirriborrotutako zeroa duten zutabeak markatu.
(c) Markatutako zutabeetan zero bat esleituta duten lerroak markatu.
(b) eta (c) urratsak errepikatu ez lerro eta ez zutabe gehiago markatu ahal
izango ez dugun arte.
Markatuak izan ez diren lerroetan eta markatutako zutabeetan daude zero
guztiak. Lerro eta zutabe horiek estali.
7. Zero gehiago sortuko dugu. Horretarako, estaligabeko elementuen artetik
txikiena aukeratuko dugu. Estaligabeko elementuei kopuru hori kendu, eta
kopuru hori gehitu estalitako lerro eta zutabe arteko ebakidura puntu di-
renei. 4. urratsera joan.
Esleipen-problema ebazteko erabiltzen den metodo hungariar hau Konig-en
teoreman oinarritzen da. Teorema honen arabera, lerro eta zutabeetan indepen-
denteki eslei daitekeen zero-kopurua, taulako zero guztiak estaltzeko behar den
lerro edota zutabe-kopuru minimoa da.

cclvi
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Adibidea:
Har dezagun kontratisten eta eraikinen arteko esleipen-problema. Metodo
hungariarra erabiliko dugu soluzio optimoa lortzeko. Kostu-taula honakoa dela
esan dugu:
1
2
3
4
A
58
58
60
54
B
66
70
70
78
D 106 104 100 95
E
52
54
64
54
1. Problema orekatua da.
2. Matrizeko osagai guztiak positiboak dira, eta helburua minimizatzea da.
3. Lerro bakoitzeko elementuei lerroko elementurik txikiena kenduko diegu.
Lehen lerroko elementurik txikiena 54 da, bigarrenekoa 66, hirugarrenekoa
95 eta laugarrenekoa 52. Matrize hau lortuko dugu:
1
2
3
4
A
4
4
6
0
B
0
4
4
12
D 11 9
5
0
E
0
2 12
2
4. Eragiketa horiek egin ondoren lortutako taulan zutabe bakoitzean txikiena
kenduz gero, ondoko taula lortzen da:
1
2 3
4
A
4
2 2
0
B
0
2 0 12
D 11 7 1
0
E
0
0 8
2

7.2. ESLEIPEN-PROBLEMA
cclvii
5. Zeroak esleitu.
• Zero-kopuru txikieneko lerroak lehenengoa eta hirugarrena dira. Lehenen-
gotik hasiko gara. Bertan zero bakarra dago. (A,4) zeroa esleitua
gelditzen da, beraz, eta A lerroko eta 4 zutabeko gainontzeko zeroak
zirriborrotuko ditugu. A lerroan ez dago beste zerorik, bai ordea 4
zutabean.
1
2 3
4
A
4
2 2
0
B
0
2 0 12
D
11 7 1
0
E
0
0 8
2
• Esleitugabeko zeroak dituzten lerroak bigarrena eta laugarrena dira.
Hirugarren lerroan ez dago esleitua izan daitekeen zerorik. Bi ler-
ro horietariko edozein aukera dezakegu, bigarrena adibidez. Bigarren
lerroan bi zero ditugu; edozein aukera daiteke. Har dezagun (B,1) ze-
roa. Hau esleiturik gelditzen da. (B,3) eta (E,1) zeroak zirriborrotu
egingo ditugu, bata B lerroan egoteagatik eta 1 zutabean egoteagatik
bestea.
1
2 3
4
A
4
2 2
0
B
0
2
0 12
D 11 7 1
0
E
0 0 8
2
• Zirriborrotugabeko zero bakarra dago taulan, laugarren lerroan hain
zuzen ere: (E,2). Esleitua gelditzen da, ba.

cclviii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1
2
3
4
A
4
2
2
0
B
0
2
0 12
D 11
7
1
0
E
0
0
8
2
Taulako lerro bakoitzeko ez dago esleitutako zero bat. Beraz, hurrengo ur-
ratsean jarraitu beharko dugu.
6. Zero guztiak estaltzeko beharrezko lerro edota zutabe-kopuru minimoa auk-
eratuko dugu.
(a) D lerroa markatuko dugu
x baten bidez, bertan ez daukagulako esleitu-
tako zerorik.
(b) Markatu berri dugun lerroan esleitua izan ez den zero bat dago, 4.
zutabean hain zuzen ere. Markatu egingo dugu zutabe hau.
(c) Aurreko urratsean zutabe bat, laugarrena, markatu dugu. Zutabe hor-
retan badago esleitutako zero bat, A lerrokoa alegia. Lerro hau markatu
egingo dugu.
(b) Markatutako A lerroan ez dago esleitugabeko zerorik. Beraz, prozesua
amaitu da.
Markatuak izan ez diren lerroek eta markatuak izan diren zutabeek zero
guztiak estaltzen dituzte.
7. Zero berriak sortu. Har ditzagun estaliak izan ez diren taulako elementuak:
4, 2, 2, 11, 7, 1. Horietatik txikiena 1 elementua da. Estaliak ez dau-
den elementuei 1 kenduko diegu eta bi aldiz estaliak izan direnei 1 gehitu.
Batuketak eta kenketak egin ondoren hau lortzen da:
1
2 3
4
A
3
1 1
0
B
0
2 0 13
D 10 6 0
0
E
0
0 8
3

7.2. ESLEIPEN-PROBLEMA
cclix
8. Zeroak esleitu:
1
2
3
4
A
3
1
1
0
B
0
2
0
13
D
10
6
0
0
E
0
0
8
3
Lau zero izan dira esleituak. Beraz, soluzio optimoa lortu dugu.
• (A → 4) : 4. kontratistak A eraikina altxako du.
• (B → 1) : 1. kontratistak B eraikina altxako du.
• (D → 3) : 3. kontratistak D eraikina altxako du.
• (E → 2) : 2. kontratistak E eraikina altxako du.
Kostua=
cA4 + cB1 + cD3 + cE2 = 54 + 66 + 100 + 54 = 274
2
7.2.2
Maximizatze-problemak
Helburua minimizatzea denetan bakarrik erabil daiteke metodo hungariarra. Prob-
lemaren helburua maximizatzea balitz, aldatu egin beharko genuke metodoa er-
abiltzen hasi baino lehen. Hori bai!
cij koeﬁzienteek positibo izan beharko dute,
esleipen-metodoaren baldintza beharrezkoa da eta.
Adibidea:
Lantegi batek hiru langile behar ditu. Iragarki bat bidali du egunkarira eta 5
lagun azaldu zaizkio. Bost langile horietatik hiru aukeratu beharko ditu zuzendari-
ak. Horretarako hautapen-
froga bat prestatu du, lan bakoitzari buruzko galderekin,
eta langile bakoitzak 0-tik 10-
era bitarteko puntuaketa lortu du lan bakoitzerako.
Puntuaketa taulakoa da.

cclx
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1 2
3
4 5
A 2 4 10 3 6
B 7 7
5
6 4
D 8 6
7
− 9
Laugarren langilea ez da D lana egiteko gai.
Guzti honekin, lan eta lagun arteko esleipena egin behar dugu, lan bakoitza
egiteko aukeratutako pertsonen gaitasuna maximizatuko delarik.
Kasu honetan helburua gaitasunak maximizatzea da. Algoritmoa erabiltzen
hasi baino lehen, helburua minimizatze helburu bihurtu beharko dugu, kostu-
matrizea aldaketa honen arabera aldatuz.
∀i, j-
rako cij ordez −cij jartzea zilegi da, baina taulako balio guztiak negatibo
bihurtuko zaizkigu honen ondorioz. Positibo bihurtzeko taulako elementurik han-
diena hartuko dugu, 10, eta elementu guztiei gehituko diegu. Taula honela gelditu
zaigu:
1 2 3 4 5
A 8 6 0 7 4
B 3 3 5 4 6
D
2 4 3 − 1
Orain helburua minimizatzea da. Taula prest daukagu algoritmoa erabiltzen
hasteko.
4. langilea D lana egiteko gai ez dela dio problemaren enuntziatuak; esleipen
hori gertatuko ez dela ziurtatzeko M balioa, guk nahi adina handia, jarriko dugu
taulako posizio horretan.
Bestalde, problema ez da orekatua, jatorri-puntuen eta helburu-puntuen kop-
urua berdina ez delako. Gezurrezko bi jatorri-puntu gehituko dizkiogu taulari;
jatorri-puntu hauen kostuak zero izango dira edozein helburu-puntutarako. Bi
langile eta gezurrezko bi lan hauek lotuko ditu soluzioak, eta langile horiek lanik
gabe gelditu direla esan nahiko du. Horregatik da kostua zero.

7.2. ESLEIPEN-PROBLEMA
cclxi
1 2 3
4
5
A 8 6 0
7
4
B 3 3 5
4
6
D 2 4 3 M 1
E
0 0 0
0
0
F
0 0 0
0
0
Orain bai metodo hungariarra erabil daitekeela esleipen optimoa ezagutzeko.
2
7.2.3
Aukerazko optimoak
Zeroak esleitzeko unean, lerro bakoitzean zero bat esleitzea lortu badugu eta es-
leipenak egiterakoan aukera bat baino gehiagoren artean aukeratu behar izan badugu,
orduan aukerazko optimoak daude.
Adibidea:
Har dezagun aurreko adibideko taula, behin minimizazio helburura aldatua
izan denean.
Kostu-matrizeko elementu guztiak positiboak dira. Lerro bakoitzean lerroko
txikiena kenduz:
1 2 3
4
5
A 8 6 0
7
4
B 0 0 2
1
3
D 1 3 2 M 0
E 0 0 0
0
0
F
0 0 0
0
0
Zutabe bakoitzean bada zeroren bat. Beraz, zeroak esleitzen has gaitezke.

cclxii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1
2
3
4
5
A
8
6
0
7
4
B
0
0
2
1
3
D
1
3
2
M
0
E
0
0
0
0
0
F
0
0
0
0
0
Bost zero izan dira esleituak, zero bat lerroko. Algoritmoa amaitu da.
• Soluzioa: A → 3, B → 1, D → 5, E → 2 eta F → 4.
• Esleipen-kostua: c13 + c21 + c35 + c42 + c54 = 10 + 7 + 9 + 0 + 0 = 26
Soluzio honen arabera 2 langilea eta 4 langilea lanik gabe gelditu dira.
Bigarren lerroan esleipena egiterakoan, B lana 1. lagunari esleitzeko aukera
izateaz gain badago beste aukera bat: B lana 2. lagunari esleitzekoa. Bigarren
aukera hartuz gero ondorengo aukerazko soluzioa lortuko genuke:
1
2
3
4
5
A
8
6
0
7
4
B
0
0
2
1
3
D
1
3
2
M
0
E
0
0
0
0
0
F
0
0
0
0
0
• Soluzioa: A → 3, B → 2, D → 5, E → 1, F → 4
• Kostua: 10 + 7 + 9 + 0 + 0 = 26
Oraingo honetan lanik gabe gelditu direnak 1. langilea eta 4. langilea dira.
Modu berean, laugarren eta bosgarren lerroetatik ere aukerazko soluzioak lor
daitezke, baina hauek ez dute benetazko lanen esleipenaren gain inolako eraginik
izango.
2

7.3. ERABILPEN PRAKTIKOAK
cclxiii
7.3
Erabilpen praktikoak
7.3.1
Ekoizpen-problema bat
Lantegi batek bere ekoizpena antolatu behar du hurrengo urteko 4 hiruhilabetealdietarako.
Izango duen eskaria estima dezake:
 lehen hiruhilabetealdian 100 unitateko eskaria
izango du, bigarrengoan 200, 150 unitatekoa hirugarrengoan eta 100 azkenen-
goan. Hiruhilabetealdi bateko ekoizpen-ahalmena 120 unitatetara mugatua dago.
Hiruhilabetealdi bateko eskaria ezin daiteke geroagoko hiruhilabetealdiren bate-
tan zerbitzatu. Produktu-
unitate bat ekoizteak 2 unitateko kostua dakarkio lante-
giari. Gainera, 0.5 unitateko kostu gehigarria izango du produktu-unitate hori
biltegiratzeko beharrean aurkitzen bada. Problema hau garraio-problema baten
moduan planteatuko dugu.
Adibide honetan lau hiruhilabetealdiak aldi berean jatorri-puntu eta helburu-
puntu dira.
xij erabaki-aldagaiek zera adierazten dute: j hiruhilabetealdiko es-
karia zerbitzatzeko
i hiruhilabetealdian sortu beharko den unitate-kopurua. Baldin
i > j bada, xij oinarrian egotea ezinezkoa izango da, lehen esan baitugu hiruhi-
labetealdi bateko eskaria ezin daitekeela geroagoko hiruhilabetealdiren batetan
zerbitzatu.
Jatorri-puntuen eskaintza hiruhilabetealdiko ekoizpen maximoa da, hau da,
a1
=
120, a2
=
120, a3
=
120, a4
=
120.
Eskariak berriz:
b1 = 100, b2 = 200, b3 = 150, b4 = 100.
Ekoizte-kostuak hauek dira:
• cij = ekoizte-kostua
i = j den kasuetan.
• cij = ekoizte-kostua + biltegiratze-kostua
i < j denetan.
• cij = M
i > j bada.
M balio hau
xij aldagaia oinarriko ez bihurtzeko behar adina handia da.
Problema honi dagokion garraioaren kostu-taula hau da:

cclxiv
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
1
2
3
4
ESKAINT ZA
1
2
2.5
3
4
120
2
M
2
2.5
3
120
3
M
M
2
2.5
120
4
M
M
M
2
120
ESKARIA 100 200 150 100
7.3.2
Maximizatze-problema bat
Lantegi batek hiru ekoizte-zentro ditu:
 A, B eta D. Bere produktua sortzeak emat-
en dion unitateko irabazia 110-ekoa da. Irabazi hau kalkulatzeko ekoizte-kostua
eta salmenta-prezioa izan dira kontutan. Produktua hiru ekoizte-
zentro horietatik
lau salmenta-puntuetara garraiatzeak suposatzen dituen kostuak hauek dira:
1
2
3
4
A 30 10 25 20
B
15 25 30 10
D 20 30 15 20
Ekoizpen-zentro hauen hilabeteko ekoizte-ahalmena 2.000 unitatera mugatua
dago. Salmenta-puntuen hilabeteko eskariak 1.000, 1.200, 1.500 eta 1.000 uni-
tatekoak dira, hurrenez hurren.
Lantegiak ahalik eta irabazi handiena lor dezan bere ekoizpena planiﬁkatzen
lagunduko dion garraio-taula idatziko dugu.
• Eskaintzak: a1 = 2.000, a2 = 2.000, a3 = 2.000
• Eskariak: b1 = 1.000, b2 = 1.200, b3 = 1.500, b4 = 1.000
Oraingo honetan, kostu-taulako
cij balioak irabaziak dira.
• cij=Ekoiztearen irabazia - Garraio-kostua
Garraio-taula:

7.3. ERABILPEN PRAKTIKOAK
cclxv
1
2
3
4
ESKAINT ZA
A
80
100
85
90
2000
B
95
85
80
100
2000
D
90
80
95
90
2000
ESKARIA
1000 1200 1500 1000
Garraioaren algoritmoa erabili ahal izateko taulako elementuen zeinuak al-
datu egin beharko ditugu, taulako balioak irabaziak eta helburua maximizatzea
direlako.
7.3.3
Ordutegien esleipena
Demagun bi irakasle daudela matematika lau ikasgelatan erakusteko prest. Irakasle
bakoitzak bi eskola eman beharko ditu. Irakasleek ordutegiari buruzko lehen-
tasunak azaldu dituzte eta beheko taulan datoz adieraziak. 10-eko puntuaketak
irakasleak gehien nahi duen ordua hori dela esan nahi du eta 1-
ekoak gutxien nahi
duen ordua hori dela.
Lehentasunen taula:
9.00 10.00 11.00 13.00
1. irakaslea
9
9
7
6
2. irakaslea
9
8
8
4
Irakasleen lehentasunak ahalik eta gehien errespetatuko diren eran banatu nahi
dira eskolak.
Esleipen-taula hau eraiki beharko da ordutegiak irakasleen artean banatzeko.
9.00 10.00 11.00 13.00
1. irakaslea
9
9
7
6
2. irakaslea
9
8
8
4
1. irakaslea
9
9
7
6
2. irakaslea
9
8
8
4

cclxvi
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Lerro bakoitzean posizio bat esleitzen da eta ondorioz irakasle bakoitzari bi
ordutegi desberdin egokituko zaizkio.
Gogoratu taula minimizatze erari egokitu behar zaiola esleipenaren algoritmoa
erabiltzen hasi baino lehen.
7.4
Ariketak
1. Demagun garraio-taula hau daukagula:
1
2
3
4
ESKAINT ZA
1
6
3
2
4
30
2
7
5
4
6
60
3
9
8
6
3
40
ESKARIA
20 50 45 20
(a) Idatzi dagokion eredu lineala.
(b) Eraiki ezazu garraio-eredu orekatua.
(c) Ipar-mendebaldeko ertzaren metodoa erabiliz soluzio bat kalkula eza-
zu.
(d) Vogel-en metodoa erabiliz kalkula ezazu, baita, soluzio bat.
(e) Aurreko puntuetan lorturiko soluzioen artetik hoberena har ezazu soluzio
optimoa bilatzeko.
2. Garraio-problema bati dagokion garraio-taula behekoa da. M balioek gar-
raio hori ezinezkoa dela esan nahi dute.
1
2
3
4 ESKAINT ZA
1
2
4 M 3
10
2
6
2
7
3
10
3
M 9 M 7
10
ESKARIA
8
6 15 6

7.4. ARIKETAK
cclxvii
(a) Ipar-mendebaldeko ertzaren metodoa erabiliz lortutako soluzioa eta
Vogel-en metodoa erabiliz lortutakoa aldera itzazu.
(b) Soluzio optimoa lor ezazu.
3. cclxiii .orriko ekoizpen-problemaren antzekoa ebatzi nahi da. Oraingoan
hiruhilabetealdi bateko eskaria geroagoko beste hiruhilabetealdi batean zer-
bi daiteke, eta horrelakoetan
0.60-ko zigor-kostua ezarriko da atzerapenezko
hiruhilabetealdi bakoitzeko. Problema eredu lineal moduan idatz eta ebatz
ezazu.
4. Igeriketa talde baten entrenatzaileak taldeko sei igerilarien artetik lau auk-
eratu behar ditu txandaketa proba batean parte hartzeko. Aurretik egindako
proba batean igerilari bakoitzak igeriketa estilo bakoitzean lortutako denbo-
rak baditu entrenatzaileak eta denbora horiek aukeraketa egiten lagunduko
diote. Denborak segundutan hartuak daude.
1
2
3
4
5
6
BIZKAR ESTILOA
36 34 33 38 37 42
BULAR ESTILOA
42 35 40 35 35 35
TXIMELETA EST.
34 29 39 29 32 40
CROLL ESTILOA
30 28 29 30 28 30
Zein lau igerilari eta bakoitza zein estilotan igerian aritzeko aukeratuko ditu
entrenatzaileak txapelketan irabazle izateko aukerak ahalik eta handienak
izateko? Erabil ezazu metodo hungariarra.
5. Aire-
konpainia batek A hiritik B hirira 5 hegaldi egiten ditu, eta beste hainbeste
itzultzeko. Hegaldien ordutegia taulakoa da. Tripulazio bakoitzak eguneko
bi hegaldi burutu behar ditu eta hegaldi artean gutxienez bi orduko atsede-
naldia izan behar du. Tripulazioak bai A hirian eta bai B hirian bizi daitezke.

cclxviii
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA
Hegaldia Irteera A-tik Helduera B-ra
1
5.00
9.00
2
9.00
13.00
3
12.30
16.30
4
17.00
21.00
5
20.00
24.00
Hegaldia B-tik irteera A-ra itzulera
1
6.00
9.00
2
9.00
12.00
3
13.00
16.00
4
15.00
18.00
5
20.00
23.00
Zehazta ezazu tripulazio bakoitzak zein ordutako hegaldiak egin beharko
dituen eta zein hiritan bizi beharko duen hegaldi arteko atsedenaldi denbo-
rak minimizatzeko.

7.4. ARIKETAK
cclxix
6. Datozen esleipen-taulatako elementuak irabaziak dira. Soluzio optimoa au-
rki ezazu.
(a) .
1 2
3 4
1 7 3
2 4
2 4 − 7 6
3 2 9
3 3
4 6 4 − 9
(b) .
1
2 3 4
5
1
4
3 6 3
7
2 12 5 4 5
2
3
9
2 2 7 10
4
6
7 9 3
5

cclxx
KAPITULUA 7. GARRAIO-PROBLEMA ETA ESLEIPEN-PROBLEMA

Kapitulua 8
PAKETEAK
8.1
Sarrera
Problema linealak eskuz ebazteko kalkulu matematiko asko egin behar izaten da.
Lana erraztearren, zenbait konputagailu programa garatu da, eta tamaina handiko
problemak ere modu errazean ebatziak izango dira.
Gai honetan bi pakete aztertuko ditugu: QSB+ eta LINDO paketeak. Menu-
en bitartez erabiltzen da lehenengoa eta aginduen bitartez bigarrena. Bakoitzak
eskaintzen dituen aukerak banan bana aztertuko ditugu, eta adibide batzuk exeku-
tatuko ditugu bakoitzak sortzen duen irteera nolakoa den ikusteko. Honakoak dira
adibideen enuntziatuak:
8.1.1
Nahasketen problema
Birﬁndegi batean 2 gasolina mota (A eta B) ekoizten dituzte, horretarako 3 es-
entzia desberdin nahastuz. Erabil daitekeen esentzia-
kopurua eta mota bakoitzeko
upelaren prezioa 8.1 .taulan datoz adieraziak.
A eta B gasolinak kalitate onekoak izan daitezen, nahasketak egiterakoan on-
dokoak kontutan izan behar dira:
• A gasolinaren %50-a gutxienez 1. esentzia da eta ezin du 2. esentzia %30-
etik behera izan.
• B gasolinaren 3. esentzia-kopuruak %30-etik beherakoa izan behar du.
cclxxi

cclxxii
KAPITULUA 8. PAKETEAK
Taula 8.1:
UPELA-
UPELAKO
ESENTZIA
KOPURUA
PREZIOA
1
2.000
10
2
3.000
8
3
1.000
12
A gasolinaren salneurria 40 ptakoa da upelako eta B-rena 35 ptakoa. Demagun
ekoiztutako gasolina guztia saltzeko gai dela birﬁndegia.
Irabaziak ahalik eta handienak izan daitezen mota bakoitzetik zenbat gasolina
ekoiztu beharko den zehaztuko duen eredu lineala eraiki genuen. Ikus xxix. orria.
8.1.2
Jan-neurriaren problema
Elikapen-zentro batean A, B, D eta E bitaminak kopuru egokian izango dituen
jan-neurria prestatzen ari dira. Jan-neurriak ondokoak bete beharko ditu: gutx-
ienez 25 mg A bitamina izan beharko ditu, B bitamina-kopuruak 25 mg eta 30 mg
artean egon beharko du, D bitaminak berriz 22 mg-tik gora agertu beharko du eta
gehienera jota ere 17 mg E bitamina nahi dira.
Bitamina guzti horiek 4 elikagai ezberdinen bidez lor daitezke. 8.2 .taulan zera
dator adierazia: elikagai gramoko dagoen A, B, D eta E bitaminen mg-kopurua
eta elikagai horietariko bakoitzaren gramoko kostua.
Eskatzen dena zera da: kosturik txikieneko jan-
neurria aurkitu nahi da, beti ere
beharrezko A, B, D eta E bitamina-kopurua ziurtatuko duelarik. (Begira xxviii.
orriko eredua).
8.1.3
Garraio-problema bat
Demagun herrialde batean badirela ogia ekoizten duten 2 lantegi:
 A eta B. Lante-
gi horietan ekoiztutako ogia 3 okindegitara garraiatzen da, hauek sal dezaten:
O1, O2, O3. (Ikus ccxx. orria).
Jatorri-puntuen (lantegien) eskaintzak, helburu-puntuen (okindegien) eskariak
eta garraio-kostuak irudikoak dira.

8.1. SARRERA
cclxxiii
Taula 8.2: Elikagaien bitaminak eta kostua
BITAMINAK
ELIKAGAI
ELIKAGAIA
(mg/gr)
GRAMOAREN
A
B
D
E
KOSTUA
1
2
1
0
1
14
2
1
2
1
2
9
3
1
0
2
0
13
4
1
2
1
1
16
Erabaki-aldagaiak:
xij = i (i = A, B) lantegitik Oj (j = 1, 2, 3) okindegira garraiatzen
den ogiaren unitate-kopurua
8.1.4
Esleipen-problema bat
Igeriketa talde baten entrenatzaileak taldeko sei igerilarien artetik lau aukeratu
behar ditu proba batean parte hartzeko. Aurretik egindako proba batean igeri-
lari bakoitzak igeriketa-
estilo bakoitzean lortutako denborak baditu entrenatza-
ileak eta denbora horiek aukeraketa egiten lagunduko diote. Denborak segundutan
hartuak daude.
1
2
3
4
5
6
BIZKAR ESTILOA
36
34
33
38
37
42
BULAR ESTILOA
42
35
40
35
35
35
TXIMELETA EST.
34
29
39
29
32
40
CROWL ESTILOA
30
28
29
30
28
30
Zein lau igerilari eta bakoitza zein modalitatetan igerian aritzeko aukeratuko
ditu entrenatzaileak txapelketan irabazle izateko aukerak ahalik eta handienak iza-
teko?

cclxxiv
KAPITULUA 8. PAKETEAK
8.2
QSB+
QSB+ (Quantitative Systems for Business Plus) paketearen helburua erabakiak
hartzen laguntzea da, eta bide horretatik erabiltzaileak emandako optimizazio-
problemak ebazten ditu. 19 moduluz osaturik dago, modulu bakoitza problema
mota bat ebazteko egokitua dagoelarik. Horietariko hiru dira irakasgai honetan
aztertzen diren problemak ebazteko erabiliko ditugunak:
1. Programazio lineala
2. Garraio-problemak ebazteko modulua
3. Esleipen-problemak eta bidaiariaren problema ebaztekoa
Hiru horietaz gain praktikan ager daitekeen beste hainbat problema ebazteko
gai da QSB+.
Erabiltzaileari paketea erabilgarri gerta dakion, lehioen eta menuen bidez an-
tolaturik dago. Honakoak dira eskaintzen diren aukerak:
1. Moduluak:
• Programazio lineala
• Programazio lineal osoa
• Helburu bidezko programazioa
• Programazio koadratikoa
• Programazio ez-lineala
• Programazio dinamikoa
• Garraio-problema
• Esleipen-problema eta bidaiariaren problema
• Sare espezialduen eredutzea
• Sare gaituen ﬂuxuaren eredutzea
• Proiektu-antolaketa (PERT/CPM)
• Inbentario-teoria
• Inbentario-teoria 2
• Iladen teoria

8.2. QSB+
cclxxv
• Ilada sistemen simulazioa
• Erabakien analisia
• Markov prozesuak
• Denbora-serieen aurresatea
• Analisi ﬁnantziarrak
2. Datu-sarrera:
• Datuak sartu
• Fitxategia irakurri
• Datuak erakutsi
• Datuak aldatu
• Datuak gorde
• QSB+ -etik irten
3. Soluzioa:
• Problema ebatzi
• Ebatzi eta taulak erakutsi
• Graﬁka bidez ebatzi
• Graﬁkaren neurriak ﬁnkatu
• Soluzioa erakutsi
• Soluzioa inprimatu
• Soluzioa gorde
• Azken taula inprimatu
4. Aukerak:
• Koloreak
• Kolorebakarra
• Inprimagailua
5. Laguntza:

cclxxvi
KAPITULUA 8. PAKETEAK
• Moduluari buruzkoa
• Interfazeari buruzkoa
• Editatze-teklei buruzkoa
Hona hemen adibideak ebatzi ondoren QSB+ paketeak lortutako soluzioak.
Nahasketen problema
Datorren taulan biltzen dira problema ebatzi ondoren lortutako datuak. Solu-
tion zutabekoak dira problemaren aldagaien balio optimoak. Opportunity Cost
zutabean hasierako aldagaiei dagozkien
zj − cj balioak datoz. Gainontzeko hiru
zutabeetan zera dator adierazia:
 c bektorearen parametro bakoitzak zein tartetan
egon beharko duen oinarri optimoa alda ez dadin. Parametro horietariko bakar bat
aldatuko da aldi berean.
|---------------------- Solution Summary for nahasket -----------------------|
| 12-27-1994 14:12:47
Page: 1 of 1
|
|----------------------------------------------------------------------------|
| Variable | Variable |
|Opportuni-|
Minimum |
Current |
Maximum |
|
Number
|
Name
| Solution |
ty Cost |Obj. Coef.|Obj. Coef.|Obj. Coef.|
|----------+----------+----------+----------+----------+----------+----------|
|
1
|
x1A
|
2000 |
0 |
20 |
30 |
M|
|
2
|
x2A
|
1200 |
0 | 15.33333 |
32 |
32|
|
3
|
x3A
|
800 |
0 |
28 |
28 |
M|
|
4
|
x1B
|
0 |
10 |
-M |
25 |
35|
|
5
|
x2B
|
1800 |
0 |
27 |
27 |
43.66666|
|
6
|
x3B
|
200 |
0 |
0 |
23 |
23|
|----------------------------------------------------------------------------|
|
Maximized OBJ = 174000
Iteration = 5
Elapsed CPU seconds = 0.050781
|
|----------------------------------------------------------------------------|
|
|
|----------------------------------------------------------------------------|
Ondorengo taula honetan, Constraint Status zutabeak murrizketen zentzua
ematen digu. Shadow Price zutabean itzal-prezioak datoz, soluzio dual optimoa,
alegia. Gainontzeko hiru zutabeetan b bektorearen parametro bakoitza zein tarte-
tan mugitu ahal izango den esaten zaigu, beti ere oinarri optimoa aldatuko ez
delarik. Aldi berean parametro horietariko bakar bat alda daiteke.

8.2. QSB+
cclxxvii
|--------------------- Constraint Summary for nahasket ----------------------|
| 12-27-1994 14:12:47
Page: 1 of 1
|
|----------------------------------------------------------------------------|
|Constraint|Constraint|
Shadow
|
Surplus |
Minimum |
Current |
Maximum |
|
Number
|
Status
|
Price
|
| R. H. S. | R. H. S. | R. H. S. |
|----------+----------+----------+----------+----------+----------+----------|
|
1
|Tight
(<)|
35 |
0 | 0.000122 |
2000 |
2500 |
|
2
|Tight
(<)|
27 |
0 | 1666.667 |
3000 |
M |
|
3
|Tight
(<)|
23 |
0 |
800 |
1000 | 1571.429 |
|
4
|Tight
(>)|
.1 |
0 | -14285.7 |
0 |
50000 |
|
5
|Tight
(>)|
0 |
0 |
-20000 |
0 |
40000 |
|
6
|Loose
(>)|
0 |
40000 |
-M |
0 |
40000 |
|----------------------------------------------------------------------------|
|
Maximized OBJ = 174000
Iteration = 5
Elapsed CPU seconds = 0.050781
|
|----------------------------------------------------------------------------|
|
|
|----------------------------------------------------------------------------|
Janeurriaren problema
|---------------------- Solution Summary for janeurri -----------------------|
| 12-27-1994 14:15:06
Page: 1 of 1
|
|----------------------------------------------------------------------------|
| Variable | Variable |
|Opportuni-|
Minimum |
Current |
Maximum |
|
Number
|
Name
| Solution |
ty Cost |Obj. Coef.|Obj. Coef.|Obj. Coef.|
|----------+----------+----------+----------+----------+----------+----------|
|
1
|
X1
| 4.428571 |
0 | 1.250001 |
14 |
24|
|
2
|
X2
| 2.285714 |
0 |
-11 |
9 |
16|
|
3
|
X3
| 5.857143 |
0 | 6.333333 |
13 |
35.5|
|
4
|
X4
|
8 |
0 | 9.571428 |
16 |
M|
|----------------------------------------------------------------------------|
|
Minimized OBJ = 286.7143
Iteration = 4
Elapsed CPU seconds = 0
|
|----------------------------------------------------------------------------|
|
|
|----------------------------------------------------------------------------|
|--------------------- Constraint Summary for janeurri ----------------------|
| 12-27-1994 14:15:06
Page: 1 of 1
|
|----------------------------------------------------------------------------|
|Constraint|Constraint|
Shadow
|
Surplus |
Minimum |
Current |
Maximum |
|
Number
|
Status
|
Price
|
| R. H. S. | R. H. S. | R. H. S. |
|----------+----------+----------+----------+----------+----------+----------|
|
1
|Tight
(>)| 7.285714 |
0 |
17.25 |
25 |
33 |
|
2
|Loose
(<)|
0 |
5 |
25 |
30 |
M |
|
3
|Tight
(>)| 6.428571 |
0 |
17 |
25 |
30 |
|
4
|Tight
(>)| 2.857143 |
0 | 8.333333 |
22 |
37.5 |
|
5
|Tight
(<)|
-7 |
0 | 14.71429 |
17 |
25 |
|----------------------------------------------------------------------------|
|
Minimized OBJ = 286.7143
Iteration = 4
Elapsed CPU seconds = 0
|
|----------------------------------------------------------------------------|
|
|
|----------------------------------------------------------------------------|
Garraio-problema

cclxxviii
KAPITULUA 8. PAKETEAK
Hasierako soluzioa kalkulatzeko 8 metodo desberdin dago, eta horietariko
edozein erabil daiteke. Soluzioaren hobekuntza kalkulatzeko MODI metodoa er-
abiltzen da.
Datorren taulan problemaren taula optimoa agertzen da, hau da, aldagaien
balio optimoak eta helburu-funtzioaren balio optimoa.
Edozein unetako garraio-taula ikus daiteke, ez garraio-taula optimoa bakarrik.
|-------------------------- Solution for garraio --------------------------|
| 12-27-1994 14:18:13
Page: 1 of 1
|
|--------------------------------------------------------------------------|
|
From
|
To
|
Shipment
|@ Cost/Profit | Opport. Cost |
|--------------+--------------+--------------+--------------+--------------|
|
A
|
O1
|
1500
|
8
|
0
|
|
A
|
O2
|
0
|
6
|
1
|
|
A
|
O3
|
500
|
10
|
0
|
|
B
|
O1
|
0
|
10
|
3
|
|
B
|
O2
|
2000
|
4
|
0
|
|
B
|
O3
|
500
|
9
|
0
|
|--------------------------------------------------------------------------|
|
Minimized OBJ = 29500
Iteration = 2
Elapsed CPU seconds = 0
|
|--------------------------------------------------------------------------|
|
|
|--------------------------------------------------------------------------|
Esleipen-problema
Problema ebazteko metodo hungariarra erabiltzen du QSB+ek.
Assignment Solution for igeriketa
12-27-1994 14:22:25
Object
Task
Cost/Profit
BIZKAR
3
33
BULAR
2
35
TXIMELETA
4
29
CROLL
5
28
Dummy
1
0
Dummy
6
0
Minimized OBJ = 125
# Iterations = 1
CPU seconds = 0
OBJECT zutabean igeriketa-estiloak (iturburu-puntuak) agertzen dira, eta TASK
zutabean igeriketa-estilo bakoitzari esleitutako igerilariak (helburu-
puntuak). Orain-
goan ere, edozein iteraziotarako esleipen-taula lor daiteke. Aurrekoa esleipen-
taula optimoa da.

8.3. LINDO
cclxxix
8.3
LINDO
8.3.1
Sarrera
Erabiltzaileari bere zereginetan erabakiak hartzen laguntzeko eraiki zen LINDO
(Linear, INteractive, Discrete Optimizer) paketea. Honakoa izaten da paketea er-
abiltzeko modua: hasteko, erabiltzaileak eskuartean duen problema lineala ere-
du moduan formulatzen du, eta LINDOk eskaintzen dituen datu-sarrera agin-
duen bidez eredua LINDOn sartuko du. Ondoren, ebatzi egingo du, eta lortu-
tako soluzioa aztertuko du, sartu berri duen ereduaren zuzentasuna eta egokita-
suna aztertzeko. Zerbait aldatu nahi izanez gero, eredua eguneratu eta ebatziko
du. Erabiltzaileak prozesua errepikatuko du behar bezain beste aldiz.
Aginduen bidez erabiltzen da LINDO, ez menuen bidez. Agindu multzoa
nahiko zabala da eta edozein unetan agindu horietariko edozein erabil daiteke.
Honakoak dira guztiak:
1. Informazioa
• CAT → Aginduen kategoriak zerrendatzen ditu.
• COM → Aginduak zerrendatzen ditu
• HELP → Laguntza eskaintzen du
• LOCAL → Bertako instalazioari buruzko informazioa
• TIME → Erabilitako konputagailu-denbora erakusten du
2. Sarrera
• LEAVE → Aurretik egindako TAKE-aren eragina desegiten du
• MAX → Eredua sartzen hasteko
• MIN → Eredua sartzen hasteko
• RDBC → (Retrieve Data Base Column) Aurreko soluzioa atzitu
• RETR → (RETRieve) Problema ﬁtxategi batetik atzitu
• RMPS → (Retrieve MPS) MPS formatuko ﬁtxategia atzitu
• TAKE → Terminaleko sarreraz osaturiko ﬁtxategia atzitu
3. Erakutsi

cclxxx
KAPITULUA 8. PAKETEAK
• BPICTURE → (Base PICTURE) Uneko oinarria marraztu
• CPRI → (Column PRInt) Zutabeari buruzko informazioa
• LOOK → Problemaren zati bat ikusteko
• NONZEROES → Soluzioan zero ez diren aldagaiak erakutsi
• PICTURE → Matrizea marraztu
• RANGE → Heinaren azterketa erakutsi
• RPRI → (Row PRInt) Lerroari buruzko informazioa eman
• SHOCOLUMN → (SHOw COLUMN) Problemaren zutabe bat er-
akutsi
• SOLUTION → Soluzioa erakutsi
• TABLEAU → Uneko taula marraztu
• TITLE → Problemaren izenburua erakutsi edo aldatu
4. Irteera
• DIVERT → Irteera ﬁtxategi batera zuzendu
• RVRT → (ReVeRT) Irteera terminalera zuzendu
• SAVE → Uneko problema ﬁtxategi batean gorde
• SDBC → (Save in Data Base format a Column report) Soluzioa gorde
datu-base formatoa erabiliz
• SMPS → (Save MPS) Uneko problema MPS formatoa erabiliz gorde
5. Soluzioa
• GO → Problema ebatzi
• PIVOT → Simplex metodoaren pauso bat eman
6. Problema editatu
• ALTER → Problemako osagaiak aldatzeko
• APPC → (APPend Column) Ereduari zutabe bat gehitu
• DEL → Zehaztutako murrizketa ezabatzeko
• EDIT → Editorean sartu

8.3. LINDO
cclxxxi
• EXT → (EXTend) Problemari murrizketak erantsi
• FREE → Aldagaia zeinuz murriztugabea dela esateko
• SLB → (Simple Lower Bound) Aldagai batentzat behe-bornea
• SUB → (Simple Upper Bound) Aldagai batentzat goi-bornea
7. Programa osoak, koadratikoak eta parametrikoak
• BIP → (Bound IP) Programa osorako bornea ﬁnkatu
• GIN → (General INteger) Aldagai osoak zehazteko (0,1 ez direnean)
• INT → 0 edo 1 baliodun aldagai osoak zehazteko
• IPTOL → (IP TOLerance) Soluzio optimorako programa osoaren jasanko-
rtasuna ﬁnkatu
• PARA → Programazio parametrikoa
• POSD → (POSitive Deﬁniteness) Positibotasuna egiaztatu
• QCP → (QuadratiC Programming) Programazio koadratikoa
• TITAN → (TIghTen AN ip)
• BATCH → Batch moduan exekutatzeko
• PAGE → Orriaren edota pantailaren tamaina ﬁnkatzeko
• PAUSE → Teklatu-ekintzaren zain egon
• TERSE → Elkarrizketa-modua modu laburrera eraldatu
• VERBOSE → Elkarrizketa-modua modu elkarrizketatsura eraldatu
• WIDTH → Terminalaren zabalera ﬁnkatu
8. Erabiltzailearen azpirrutinak
• USER → Erabiltzailearen azpirrutinari deia
9. Beste zenbait agindu
• BUG → Erroreren batekin topo eginez gero zer egin
• DEBUG → Eredu bideraezina arazten laguntzeko
• INVERT → Uneko oinarriaren alderantzizkoa kalkulatzeko
• SET → Soluzio parametrikoak ﬁnkatu

cclxxxii
KAPITULUA 8. PAKETEAK
• STAT → Estatistikak erakutsi
• TITL → Uneko ereduaren izenburua ﬁnkatu edo erakutsi
10. Irten
• QUIT → Irten
Aukerak zabalak direla ikusten da. Hala ere, LINDO nola erabiltzen den eta
lortzen den irteera zein den ikusteko aurreko adibideak ebatziko ditugu, horre-
tarako agindu sinpleenak besterik erabiliko ez ditugularik.
Ikus ditzagun, ba, paketearen irteerak:
Nahasketen problema
Hasteko, problema ebazteko erabiliko dugun eredu lineala sartzen dugu. Honakoa
da.
MAX
30 X1A + 32 X2A + 28 X3A + 25 X1B + 27 X2B + 23 X3B
SUBJECT TO
2)
X1A + X1B <=
2000
3)
X2A + X2B <=
3000
4)
X3A + X3B <=
1000
5)
50 X1A - 50 X2A - 50 X3A >=
0
6) - 30 X1A + 70 X2A - 30 X3A >=
0
7)
30 X1B + 30 X2B - 70 X3B >=
0
END
Ereduan esplizituki adierazia ez badago ere, LINDOk aldagaiak ez-negatibotzat
hartzen ditu.
LINDOk problema ebatz dezan, GO agindua erabiliko dugu. Horren ondorioz,
behar beste iterazio burutuko du, soluzio optimoa lortu arte. Ondoren datorrena,
soluzio optimoa lortu ondoren emandako emaitza da. Bertan, soluzio optimoa
lortzeko 5 iterazio burutu behar izan duela esaten zaigu. Soluzio optimo horretan
helburu-funtzioak hartutako balio optimoa 174.000-koa da.
Azkenik, soluzio optimoa dator. VALUE zutabean problemaren aldagaiek
hartutako balio optimoak agertzen dira, eta SLACK OR SURPLUS zutabeetan
nasaitze-aldagaien balioak. REDUCED COST zutabekoak taularen
zj −cj balioak
dira eta DUAL PRICES zutabekoak problema dualaren aldagaien balio optimoak.
LP OPTIMUM FOUND AT STEP
5

8.3. LINDO
cclxxxiii
OBJECTIVE FUNCTION VALUE
1)
174000.00
VARIABLE
VALUE
REDUCED COST
X1A
2000.000000
.000000
X2A
1200.000000
.000000
X3A
800.000000
.000000
X1B
.000000
10.000000
X2B
1800.000000
.000000
X3B
200.000000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
35.000000
3)
.000000
27.000000
4)
.000000
23.000000
5)
.000000
-.100000
6)
.000000
.000000
7)
40000.000000
.000000
Ondoren, LINDOk ea sentikortasun analisia egin nahi dugun galdetuko digu.
Baietz erantzunez gero, honakoa erakutsiko digu.

cclxxxiv
KAPITULUA 8. PAKETEAK
NO. ITERATIONS=
5
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1A
30.000000
INFINITY
10.000000
X2A
32.000000
.000000
16.666670
X3A
28.000000
INFINITY
.000000
X1B
25.000000
10.000000
INFINITY
X2B
27.000000
16.666670
.000000
X3B
23.000000
.000000
23.000000
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
2000.000000
500.000000
2000.000000
3
3000.000000
INFINITY
1333.333000
4
1000.000000
571.428600
200.000000
5
.000000
50000.000000
14285.710000
6
.000000
40000.000000
20000.000000
7
.000000
40000.000000
INFINITY
Sentikortasun-analisi honetan helburu-funtzioaren koeﬁzienteen aldaketa eta
b baliabide-
bektorearen balioen aldaketa aztertzen dira. Aldi berean balio hori-
etariko bakar bat aldatzen dela suposatu behar da.
OBJ COEFFICIENT RANGES atalean helburu-funtzioaren koeﬁzienteen al-
daketa aztertzen da. VARIABLE zutabekoak dira problemaren aldagaiak eta CUR-
RENT COEF zutabekoak une honetako balioak. Gainontzeko bi zutabeek adier-
azten dute balio hori zenbateraino igo edo jaitsi daitekeen oinarrian eraginik izan
gabe. ALLOWABLE INCREASE zutabean balioa zenbateraino igo daitekeen
esaten zaigu, eta ALLOWABLE DECREASE zutabean zenbateraino jaitsi daite-
keen.
RIGHTHAND SIDE RANGES atalean baliabide-bektorearen balioak aztertzen
dira. Hemen zutabeek aurreko ataleko esanahi berbera dute, hau da, une honetako
balioa eta balio horiek zenbateraino igo edo jaitsi daitezkeen, beti ere, aldaketak
banaka-banaka gertatuz gero, noski.
Edozein unetan taulako balio guztiak ikusi nahiko bagenitu, TABLE agindua
erabiliko genuke. Orain erabiliz gero, taula optimoa lortuko dugu, oso osorik.
THE TABLEAU
ROW
(BASIS)
X1A
X2A
X3A
X1B
X2B
1 ART
.000
.000
.000
10.000
.000
2
X1A
1.000
.000
.000
1.000
.000

8.3. LINDO
cclxxxv
3
X2B
.000
.000
.000
-.600
1.000
4
X3B
.000
.000
.000
-.400
.000
5
X2A
.000
1.000
.000
.600
.000
6
X3A
.000
.000
1.000
.400
.000
7 SLK
7
.000
.000
.000
-20.000
.000
ROW
X3B
SLK
2
SLK
3
SLK
4
SLK
5
SLK
6
1
.000
35.000
27.000
23.000
.100
.000
2
.000
1.000
.000
.000
.000
.000
3
.000
-.600
1.000
.000
-.006
.010
4
1.000
-.400
.000
1.000
-.014
-.010
5
.000
.600
.000
.000
.006
-.010
6
.000
.400
.000
.000
.014
.010
7
.000
10.000
30.000
-70.000
.800
1.000
ROW
SLK
7
1
.00
.17E+06
2
.000
2000.000
3
.000
1800.000
4
.000
200.000
5
.000
1200.000
6
.000
800.000
7
1.000 40000.000
Janeurriaren problema
Ebatz dezagun orain janeurriaren problema. Eredu lineala sartuko dugu lehenik.
MIN
14 X1 + 9 X2 + 13 X3 + 16 X4
SUBJECT TO
2)
2 X1 + X2 + X3 + X4 >=
25
3)
X1 + 2 X2 + 2 X4 <=
30
4)
X1 + 2 X2 + 2 X4 >=
25
5)
X2 + 2 X3 + X4 >=
22
6)
X1 + 2 X2 + X4 <=
17
END

cclxxxvi
KAPITULUA 8. PAKETEAK
Honakoa da hasierako taula.
THE TABLEAU
ROW
(BASIS)
X1
X2
X3
X4
SLK
2
1 ART
14.000
9.000
13.000
16.000
.000
2 SLK
2
-2.000
-1.000
-1.000
-1.000
1.000
3 SLK
3
1.000
2.000
.000
2.000
.000
4 SLK
4
-1.000
-2.000
.000
-2.000
.000
5 SLK
5
.000
-1.000
-2.000
-1.000
.000
6 SLK
6
1.000
2.000
.000
1.000
.000
ART
6 ART
-3.000
-4.000
-3.000
-4.000
1.000
ROW
SLK
3
SLK
4
SLK
5
SLK
6
1
.000
.000
.000
.000
.000
2
.000
.000
.000
.000
-25.000
3
1.000
.000
.000
.000
30.000
4
.000
1.000
.000
.000
-25.000
5
.000
.000
1.000
.000
-22.000
6
.000
.000
.000
1.000
17.000
ART
6
.000
1.000
1.000
.000
-72.000
Beharrezko iterazio guztiak, 4, burutu ondoren, honakoa da lortutako soluzio
optimoa.
LP OPTIMUM FOUND AT STEP
4
OBJECTIVE FUNCTION VALUE
1)
286.71430
VARIABLE
VALUE
REDUCED COST
X1
4.428571
.000000
X2
2.285714
.000000
X3
5.857143
.000000
X4
8.000000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
-7.285714
3)
5.000000
.000000
4)
.000000
-6.428571
5)
.000000
-2.857143
6)
.000000
7.000000

8.3. LINDO
cclxxxvii
Ikus dezagun sentikortasun-analisiaren emaitza.
NO. ITERATIONS=
4
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
14.000000
10.000000
12.750000
X2
9.000000
7.000000
20.000000
X3
13.000000
22.500000
6.666667
X4
16.000000
INFINITY
6.428571
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
25.000000
8.000000
7.750000
3
30.000000
INFINITY
5.000000
4
25.000000
5.000000
8.000000
5
22.000000
15.500000
13.666670
6
17.000000
8.000000
2.285714
Azken taula, taula optimoa alegia, hau da.
THE TABLEAU
ROW
(BASIS)
X1
X2
X3
X4
SLK
2
1 ART
.000
.000
.000
.000
7.286
2
X3
.000
.000
1.000
.000
-.143
3 SLK
3
.000
.000
.000
.000
.000
4
X4
.000
.000
.000
1.000
.000
5
X1
1.000
.000
.000
.000
-.571
6
X2
.000
1.000
.000
.000
.286
ROW
SLK
3
SLK
4
SLK
5
SLK
6
1
.000
6.429
2.857
7.000
-286.714
2
.000
.286
-.429
.000
5.857
3
1.000
1.000
.000
.000
5.000
4
.000
-1.000
.000
-1.000
8.000
5
.000
.143
.286
.000
4.429
6
.000
.429
-.143
1.000
2.286
Garraio-problema
Problema honi dagokion eredu lineala hau da.
MIN
8 XA1 + 6 XA2 + 10 XA3 + 10 XB1 + 4 XB2 + 9 XB3
SUBJECT TO

cclxxxviii
KAPITULUA 8. PAKETEAK
2)
XA1 + XA2 + XA3 <=
2000
3)
XB1 + XB2 + XB3 <=
2500
4)
XA1 + XB1 >=
1500
5)
XA2 + XB2 >=
2000
6)
XA3 + XB3 >=
1000
END
LINDOk lortutako soluzio optimoa honakoa da.
LP OPTIMUM FOUND AT STEP
4
OBJECTIVE FUNCTION VALUE
1)
29500.000
VARIABLE
VALUE
REDUCED COST
XA1
1500.000000
.000000
XA2
.000000
1.000000
XA3
500.000000
.000000
XB1
.000000
3.000000
XB2
2000.000000
.000000
XB3
500.000000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
.000000
3)
.000000
1.000000
4)
.000000
-8.000000
5)
.000000
-5.000000
6)
.000000
-10.000000
Azkenik, sentikortasun-analisiaren emaitza aztertuko dugu.
NO. ITERATIONS=
4
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
XA1
8.000000
3.000000
8.000000
XA2
6.000000
INFINITY
1.000000
XA3
10.000000
1.000000
1.000000
XB1
10.000000
INFINITY
3.000000
XB2
4.000000
1.000000
5.000000
XB3
9.000000
1.000000
1.000000
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
2000.000000
INFINITY
.000000

8.3. LINDO
cclxxxix
3
2500.000000
500.000000
.000000
4
1500.000000
.000000
1500.000000
5
2000.000000
.000000
500.000000
6
1000.000000
.000000
500.000000
8.3.2
Sentikortasun-analisia
Aurreko adibideetan ikusi bezala, LINDOk problema lineal bat ebazten duen
bakoitzean sentikortasun-
analisia egin nahi al duzun galdetzen du. Hala ere, sentikortasun-
analisi hori nahiko mugaturik dago, aldi berean koeﬁziente bakar bat aldatzen
deneko kasua besterik ez baitu aztertzen.
Guri zenbaitetan koeﬁziente bat baino gehiago aldi berean aldatzen direneko
kasua aztertzea interesatuko zaigu. Horrelakoetan beste modu batera egin beharko
dugu aipatutako analisia.
Oraingoan ere iterazio-kopuru handia aurreztuko dugu, problema ez dugulako
hasieratik ebatziko. Ebatzitako problemaren soluzio optimoa LINDOren SDBC
aginduaren bidez gordeko dugu. Honek datu-base moduko ﬁtxategia sortzen du,
eta RDBC aginduaren bidez gordetako soluzioa jaso ahal izango dugu. Soluzio
honetatik abiatuko gara, eta egin beharreko aldaketa egin ondoren problema ebatziko
dugu.
Adibide baten bidez aldaketa posible guztien sentikortasun-analisia egingo
dugu. Adibidea txikia izateagatik ez da hain garbi ikusten iterazio-kopuru han-
dia aurrezten dela, baina pentsa praktikan problemek aldagai-kopuru handia eta
murrizketa-kopuru handia izaten dutela.
Hasteko problema lineal bat ebatziko dugu, eta aldaketa guztiak problema honi
egingo dizkiogu.
MAX
4 X1 + 7 X2 + 4 X3 + 8 X4
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 <=
4
3)
2 X1 + X2 + X3 + X4 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 <=
9
END

ccxc
KAPITULUA 8. PAKETEAK
LINDOri GO aginduaren bidez eredua ebazteko esango diogu. Honakoa da
lortzen duen soluzio optimoa.
LP OPTIMUM FOUND AT STEP
5
OBJECTIVE FUNCTION VALUE
1)
31.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
2.000000
X2
.000000
3.000000
X3
1.500000
.000000
X4
2.500000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
2.000000
3)
2.000000
.000000
4)
.000000
2.000000
NO. ITERATIONS=
5
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
2.000000
INFINITY
X2
7.000000
3.000000
INFINITY
X3
4.000000
4.000000
.800000
X4
8.000000
4.000000
4.000000
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
4.000000
5.000000
1.000000
3
2.000000
2.000000
INFINITY
4
9.000000
3.000000
5.000000
Demagun orain baliabide-bektorean aldaketak gertatu direla. Aldaketa gertatu
ondoren problemak izango duen soluzio optimoa jakin nahi dugu. Hori jakiteko
modurik azkarrena, aldaketa gertatu aurreko soluzio optimoa berreskuratu eta
LINDOri aldaketen berri ematea da. Aurreko soluzio optimoa jasotzeko RDBC
agindua erabiliko dugu. Aldaketak sartu eta LOOK ALL aginduaren bidez eredua
ikusiko dugu.

8.3. LINDO
ccxci
MAX
4 X1 + 7 X2 + 4 X3 + 8 X4
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 <=
7
3)
2 X1 + X2 + X3 + X4 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 <=
8
END
GO aginduaren bidez eredua ebatziko dugu. Begira, iterazio bat besterik ez
duela behar izan soluzio optimoa lortzeko.
LP OPTIMUM FOUND AT STEP
1
OBJECTIVE FUNCTION VALUE
1)
35.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
2.000000
X2
.000000
3.000000
X3
6.500000
.000000
X4
.500000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
2.000000
3)
5.000000
.000000
4)
.000000
2.000000
NO. ITERATIONS=
1
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
2.000000
INFINITY
X2
7.000000
3.000000
INFINITY
X3
4.000000
4.000000
.800000
X4
8.000000
4.000000
4.000000
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
7.000000
1.000000
4.333333
3
2.000000
5.000000
INFINITY
4
8.000000
13.000000
1.000000
Baliabide-bektorean beste aldaketa bat gertatu dela eman dezagun. Honela
gelditu zaigu eredu lineala.

ccxcii
KAPITULUA 8. PAKETEAK
MAX
4 X1 + 7 X2 + 4 X3 + 8 X4
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 <=
3
3)
2 X1 + X2 + X3 + X4 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 <=
7
END
Aldaketaren ondorioz ez da bideragarritasunik galdu, eta oinarriak optimo iza-
ten jarraitzen du. Azken taula nola gelditu den jakin nahi izanez gero, TABLE
agindua erabiliko genuke.
Burututako iterazio-kopurua zero da. Soluzio optimoa hau da.
LP OPTIMUM FOUND AT STEP
0
OBJECTIVE FUNCTION VALUE
1)
25.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
2.000000
X2
.000000
3.000000
X3
1.000000
.000000
X4
2.000000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
2.000000
3)
1.000000
.000000
4)
.000000
2.000000
NO. ITERATIONS=
0
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
2.000000
INFINITY
X2
7.000000
3.000000
INFINITY
X3
4.000000
4.000000
.800000
X4
8.000000
4.000000
4.000000

8.3. LINDO
ccxciii
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
3.000000
4.000000
.666667
3
2.000000
1.000000
INFINITY
4
7.000000
2.000000
4.000000
Orain, ereduaren kostu-bektorean gertatutako aldaketen sentikortasun-analisia
egingo dugu.
MAX
3 X1 + 6 X2 + 3 X3 + 5 X4
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 <=
4
3)
2 X1 + X2 + X3 + X4 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 <=
9
END
Iteraziorik burutu gabe lortzen da soluzio optimoa.
LP OPTIMUM FOUND AT STEP
0
OBJECTIVE FUNCTION VALUE
1)
22.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
2.000000
X2
.000000
1.000000
X3
1.500000
.000000
X4
2.500000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
2.000000
3)
2.000000
.000000
4)
.000000
1.000000
Kostu-bektorean gertatutako honako aldaketak eragindakoak azter ditzagun.
MAX
6 X1 + 6 X2 + 6 X3 + 4 X4
SUBJECT TO
2)
2 X1 + 2X2 + X3 + X4 <=
4
3)
2 X1 + X2 +
X3 + X4 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 <=
9
END

ccxciv
KAPITULUA 8. PAKETEAK
Honakoa da lortzen den soluzio optimoa.
LP OPTIMUM FOUND AT STEP
1
OBJECTIVE FUNCTION VALUE
1)
29.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
6.000000
X2
.000000
6.000000
X3
4.000000
.000000
X4
.000000
2.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
6.000000
3)
2.000000
.000000
4)
5.000000
.000000
NO. ITERATIONS=
1
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
6.000000
6.000000
INFINITY
X2
6.000000
6.000000
INFINITY
X3
6.000000
INFINITY
2.000000
X4
4.000000
2.000000
INFINITY
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
4.000000
5.000000
2.000000
3
2.000000
2.000000
INFINITY
4
9.000000
INFINITY
5.000000
Hasierako ereduari murrizketa bat erantsi nahi badiogu, LINDOren EXT agin-
dua erabiliko dugu. Murrizketa berria gehituta, hau da eredu lineala.
MAX
4 X1 + 7 X2 + 4 X3 + 8 X4
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 <=
4
3)
2 X1 + X2 + X3 + X4 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 <=
9
5)
4 X1 + X2 + 2 X3 + X4 <=
6
END
TABLE aginduaren bidez taula ikus dezakegu.

8.3. LINDO
ccxcv
THE TABLEAU
ROW
(BASIS)
X1
X2
X3
X4
SLK
2
1 ART
2.000
3.000
.000
.000
2.000
2
X3
2.500
1.500
1.000
.000
1.500
3 SLK
3
.000
1.000
.000
.000
1.000
4
X4
-.500
.500
.000
1.000
-.500
5 SLK
5
-.500
-2.500
.000
.000
-2.500
ART
5 ART
2.000
3.000
.000
.000
2.000
ROW
SLK
3
SLK
4
SLK
5
1
.000
2.000
.000
31.000
2
.000
-.500
.000
1.500
3
1.000
.000
.000
2.000
4
.000
.500
.000
2.500
5
.000
.500
1.000
.500
Taula horren azken zutabeak aldagaien soluzio optimoa eta helburu-funtzioaren
balio optimoa ematen ditu, eta ikus daitekeenez, aldagaiek balio positiboak hartzen
dituzte. Beraz, ez da bideragarritasun primala galdu, eta soluzio berria lortzeko ez
dugu iteraziorik burutu beharko.
LP OPTIMUM FOUND AT STEP
0
OBJECTIVE FUNCTION VALUE
1)
31.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
2.000000
X2
.000000
3.000000
X3
1.500000
.000000
X4
2.500000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
2.000000
3)
2.000000
.000000
4)
.000000
2.000000
5)
.500000
.000000

ccxcvi
KAPITULUA 8. PAKETEAK
NO. ITERATIONS=
0
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
2.000000
INFINITY
X2
7.000000
3.000000
INFINITY
X3
4.000000
4.000000
.800000
X4
8.000000
4.000000
4.000000
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
4.000000
.200000
1.000000
3
2.000000
2.000000
INFINITY
4
9.000000
3.000000
1.000000
5
6.000000
INFINITY
.500000
Beste murrizketa desberdin bat erantsiko diogu ereduari.
MAX
4 X1 + 7 X2 + 4 X3 + 8 X4
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 <=
4
3)
2 X1 + X2 + X3 + X4 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 <=
9
5)
2 X1 + X2 + X3 + 2 X4 <=
5
END
Hasierako taula ondoren datorrena da. Bideragarritasun primala galdu da,
azken zutabean -1.5 balioek adierazi bezala.
THE TABLEAU
ROW
(BASIS)
X1
X2
X3
X4
SLK
2
1 ART
2.000
3.000
.000
.000
2.000
2
X3
2.500
1.500
1.000
.000
1.500
3 SLK
3
.000
1.000
.000
.000
1.000
4
X4
-.500
.500
.000
1.000
-.500
5 ART
.500
-1.500
.000
.000
-.500
ART
5 ART
.500
-1.500
.000
.000
-.500
ROW
SLK
3
SLK
4
SLK
5
1
.000
2.000
.000
31.000
2
.000
-.500
.000
1.500
3
1.000
.000
.000
2.000
4
.000
.500
.000
2.500
5
.000
-.500
1.000
-1.500
ART
5
.000
-.500
1.000
-1.500

8.3. LINDO
ccxcvii
Iterazioak burutuz,
LP OPTIMUM FOUND AT STEP
3
OBJECTIVE FUNCTION VALUE
1)
28.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
3.000000
X2
1.000000
.000000
X3
.000000
.000000
X4
2.000000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
1.000000
3)
1.000000
.000000
4)
.000000
1.000000
5)
.000000
2.000000
NO. ITERATIONS=
3
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
3.000000
INFINITY
X2
7.000000
3.000000
3.000000
X3
4.000000
1.000000
1.000000
X4
8.000000
1.500000
3.000000
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
4.000000
3.000000
.000000
3
2.000000
1.000000
INFINITY
4
9.000000
.000000
3.000000
5
5.000000
1.500000
.000000
Oraingoan aldagai berri bat erantsiko diogu ereduari. Hori APPC aginduari
esker lortuko dugu.
MAX
4 X1 + 7 X2 + 4 X3 + 8 X4 + 6 X5
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 + 2 X5 <=
4
3)
2 X1 + X2 + X3 + X4 + 2 X5 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 + 2 X5 <=
9
END

ccxcviii
KAPITULUA 8. PAKETEAK
Aldagai berria erantsi ondorengo ereduaren hasierako taula honakoa da.
THE TABLEAU
ROW
(BASIS)
X1
X2
X3
X4
X5
1 ART
2.000
3.000
.000
.000
2.000
2
X3
2.500
1.500
1.000
.000
2.000
3 SLK
3
.000
1.000
.000
.000
.000
4
X4
-.500
.500
.000
1.000
.000
ART
4 ART
2.000
3.000
.000
.000
2.000
ROW
SLK
2
SLK
3
SLK
4
1
2.000
.000
2.000
31.000
2
1.500
.000
-.500
1.500
3
1.000
1.000
.000
2.000
4
-.500
.000
.500
2.500
Soluzio optimoa iteraziorik burutu gabe lortzen da. Aurreko taulan ere ikus
zitekeen
x5 aldagaia gehitzeak ez duela bideragarritasun dualaren gain eraginik
izan.
LP OPTIMUM FOUND AT STEP
0
OBJECTIVE FUNCTION VALUE
1)
31.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
2.000000
X2
.000000
3.000000
X3
1.500000
.000000
X4
2.500000
.000000
X5
.000000
2.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
2.000000
3)
2.000000
.000000
4)
.000000
2.000000

8.3. LINDO
ccxcix
NO. ITERATIONS=
0
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
2.000000
INFINITY
X2
7.000000
3.000000
INFINITY
X3
4.000000
4.000000
.800000
X4
8.000000
4.000000
4.000000
X5
6.000000
2.000000
INFINITY
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
4.000000
5.000000
1.000000
3
2.000000
2.000000
INFINITY
4
9.000000
3.000000
5.000000
Ea beste aldagai hau gehituz gero zer gertatzen den.
MAX
4 X1 + 7 X2 + 4 X3 + 8 X4 + 10 X5
SUBJECT TO
2)
2 X1 + 2 X2 + X3 + X4 + X5 <=
4
3)
2 X1 + X2 + X3 + X4 + 2 X5 >=
2
4)
X1 + 3 X2 + X3 + 3 X4 + X5 <=
9
END
Hasierako taula.
THE TABLEAU
ROW
(BASIS)
X1
X2
X3
X4
X5
1 ART
2.000
3.000
.000
.000
-6.000
2
X3
2.500
1.500
1.000
.000
1.000
3 SLK
3
.000
1.000
.000
.000
-1.000
4
X4
-.500
.500
.000
1.000
.000
ART
4 ART
2.000
3.000
.000
.000
-6.000
ROW
SLK
2
SLK
3
SLK
4
1
2.000
.000
2.000
31.000
2
1.500
.000
-.500
1.500
3
1.000
1.000
.000
2.000
4
-.500
.000
.500
2.500
Oraingoan
z5 −c5 = −6 < 0 negatibo egin zaigu. Aurreko taula ez da optimo.

ccc
KAPITULUA 8. PAKETEAK
LP OPTIMUM FOUND AT STEP
2
OBJECTIVE FUNCTION VALUE
1)
45.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
16.000000
X2
.000000
13.000000
X3
.000000
6.000000
X4
.000000
2.000000
X5
4.000000
.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
10.000000
3)
6.000000
.000000
4)
5.000000
.000000
NO. ITERATIONS=
2
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
16.000000
INFINITY
X2
7.000000
13.000000
INFINITY
X3
4.000000
6.000000
INFINITY
X4
8.000000
2.000000
INFINITY
X5
10.000000
INFINITY
2.000000
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
4.000000
5.000000
3.000000
3
2.000000
6.000000
INFINITY
4
9.000000
INFINITY
5.000000
Amaitzeko, koeﬁziente-teknologikoen matrizean gertatutako aldaketak azter-
tuko ditugu. Oinarriko ez den
x2 aldagaiaren koeﬁzienteak aldatu direla suposatuko
dugu. Aldi berean, helburu-funtzioan
x2-ri dagokion koeﬁzientea ere aldatu dela
suposatuko dugu.
MAX
4 X1 + 9 X2 + 4 X3 + 8 X4
SUBJECT TO
2)
2 X1 + X2 + X3 + X4 <=
4
3)
2 X1 + 2 X2 + X3 + X4 >=
2
4)
X1 + X2 + X3 + 3 X4 <=
9
END
Hasierako taula honakoa da.

8.3. LINDO
ccci
THE TABLEAU
ROW
(BASIS)
X1
X2
X3
X4
SLK
2
1 ART
2.000
-5.000
.000
.000
2.000
2
X3
2.500
1.000
1.000
.000
1.500
3 SLK
3
.000
-1.000
.000
.000
1.000
4
X4
-.500
.000
.000
1.000
-.500
ART
4 ART
2.000
-5.000
.000
.000
2.000
ROW
SLK
3
SLK
4
1
.000
2.000
31.000
2
.000
-.500
1.500
3
1.000
.000
2.000
4
.000
.500
2.500
Soluzio optimoa.
LP OPTIMUM FOUND AT STEP
2
OBJECTIVE FUNCTION VALUE
1)
41.000000
VARIABLE
VALUE
REDUCED COST
X1
.000000
14.000000
X2
4.000000
.000000
X3
.000000
5.000000
X4
.000000
1.000000
ROW
SLACK OR SURPLUS
DUAL PRICES
2)
.000000
9.000000
3)
6.000000
.000000
4)
5.000000
.000000
NO. ITERATIONS=
2
RANGES IN WHICH THE BASIS IS UNCHANGED:
OBJ COEFFICIENT RANGES
VARIABLE
CURRENT
ALLOWABLE
ALLOWABLE
COEF
INCREASE
DECREASE
X1
4.000000
14.000000
INFINITY
X2
9.000000
INFINITY
1.000000
X3
4.000000
5.000000
INFINITY
X4
8.000000
1.000000
INFINITY
RIGHTHAND SIDE RANGES
ROW
CURRENT
ALLOWABLE
ALLOWABLE
RHS
INCREASE
DECREASE
2
4.000000
5.000000
3.000000

cccii
KAPITULUA 8. PAKETEAK
3
2.000000
6.000000
INFINITY
4
9.000000
INFINITY
5.000000
Bada sarreran aipatu eta gero komentatu ez dugun beste zenbait agindu interes-
garri. Problemaren formulazioa gordetzeko, adibidez, SAVE agindua erabiltzen
da, eta formulazioa aldatzeko ALTER agindua.
Bestalde, esan beharra dago, LINDOren bidez ebatz daitezkeela beste mo-
tatako problemak ere, halanola problema osoak, koadratikoak eta parametrikoak.
