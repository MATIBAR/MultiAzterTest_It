


MATHEMATICA
1.1
SARRERA
Mathematica lengoaiak programatzeko eta kalkuluak burutzeko tresna ugari eskeintzen
ditu eta irakaskuntzarako zein ikerkuntzarako oso erabilgarria da. Arlo matematiko
guztietako funtzio asko deﬁnitutak daude eta, horrez gain, erabiltzaileak programatutako
egitura berriak magultasunez onartzen ditu ere. Aginduen idazkera ingelesez dagoenez
hizkuntz honen onarrizko ezaguera lagungarria da. Bi aholku garrantsitsuek denbora asko
aurreztuko digute:
 aurrenekoa, funtzioen parametroak era zuzenean osatzen saiatzea da
eta bigarrena, aginduen idazkera zehatza oroitu ordez programaren laguntza erabiltzea.
1.2
IDAZKERA
Programa piztu ondoren eta bere pantailan ezarritak gaudenean aginduak eta berauen
parametroak idatziko ditugu eta burutzeko mayusc+enter sakatuko dugu. Eragiketaren
emaitza pantailan argitaratu nahi ez badugu, nahikoa da agindu amaieran ; erantsiz.
Hauek dira lengoai honen idazkera-berezitasun adierazgarrienak:
• Mathematika-
ren barneko funtzioen aurreneko karaktera letra larritan idatziko dugu.
Adib: Factor[x^2+2*x+1]
• Funtzioek bi motako parametroetaz osatutak daude, derrigorrezkoak eta hautazko
aukerak, hain zuzen.
Adib: ListPlot[{{0,1},{1,0.5},{2,1.5}}},PlotJoined→True]
1.2.1
Zenbaki-bildumak
Matematikaren kontextu ezberdinetan agertutako zenbaki-
sorta gehienak parentesien artean
sartzen ditugu 
(espazioaren puntuen koordenatuak, tarte irekiaren muturrak, eragiketen
faktore komunak, ...). Mathematikak hesi mota bakoitza ikur berezietaz mugatzen ditu:
• Parentesiak (...) : Eragiketaren lehentasunak adierazteko.
Adib: ((3+5)^2-2*
√
5)/10.
• Makoak [...] : Funtzioen parametroak mugatzeko.
Adib: Cos[3.1416]
• Giltzak {...} : Zenbaki zerrendak deﬁnitzeko (bektoreak, matrizeak,...).
Adib: mat={{-2,1},{-3,4}}; MatrixForm[mat]
1

1.2.2
Ekuazioen ikurrak
Berdintza ikurrak 
(=) esanahi ezberdinak adieraz ditzake, adibidez esleipenarena, kon-
paraketa, arauak, ... Mathematika-
k ere kasu honetan eragila mota bakoitza ikur ezberdine-
taz bereizten ditu:
•
= : Esleipena.
•
== : Ekuazioetan berdintza da eta ezberdintzetan >=, <=, < eta > darabiltzagu.
Adibidez x2 − 3x + 1 = 0 ekuazioa x^2 - 3*x +1==0 adieraziko genuke.
•
eragiketa/. {aldagaia→balioa} : Eragiketa balioztatzen du aldagaiak emandako
balioa hartzen duenean (arautzat), balio hori betirako esleitu gabe.
Adib: a=2.0; b=a*Pi;
d=e*Pi/.{e→2.0};
{a,b,d,e}
•
Clear[aldagaia] : Aldagaiaren edukina ezabatzeko;
Adib: Clear[a]; a
1.2.3
Programaren laguntza
Sarreran komentatu dugun moduan, programaren laguntza bizkor erabiltzen jakitea agin-
duen idazkera ezagutzea bezain garrantsitsua da. Aginduaren idazkerari buruz ala funtzioaren
parametroen kokapenari buruz zalantzak edukitzekotan lotsarik gabe laguntzari ekiten
badiogu etekin onak aterako ditugu. Mathematica-
ren barneko funtzioen izenak eta be-
rauekin lotutak dauden kontzeptuarenak antzekoak dira, baina ingelesez. Horregatik in-
geles pixka bat menperatzea ala hiztegia eskura edukitzea lagungarria izan daiteke.
•
?*karakter-katea* : Izenean idatzitako karakter-katea tartean daukaten aginduen
zerrenda agertuko da.
Adib: ?*olv*
•
??funtzioa : Eskatutako funtzioaren informazio ugari eskainiko du.
Adib: ??Solve
2

1.3
OHIZKO AGINDUEN ZERRENDA
Mathematica programak kalkulu ugarietarako barneko funtzio aurredeﬁnituak dauzka.
Material guzti horretatik agindu ohizkoenak aurkeztuko ditugu arloz arlo.
1.3.1
Aritmetika
•
N[adierazpena,m] : Adierazpena m digitoetaz plazaratuko du.
Adib: N[Pi,15]
•
Pi, E, I, Inﬁnity, Degree, ... : Konstante hauek aurredeﬁnitutak daude.
•
Round[x ], Floor[x ], Ceiling[x ] :
 Zenbaki osoetara borobiltzeko edo hurbiltzeko.
Adib: Round[5.25]
•
Abs[x ], Mod[n,m] : x -ren balio absolutua eta n/m zatiketaren hondarra.
Adib: Mod[8,3]
•
Arg[z ], Re[z ], Im[z ], Conjugate[z ] :
 z zenbaki konplexuaren argumentua, zati er-
reala, zati zatikiarra eta konjokatua.
Adib: Conjugate[1.5-2.6*I]
•
Sin[x ], Cos[x ], Tan[x ], Cot[x ], Sec[x ], Csc[x ] :
 Ohizko funtzio trigonometrikoak.
•
ArcSin[x ], Sinh[x ], ArcSinh[x ] :
 Ohizko alderantzizko funtzio trigonometrikoak.
•
Sqrt[x ], Exp[x ], Log[x ], Log[b,x ] : Hurrenez hurren
√
x, ex, ln x eta logb x.
•
ReadList[”ﬁtxategi”,Number,RecordLists→True] : Aipatutako ﬁtxategitik zenbak-
izko datuak irakurriko ditu eta zerrenda batean sartu.
Adib: dat=ReadList["c:/garatu/datuak.txt",Number,RecordLists→True]
1.3.2
Zerrendak eta matrizeak
zer = {{a11, a12, ...}, ..., 
{an1, an2, ...}} azpizerrendetaz osatutako zerrenda nagusiaz ma-
trizea deﬁniturik dago eta aij osagaia zer[[i, j]] adierazpenaz idatziko dugu.
•
Table[f[i],{i, i0, in, ∆i}] : Zerrenda berria i-ren funtziopeko f
[i] elementutaz os-
atuko du i = i0, i0 + ∆i, ..., in tartean zehar.
Adib: zer=Table[i^2,{i,1,5}]
3

•
AppendTo[zer,d], PrependTo[zer,d] :
 d osagaia zer zerrendari erantsiko dio amaier-
an ala hasieran.
Adib: AppendTo[zer,36]
•
Intersection[z1, z2], Union[z1, z2] : Hurrenez hurren z1 ∩ z2 eta z1 ∪ z2.
•
MatrixForm[mat] : mat zerrenda konposatua marizearen antzaz erakutsiko du.
Adib: MatrixForm[dat]
•
Det[mat], Inverse[mat], Transpose[mat] : Hurrenez hurren mat matrizearen dter-
minantea, alderantzizkoa eta iraulia.
•
LinearSolve[mat,b] : matx = b sistema linealaren soluzioa kalkulatuko du.
Adib: LinearSolve[dat,{2,0,-6}]
1.3.3
Funtzioak, polinomioak eta ekuazioak
•
f[x ]=adierazpena(x) : x-ren menpeko f funtzioa deﬁnitu dugu.
Adib: f[x ]=Sin[x]/x; Plot[f[x],{x,-2*Pi,2*Pi}]
•
Coeﬃcient[polin,x,n] : Polinomioan agertzen den xn-ren koeﬁzientea.
•
PolynomialQuotient[p1, p2, x] : x -ren funtziopeko p1/p2 eragiketaren zatidura.
•
Factor[polin] : Polinomioa beronen biderkagaietan bereiziko du.
•
Collect[adierazpen,x ] : Adierazpena x-ren berreduretan garatuko du.
•
Simplify[adierazpena] : Adierazpena bakuntzeko.
•
InterpolatingPolynomial[{x1, y1}, ..., {xn, yn},x ] :
 Puntu sorta horretatik igarotzen
den n − 1. mailako polinomioa.
Adib: puntuak={{0,2},{1,1},{2,3},{3,2}};
g[x ]=InterpolatingPolynomial[puntuak,x]
Plot[g[x],{x,-1,4}]
•
Solve[ekuazioak,{aldagai-multzoa}] :
 Ekuazioek ondorioztatzen dituzten aldagaien
balioak askatuko ditu.
Adib: Solve[{2*x-y==5,-3*x-4*y==-2},{x,y}]
•
FindRoot[ekuazioak,{x, x0, x1}] : Ekuazioaren soluzioa zenbakikoki x ∈ 
[x0, x1] tartean
bilatuko du .
4

1.3.4
Limiteak, deribatuak eta integralak
•
Limit[f[x],x→a] : limx→a f[x] limitea balioztatutako du.
Adib: Limit[Sqrt[x^2 -1]/(2*x+3),x→Infinity]
•
f’[x], D[f[x],{x,n}] : Hurrenez hurren f -ren 1.go eta n. deribatuak x-rekiko.
•
Integrate[f[x],x] : f -ren integrala x-rekiko.
•
NIntegrate[f[x],{x, x0, x1}] : f-ren zenbaizko integral deﬁnitua 
[x0, x1] tartean.
Adib: Zenbakizko integraziorako Simpson-en metodoaren adierazpen graﬁkoa
Trap[f ,x ,n ,x0 ,x1 ]:= TrapLag[Function[x,f],n,x0,x1];
TrapLag[f ,n ,x0 ,x1 ]:= Module[{i,h=(x1-x0)/n,xb=x0,f0=N[f[x0]],f1,
marrak={Line[{{x0,0},{x0,N[f[x0]]}}]},puntuak={{x0,N[f[x0]]}},bat=0},
For[i=1,i<=n,i++,xb=xb+h;f1=N[f[xb]];bat=bat+h*N[(f0+f1)/2];
AppendTo[puntuak,{xb,f1}];AppendTo[marrak,Line[{{xb,0},{xb,f1}}]];f0=f1];
Show[{Plot[f[r],{r,x0,x1},DisplayFunction→Identity],
ListPlot[puntuak,PlotJoined→True,DisplayFunction→Identity],
Graphics[marrak]},DisplayFunction→$DisplayFunction];
Print["batura hurbildua=",bat];
Print["Integral zehatza",N[NIntegrate[f[x],{x,x0,x1}],10]]];
Trap[0.4 ∗ r4 − 2 ∗ r3 − 2 ∗ r2 + 10 ∗ r + 20,r,20,0.0,5.0]
•
Sum[f[k],{k, k0, k1, ∆k}] :
k=k1
k=k0 f [k] batukaria balioztatutako du.
•
Product[f[k],{k, k0, k1, ∆k}] :
k=k1
k=k0 f [k] biderkaria balioztatutako du
1.3.5
Estatistika
•
Mean[{x1, ..., xn}] : Zenbaki-zerrendaren batezbestekoa, B = (1/n)
n
i=1 xi.
•
Variance[{x1, ..., xn}] : Zenbaki-zerrendaren bariantza, A = (1/n)
n
i=1(xi − B)
2.
•
Max[{x1, ..., xn}] : Zenbaki-zerrendaren baliorik handiena.
Adib: zer = {-1,6,4,-3};{Mean[zer],Variance[zer]}
•
Random[Real,min,max] : Emandako tartean zorizko zenbaki erreala emango du.
•
NormalDistribution[b,d] : Banaketa normala b batazbesteko eta d desbiazioaz.
•
UniformDistribution[min, max] : Banaketa uniformea emandako tartean. Agindu
hau erabiltzeko <<Statistics‘ContinuousDistributions‘ paketea sartu behar dugu.
5

•
BinomialDistribution[n, p] : p probablitateko eta n saioetako banaketa bino-
miala. Agindu hau erabiltzeko <<Statistics‘DiscreteDistributions‘ paketea sartu
behar dugu.
•
PDF[banaketa, x] : Banaketaren dentsitate funtzioa deﬁnituko du.
Adib: <<Statistics‘ContinuousDistributions‘
ban[x ] = PDF[NormalDistribution[0,1],x]
Plot[ban[x],{x,-3,3}];
1.4
PROGRAMAZIOA ETA GRAFIKOAK
Orain arte Mathematica-
ren eraginkortasuna agindu arruntetan ikusi dugu. Atal honetan,
bai graﬁkoetan eta bai programazioan ere, egitura konplexuagoak eraikitzeko konbina
daitezkeen agindu batzuk ikusiko ditugu. Honela Mathematika-
z lortu daitezken prozesu
eta irudi ikusgarriak egiten ikasiko dugu.
1.4.1
Programazioa
•
Do[aginduak,{k, k0, k1, ∆k}] :
 Aginduak k = k0, k0 + ∆k, ..., k1 zenbakitzailearen
balioetarako errepikatuko ditu.
•
While[baldintza,agind] : Baldintza bete den bitartean agindu-sorta burutuko du.
Adib: i=1;While[i<=5,a=i^2;Print[a];i=i+1]
•
For[k = k0, k = k1, k = k + ∆k,aginduak] :
 Aginduak k = k0, k0 + ∆k, ..., k1 zen-
bakitzailearen balioetarako errepikatuko ditu.
•
If[baldintza,agindu1,agindu2 ] :
 Baldintza betetzen bada lahanango agindua beteko
du, bestela bigarrena beteko du.
•
Which[baldintza1,agindu1,baldintza2,agindu2,...] : Lahanango baldintza betetzen
bada, ondorioz lehenengo agindu-sorta burutuko du, bigarren baldintza betetzen
bada, ondorioz bigarren agindu-sorta,...
Adib: f[x ]=Which[x<0,-1,x>=0,1];
Plot[f[x],{x,-5,5}];
•
Module[{x,y,...},aginduak ] : Aldagai lokalen menpeko agindu-sorta beteko du.
•
Block[{x,y,...},aginduak ] : Aldagai orokorren menpeko agindu-sorta beteko du.
6

1.4.2
Graﬁkoak
•
Plot[{f1(x), f2(x), ...},{x, x0, x1},aukerak] : 
[x0, x1] tartean x aldagai askearen
menpeko fi(x) funtzioen graﬁkak marraztuko ditu. “Plot” aginduak marrazki-
aukera ugari onartzen ditu eta hauen artean “AspectRatio” (marrazkiaren luzera
eta zabaleraren arteko proporzioa zehazten du) eta “DisplayFunction” (“Display-
Function − > Identity” marrazkia izkutatzeko eta “DisplayFunction − > $Display-
Function” marrazkia plazaratzeko) garrantsitsuenetakoak dira hain zuzen.
•
Show[{gr1, gr2, ...}] : Zenbait graﬁka nahastuko ditu irudi bakar batean.
•
Plot3D[f(x,y),{x, x0, x1},{y, y0, y1}] : [x, x0, x1]×
[y, y0, y1] laukizuzenaren gainean
f (x, y)-ren irudi tridimentsionala marraztuko du.
•
ParametricPlot[{x(t),y(t)},{t, t0, t1}] : (x(t), y(t)) ibilbidea marraztuko du.
Adib: ParametricPlot[{Cos[t],Sin[t]},{t,0,2*Pi},AspectRatio− >1];
•
ListPlot[{{x1, y1},...,{xn, yn}},PlotJoined− >True] :
 Puntuen zerrenda lotzen duen
poligonala eraikiko du.
•
Point, Line, Polygon, Circle, Cuboid, Rectangle : Puntuak, zuzenak, poligonoak,
... marrazteko elementuak. Hauetako batzuek “Graphics
[...]” eragilea beharko dute.
•
Graphics[Text[”textua”,{x,y},{0,-1},{1,0}]] : Textua 
(x, y) koordenatuetan idatziko
du. Azken zenbakiak ∈ {−1, 0, 1} eta idazkeraren norabidea ﬁnkatuko dute.
•
Show[GraphicsArray[{{gr11, ..., gr1k},..., {grn1, ..., grnk}}]] :
 n × k dimentsioko
graﬁkoen bilduma marraztuko du.
Adib: Show[GraphicsArray[{{Graphics[Line[{{1,2},{3,1}}]],
Graphics[Polygon[{{0,0},{2,2},{2,0}}]]},
{Graphics[Circle[{2,2},{1,2}]],Graphics3D[Cuboid[{1,2,4}]]}}]];
7
