   2. Kapitulua Ekuazio linealezko sistemen ebazpena 2.1 Sarrera Erabiliko dugun notazioaren arabera, Rn espazioko bektoreak zutabe gisan idatziko ditugu: x =      x1 x2 ... xn      ∈ Rn Errenkada gisan idazteko, irauli behar dugu: xt = (x1, x2, . . . , xn). Badaukagu Rn espazioko oinarri kanonikoa: β = {e1, e2, . . . , en}, ei = (0, . . . , i 1, . . . , 0)t izanik. 2.1 Deﬁnizioa. Esango dugu U = (uij) ∈ Mat(n × n, R) matrizea goi-triangeluarra dela baldin eta uij = 0 bada ∀i > j. U =        u11 u12 . . . . . . u1n 0 u22 . . . . . . u2n 0 0 u33 . . . u3n .. . . .. ... .. . 0 0 . . . 0 unn        17  18 2. Kapitulua Ekuazio linealezko sistemen ebazpena 2.2 Deﬁnizioa. Esango dugu L = (lij) ∈ Mat(n×n, R) matrizea behe-triangeluarra dela baldin eta uij = 0 bada ∀i < j. L =         l11 0 . . . . . . 0 l21 l22 . .. 0 l31 l32 l33 . .. ... ... ... ... ... 0 ln1 ln2 . . . . . . lnn         2.3 Deﬁnizioa. Baldin D ∈ Mat(n × n, R) matrizea goi-triangeluar eta behe- triangeluarra bada, orduan D matrize diagonal bat dela esango dugu. D =      d11 0 . . . 0 0 d22 . .. .. . .. . . .. ... 0 0 . . . 0 dnn      2.1 Teorema. Bedi A = (aij) ∈ Mat(n × n, R) matrize triangeluar bat (goi-, behe- edo diagonala). Orduan, |A| = det(A) = n i=1 aii = a11 · a22 · · · · · ann 2.2 Teorema. Bedi A ∈ Mat(n×n, R). Orduan, honako propietate hauek baliokideak dira: • A-ren alderantzizkoa existitzen da (∃A−1); • A ez-singular da, i.e. |A| = 0; • A · x = 0 =⇒ x = 0; • A · x = b sistemak soluzio bakarra du ∀b ∈ R n • A matrizea osatzen duten errenkada-bektoreak linealki independenteak dira. • A matrizea osatzen duten zutabe-bektoreak linealki independenteak dira. Problema orokorra:          a11x1 + a12x2 + . . . + a1nxn = b1 a21x1 + a22x2 + . . . + a2nxn = b2 ... ... = ... an1x1 + an2x2 + . . . + annxn = bn  2.1. Sarrera 19 Goiko sistema era matrizialean adieraz dezakegu: A · x = b, non A = (aij), xt = (x1, . . . , xn), b t = (b1, . . . , bn) diren. Nabaritu A matrizearen alderantzizkoa aurkitzea eta A · x = b motako sistemak ebaztea problema baliokideak direla honako zentzu honetan: A matrizearen alder- antzizkoa kalkulatzen badakigu, orduan A · x = b sistema ebatz dezakegu honako era honetara: A · x = b ⇔ A −1 · A · x = A−1 · b ⇔ x = A−1 · b. Bestalde, A−1 kalkula dezakegu n sistema ebatziz: hartu aintzakotzat honako ma- trize hau X = (x1, x2, . . . , xn), eta idatz dezagun honako sistema matrizial hau: A · (x1, x2, . . . , xn) = A · X = In =      1 0 . . . 0 0 1 . .. ... ... 0 0 . . . 0 1      = (e1, e2, . . . , en) Orduan, badauzkagu n sistema planteatuta, hau da: A · xi = ei, i = 1, 2, . . . , n. Goiko sistema horiek ebatziz, lortuko genuke X = A−1 matrizea. Sarrera hau amaitzeko, ikus ditzagun praktikan agertzen diren bi matrize motak: Neurrizko ordenako matrize dentsoak Matrize horien tamainua n < 100 edo n < 200 ordenakoa da. Gai gehienak eznuluak izanik eta matrize handiegiak ez izanik, matrize osoa biltegiratzen da memorian, eta metodo zuzenak erabiltzen dira (kontrolatu behar da borobiltze-errorea). Ordena haundiko matrize sakabanatuak Tamainu handikoak (n = 1000, edo handiagoa!). Gai eznulu gutxi daude (sakabanatuak), eta orokorrean, diagonal nagusiaren inguruan metatzen dira. Horregatik, ez dago matrize osoa memori- an biltegiratzeko beharrik. Matrize hauekin lanegiteko, iteraziozko metodoak erabiltzen dira (borobiltze errorea ez da hain inportante, baina konbergentzia beharrezkoa da).  20 2. Kapitulua Ekuazio linealezko sistemen ebazpena 2.2 Atzerakako ordezkapena Bedi U ∈ Mat(n × n, R) goi- triangeluarra, eta hartu aintzakotzat U · x = b sistema:                  u11 · x1 + u12 · x2 + . . . + u1,n−1 · xn−1 +u1,n · xn = b1 u22 · x2 + . . . + u2,n−1 · xn−1 +u2,n · xn = b2 . .. ... ... . .. ... ... un−1,n−1 · xn−1 +un−1,n · xn = bn−1 un,n · xn = bn Sistema hori ebazteko, atzerakako ordezkapena algoritmoa erabiliko dugu, honela deskribatzen dena:              xn = bn un,n xk = bk − n j=k+1 uk,j · xj uk,k k = n − 1, n − 2, . . . , 1 (ADIBIDEA) Eragiketa-kostua: Hemendik aurrera, batuketak eta kendurak egiteko denbora mesprezugarritzat hartuko dugu. Ondorioz, eragiketa kostuak estimatzeko, bakarrik hartuko ditugu kontuan biderketak eta zatiketak. • xn kalkulatzeko, zatiketa bat egin behar dugu; • xn−1 lortzeko, biderketa bat eta zatiketa bat; • xn−2 lortzeko, biderketa bi eta zatiketa bat; • . . . • xk lortzeko, (n − k) biderketa eta zatiketa bat; Guztira, N = 1 + n−1 k=1 (n − k + 1) = 1 + 2 + · · · + n = n(n + 1) 2 ≃ n2 2 .  2.3. Ezabapen Gaussiarra 21 2.3 Ezabapen Gaussiarra Estrategia orokorra: A · x = b sistema ebatzi beharrean, aurkituko dugu U · x = c sistema baliokide bat, U matrizea goi- triangeluarra izanik. Sistema berri hori ebatziko da atzerakako ordezkapena metodoaz. Notazioa: Sistemaren matrize hedatua (A|b) notazioaz idatziko dugu. 2.3.1 Pibotaketarik gabeko Gauss metodoa Algoritmo honetako urrats bakoitzean, zutabe batean, A-ren diagonal nagusiaren azpian dauden osagai guztiak anulatzen dira.  (A|b) sistema aldatuko da da etapaz etapa, n etapatan: (A|b) = (A (1)|b(1)), (A(2)|b(2)), . . . , (A(n)|b(n)) = (U|c), k- garren zutabean, diagonalaren azpiko osagaiak deuseztatu aurretik daukagun sis- tema (A(k)|b (k)) izanik. Esplizituki, (A(k)|b (k)) =                  a (k) 11 a (k) 12 . . . a (k) 1,k−1 a (k) 1,k . . . a (k) 1,n 0 a (k) 22 . . . a (k) 2,k−1 a (k) 2,k . . . a (k) 2,n 0 0 . .. .. . .. . .. . .. . . .. a(k) k−1,k−1 a (k) k−1,k . . . a (k) k−1,n ... 0 a (k) k,k . . . a (k) k,n .. . .. . a (k) k+1,k . . . a (k) k+1,n ... ... ... ... 0 0 . . . 0 a (k) n,k . . . a (n) n,n b (k) 1 b (k) 2 .. . b (k) k−1 b (k) k b (k) k+1 .. . b (k) n                  (A(k)|b(k))-tik (A(k+1)|b (k+1)) kalkulatzeko, errenkadaz errenkada egingo dira al- daketak. Bedi E (k) i , (A(k)|b(k)) matrize hedatuaren i-garren errenkada. Esplizituki, E (k) i = (a (k) i,1 , . . . , a (k) i,n |b (k) i ), i = 1, . . . , n. Orduan, (k + 1)-garren matrize hedatuaren errenkadak honako hauek izango dira: E (k+1) i = E (k) i i = 1, . . . , k E (k) i − mik · E (k) k i = k + 1, . . . , n,  22 2. Kapitulua Ekuazio linealezko sistemen ebazpena non mik = a (k) ik a (k) kk zenbakiei biderkatzaileak esango zaien. mik biderkatzaileak apropos deﬁnituta daude (i, k) posizioan dagoen osagaia deuseztatzeko. Beraz, a (k+1) ik = a (k) ik − mik · a (k) kk = a (k) ik − a (k) ik a (k) kk · a (k) kk = 0, i = k + 1, . . . , n. Algoritmoa deskribatzeko beste era: a (k+1) ij =                      a (k) ij i = 1, . . . , n ∀j 0 i = k + 1, . . . , n j = 1, . . . , k a (k) ij − mik · a (k) kj i = k + 1, . . . , n j = k + 1, . . . , n , b (k+1) i = b (k) i i = 1, . . . , k b (k) i − mik · b (k) k i = k + 1, . . . , n. Oharrak: • a (k) kk osagaiari pibote esaten zaio. Nulua baldin bada, prozesua gelditu egin behar dugu. • mik biderkatzaileak bakarrik behin kalkulatzen dira (horregatik idazten dira goi-indizerik gabe!), eta gordetzen dira memorian geroago erabiltzeko. • Erraz froga daiteke aljebra lineal erabiliz (A(k)|b (k)) sistema hedatu guztiak baliokideak direla (are gehiago, |U| = |A(k)| = |A|, k = 1, . . . , n.) • k-garren zutabean, diagonalaren azpiko osagaiak deuseztatu ondoren, k + 1 lehenengo ekuazioak ﬁnkaturik geratzen dira. 2.3 Teorema. Suposa dezagun ezabapen Gaussiarra burutu daitekeela A · x = b sistema ebazteko  (i.e., pibote guztiak eznuluak direla urrats guztietan). Orduan, badaukagu: i) |A| = a (1) 11 · a (2) 22 · · · · · a (n) nn ii) A(n) = U idatziz, orduan, A = L · U faktorizazioa dugu, non L = (lij)  2.3. Ezabapen Gaussiarra 23 matrize behe-triangeluar bat den, eta lij =      0 i < j 1 i = j mij i > j den, hau da: L =            1 0 . . . . . . . . . 0 m21 1 0 .. . m31 m32 1 0 .. . .. . .. . . .. . .. .. . .. . .. . 1 0 mn1 mn2 . . . . . . mn,n−1 1            .   da. 2.21 Teorema (Kahan). aii = 0 ∀i = 1, . . . , n bada, orduan ρ(Tω) ≥ |ω − 1|. Hortaz, lasaikuntza teknika konbergentea izateko, 0 < ω < 2 izan behar du, derrig- orrez. 2.22 Teorema (Ostrowski-Reich). A matrizea simetrikoa, positiboki deﬁnitua bada eta 0 < ω < 2 bada, orduan lasaikuntza metodoak konbergitzen du edozein x (0) ∈ Rn bektoretarako. 2.23 Teorema. A matrizea simetrikoa, positiboki deﬁnitua bada eta gainera tridia- gonal bada, orduan: • i) ρ(TGS) = ρ(TJ)2 < 1; • ii) lasaikuntza metodorako ω optimoa lor daiteke, eta honako hau da: ωopt = 2 1 + 1 − ρ(TJ )2 = 2 1 + 1 − ρ(TGS) . Azken teorema honen baldintzetan, ρ(Tω) = ω − 1 da. (ADIBIDEA)  52 2. Kapitulua Ekuazio linealezko sistemen ebazpena
